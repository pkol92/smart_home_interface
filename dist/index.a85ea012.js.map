{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-8dd877edd6de211e.js","app/main.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","node_modules/interactjs/dist/interact.min.js","node_modules/interactjs/dist/_header.js","node_modules/interactjs/dist/node_modules/browser-pack-flat/_prelude","node_modules/interactjs/dist/packages/@interactjs/utils/isWindow.ts","node_modules/interactjs/dist/packages/@interactjs/utils/window.ts","node_modules/interactjs/dist/packages/@interactjs/utils/is.ts","node_modules/interactjs/dist/packages/@interactjs/actions/drag/plugin.ts","node_modules/interactjs/dist/packages/@interactjs/utils/domObjects.ts","node_modules/interactjs/dist/packages/@interactjs/utils/browser.ts","node_modules/interactjs/dist/packages/@interactjs/utils/domUtils.ts","node_modules/interactjs/dist/packages/@interactjs/utils/extend.ts","node_modules/interactjs/dist/packages/@interactjs/utils/rect.ts","node_modules/interactjs/dist/packages/@interactjs/utils/getOriginXY.ts","node_modules/interactjs/dist/packages/@interactjs/utils/normalizeListeners.ts","node_modules/interactjs/dist/packages/@interactjs/utils/hypot.ts","node_modules/interactjs/dist/packages/@interactjs/utils/pointerExtend.ts","node_modules/interactjs/dist/packages/@interactjs/utils/pointerUtils.ts","node_modules/interactjs/dist/packages/@interactjs/core/BaseEvent.ts","node_modules/interactjs/dist/packages/@interactjs/utils/arr.ts","node_modules/interactjs/dist/packages/@interactjs/actions/drop/DropEvent.ts","node_modules/interactjs/dist/packages/@interactjs/actions/drop/plugin.ts","node_modules/interactjs/dist/packages/@interactjs/actions/gesture/plugin.ts","node_modules/interactjs/dist/packages/@interactjs/actions/resize/plugin.ts","node_modules/interactjs/dist/packages/@interactjs/actions/plugin.ts","node_modules/interactjs/dist/packages/@interactjs/utils/raf.ts","node_modules/interactjs/dist/packages/@interactjs/auto-scroll/plugin.ts","node_modules/interactjs/dist/packages/@interactjs/utils/misc.ts","node_modules/interactjs/dist/packages/@interactjs/auto-start/InteractableMethods.ts","node_modules/interactjs/dist/packages/@interactjs/auto-start/base.ts","node_modules/interactjs/dist/packages/@interactjs/auto-start/dragAxis.ts","node_modules/interactjs/dist/packages/@interactjs/auto-start/hold.ts","node_modules/interactjs/dist/packages/@interactjs/auto-start/plugin.ts","node_modules/interactjs/dist/packages/@interactjs/core/interactablePreventDefault.ts","node_modules/interactjs/dist/packages/@interactjs/dev-tools/visualizer/plugin.ts","node_modules/interactjs/dist/packages/@interactjs/dev-tools/plugin.ts","node_modules/interactjs/dist/packages/@interactjs/utils/clone.ts","node_modules/interactjs/dist/packages/@interactjs/modifiers/Modification.ts","node_modules/interactjs/dist/packages/@interactjs/modifiers/base.ts","node_modules/interactjs/dist/packages/@interactjs/core/options.ts","node_modules/interactjs/dist/packages/@interactjs/core/InteractEvent.ts","node_modules/interactjs/dist/packages/@interactjs/core/PointerInfo.ts","node_modules/interactjs/dist/packages/@interactjs/core/Interaction.ts","node_modules/interactjs/dist/packages/@interactjs/offset/plugin.ts","node_modules/interactjs/dist/packages/@interactjs/inertia/plugin.ts","node_modules/interactjs/dist/packages/@interactjs/core/Eventable.ts","node_modules/interactjs/dist/packages/@interactjs/core/isNonNativeEvent.ts","node_modules/interactjs/dist/packages/@interactjs/core/InteractStatic.ts","node_modules/interactjs/dist/packages/@interactjs/core/Interactable.ts","node_modules/interactjs/dist/packages/@interactjs/core/InteractableSet.ts","node_modules/interactjs/dist/packages/@interactjs/core/events.ts","node_modules/interactjs/dist/packages/@interactjs/core/interactionFinder.ts","node_modules/interactjs/dist/packages/@interactjs/core/interactions.ts","node_modules/interactjs/dist/packages/@interactjs/core/scope.ts","node_modules/interactjs/dist/packages/@interactjs/interact/index.ts","node_modules/interactjs/dist/packages/@interactjs/snappers/edgeTarget.ts","node_modules/interactjs/dist/packages/@interactjs/snappers/elements.ts","node_modules/interactjs/dist/packages/@interactjs/snappers/grid.ts","node_modules/interactjs/dist/packages/@interactjs/snappers/plugin.ts","node_modules/interactjs/dist/packages/@interactjs/modifiers/aspectRatio.ts","node_modules/interactjs/dist/packages/@interactjs/modifiers/noop.ts","node_modules/interactjs/dist/packages/@interactjs/modifiers/restrict/pointer.ts","node_modules/interactjs/dist/packages/@interactjs/modifiers/restrict/edges.ts","node_modules/interactjs/dist/packages/@interactjs/modifiers/restrict/rect.ts","node_modules/interactjs/dist/packages/@interactjs/modifiers/restrict/size.ts","node_modules/interactjs/dist/packages/@interactjs/modifiers/snap/pointer.ts","node_modules/interactjs/dist/packages/@interactjs/modifiers/snap/size.ts","node_modules/interactjs/dist/packages/@interactjs/modifiers/snap/edges.ts","node_modules/interactjs/dist/packages/@interactjs/modifiers/all.ts","node_modules/interactjs/dist/packages/@interactjs/modifiers/plugin.ts","node_modules/interactjs/dist/packages/@interactjs/pointer-events/PointerEvent.ts","node_modules/interactjs/dist/packages/@interactjs/pointer-events/base.ts","node_modules/interactjs/dist/packages/@interactjs/pointer-events/holdRepeat.ts","node_modules/interactjs/dist/packages/@interactjs/pointer-events/interactableTargets.ts","node_modules/interactjs/dist/packages/@interactjs/pointer-events/plugin.ts","node_modules/interactjs/dist/packages/@interactjs/reflow/plugin.ts","node_modules/interactjs/dist/packages/@interactjs/interactjs/index.ts","node_modules/interactjs/dist/packages/interactjs/index.ts","node_modules/interactjs/dist/node_modules/browser-pack-flat/_postlude"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"d08bdbbfa85ea012\";\"use strict\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: mixed;\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function accept(fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function dispose(fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData = undefined;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, acceptedAssets\n/*: {|[string]: boolean|} */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // $FlowFixMe\n\n  ws.onmessage = function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    acceptedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      var assets = data.assets.filter(function (asset) {\n        return asset.envHash === HMR_ENV_HASH;\n      }); // Handle HMR Update\n\n      var handled = assets.every(function (asset) {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear();\n        assets.forEach(function (asset) {\n          hmrApply(module.bundle.root, asset);\n        });\n\n        for (var i = 0; i < assetsToAccept.length; i++) {\n          var id = assetsToAccept[i][1];\n\n          if (!acceptedAssets[id]) {\n            hmrAcceptRun(assetsToAccept[i][0], id);\n          }\n        }\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      var _iterator = _createForOfIteratorHelper(data.diagnostics.ansi),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var ansiDiagnostic = _step.value;\n          var stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n          console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  var errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  var _iterator2 = _createForOfIteratorHelper(diagnostics),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var diagnostic = _step2.value;\n      var stack = diagnostic.codeframe ? diagnostic.codeframe : diagnostic.stack;\n      errorHTML += \"\\n      <div>\\n        <div style=\\\"font-size: 18px; font-weight: bold; margin-top: 20px;\\\">\\n          \\uD83D\\uDEA8 \".concat(diagnostic.message, \"\\n        </div>\\n        <pre>\").concat(stack, \"</pre>\\n        <div>\\n          \").concat(diagnostic.hints.map(function (hint) {\n        return '<div>💡 ' + hint + '</div>';\n      }).join(''), \"\\n        </div>\\n        \").concat(diagnostic.documentation ? \"<div>\\uD83D\\uDCDD <a style=\\\"color: violet\\\" href=\\\"\".concat(diagnostic.documentation, \"\\\" target=\\\"_blank\\\">Learn more</a></div>\") : '', \"\\n      </div>\\n    \");\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(window.location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    var deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        var oldDeps = modules[asset.id][1];\n\n        for (var dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            var id = oldDeps[dep];\n            var parents = getParents(module.bundle.root, id);\n\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n\n      var fn = new Function('require', 'module', 'exports', asset.output);\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrDelete(bundle, id) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    var deps = modules[id][1];\n    var orphans = [];\n\n    for (var dep in deps) {\n      var parents = getParents(module.bundle.root, deps[dep]);\n\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n\n\n    delete modules[id];\n    delete bundle.cache[id]; // Now delete the orphans.\n\n    orphans.forEach(function (id) {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  } // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n\n\n  var parents = getParents(module.bundle.root, id);\n  var accepted = false;\n\n  while (parents.length > 0) {\n    var v = parents.shift();\n    var a = hmrAcceptCheckOne(v[0], v[1], null);\n\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      var p = getParents(module.bundle.root, v[1]);\n\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n\n      parents.push.apply(parents, _toConsumableArray(p));\n    }\n  }\n\n  return accepted;\n}\n\nfunction hmrAcceptCheckOne(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToAccept.push([bundle, id]);\n\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n}\n\nfunction hmrAcceptRun(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n  cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n\n  acceptedAssets[id] = true;\n}","import interact from \"interactjs\";\r\n\r\nconst divPanel = document.getElementById(\"deviceList\");\r\nconst listDevices = document.createElement(\"ul\");\r\nlistDevices.setAttribute(\"id\", \"mainList\");\r\n\r\ndivPanel.append(listDevices);\r\n\r\nconst btn = document.getElementById(\"btn\");\r\nconst btnDetails = document.getElementById(\"btnDetails\")\r\n\r\nbtn.addEventListener(\"click\", () => {\r\n  fetch(\"/api/v1/devices/\")\r\n  .then(response => {\r\n    if (!response.ok) throw Error(response.statusText);\r\n    return response.json();\r\n  })\r\n  .then(json => buildList(json));\r\n});\r\n\r\nconst buildList = (data) => {\r\n  data.map((device) => {\r\n    createList(device, \"mainList\");\r\n  })\r\n};\r\n\r\nconst createList = (list, divId) => {\r\n  const div = document.getElementById(`${divId}`);\r\n  const ul = document.createElement('ul');\r\n\r\n  for (const key in list) {\r\n      if (list.hasOwnProperty(key)) {\r\n          let li = document.createElement('li');\r\n          li.innerText = `${key}: ${list[key]}`;\r\n          ul.append(li);\r\n      }\r\n  }\r\n\r\n  div.appendChild(ul);\r\n};\r\n\r\n// const showDetails = (id) => {\r\n//   fetch(`/api/v1/devices/${id}`)\r\n//   .then(response => {\r\n//     if (!response.ok) throw Error(response.statusText);\r\n//     return response.json();\r\n//   })\r\n//   .then(json => createList(json, \"deviceView\"));\r\n// }\r\n\r\n// btnDetails.addEventListener(\"click\", () => {\r\n//   showDetails(3)\r\n// });\r\n\r\n\r\nconst position = { x: 0, y: 0 }\r\n\r\ninteract('.deviceView').draggable({\r\n  modifiers: [\r\n    interact.modifiers.restrictRect({\r\n      restriction: 'parent',\r\n      endOnly: true\r\n    })\r\n  ],\r\n  listeners: {\r\n    move (event) {\r\n      position.x += event.dx\r\n      position.y += event.dy\r\n\r\n      event.target.style.transform =\r\n        `translate(${position.x}px, ${position.y}px)`\r\n    },\r\n  }\r\n})\r\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n",null,"/* interact.js 1.10.11 | https://interactjs.io/license */\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.interact = f()}})(function(){var define,module,exports;\n","export default (thing: any) => !!(thing && thing.Window) && thing instanceof thing.Window\n","import isWindow from './isWindow'\n\nexport let realWindow = undefined as Window\n\nlet win = undefined as Window\nexport { win as window }\n\nexport function init (window: Window & { wrap?: (...args: any[]) => any }) {\n  // get wrapped window if using Shadow DOM polyfill\n\n  realWindow = window\n\n  // create a TextNode\n  const el = window.document.createTextNode('')\n\n  // check if it's wrapped by a polyfill\n  if (el.ownerDocument !== window.document && typeof window.wrap === 'function' && window.wrap(el) === el) {\n    // use wrapped window\n    window = window.wrap(window)\n  }\n\n  win = window\n}\n\nif (typeof window !== 'undefined' && !!window) {\n  init(window)\n}\n\nexport function getWindow (node: any) {\n  if (isWindow(node)) {\n    return node\n  }\n\n  const rootNode = node.ownerDocument || node\n\n  return rootNode.defaultView || win.window\n}\n","import type { Element } from '@interactjs/types/index'\n\nimport isWindow from './isWindow'\nimport * as win from './window'\n\nconst window = (thing: any): thing is Window => thing === win.window || isWindow(thing)\n\nconst docFrag = (thing: any): thing is DocumentFragment => object(thing) && thing.nodeType === 11\n\nconst object = (thing: any): thing is { [index: string]: any } => !!thing && typeof thing === 'object'\n\nconst func = (thing: any): thing is (...args: any[]) => any => typeof thing === 'function'\n\nconst number = (thing: any): thing is number => typeof thing === 'number'\n\nconst bool = (thing: any): thing is boolean => typeof thing === 'boolean'\n\nconst string = (thing: any): thing is string => typeof thing === 'string'\n\nconst element = (thing: any): thing is Element => {\n  if (!thing || typeof thing !== 'object') {\n    return false\n  }\n\n  // eslint-disable-next-line import/no-named-as-default-member\n  const _window = win.getWindow(thing) || win.window\n\n  return /object|function/.test(typeof _window.Element)\n    ? thing instanceof _window.Element // DOM2\n    : thing.nodeType === 1 && typeof thing.nodeName === 'string'\n}\n\nconst plainObject: typeof object = (thing: any): thing is { [index: string]: any } =>\n  object(thing) && !!thing.constructor && /function Object\\b/.test(thing.constructor.toString())\n\nconst array = <T extends unknown>(thing: any): thing is T[] =>\n  object(thing) && typeof thing.length !== 'undefined' && func(thing.splice)\n\nexport default {\n  window,\n  docFrag,\n  object,\n  func,\n  number,\n  bool,\n  string,\n  element,\n  plainObject,\n  array,\n}\n","import type { InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { Interactable } from '@interactjs/core/Interactable'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { ActionMethod, DraggableOptions, DropzoneOptions } from '@interactjs/types/index'\nimport is from '@interactjs/utils/is'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    draggable: DraggableMethod\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface ActionDefaults {\n    drag: DraggableOptions\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface ActionMap {\n    drag?: typeof drag\n  }\n}\n\nexport type DragEvent = InteractEvent<'drag'>\n\nexport type DraggableMethod = ActionMethod<DraggableOptions>\n\nfunction install (scope: Scope) {\n  const { actions, Interactable, defaults } = scope\n\n  Interactable.prototype.draggable = drag.draggable\n\n  actions.map.drag = drag\n  actions.methodDict.drag = 'draggable'\n\n  defaults.actions.drag = drag.defaults\n}\n\nfunction beforeMove ({ interaction }) {\n  if (interaction.prepared.name !== 'drag') return\n\n  const axis = interaction.prepared.axis\n\n  if (axis === 'x') {\n    interaction.coords.cur.page.y = interaction.coords.start.page.y\n    interaction.coords.cur.client.y = interaction.coords.start.client.y\n\n    interaction.coords.velocity.client.y = 0\n    interaction.coords.velocity.page.y = 0\n  } else if (axis === 'y') {\n    interaction.coords.cur.page.x = interaction.coords.start.page.x\n    interaction.coords.cur.client.x = interaction.coords.start.client.x\n\n    interaction.coords.velocity.client.x = 0\n    interaction.coords.velocity.page.x = 0\n  }\n}\n\nfunction move ({ iEvent, interaction }) {\n  if (interaction.prepared.name !== 'drag') return\n\n  const axis = interaction.prepared.axis\n\n  if (axis === 'x' || axis === 'y') {\n    const opposite = axis === 'x' ? 'y' : 'x'\n\n    iEvent.page[opposite] = interaction.coords.start.page[opposite]\n    iEvent.client[opposite] = interaction.coords.start.client[opposite]\n    iEvent.delta[opposite] = 0\n  }\n}\n\n/**\n * ```js\n * interact(element).draggable({\n *     onstart: function (event) {},\n *     onmove : function (event) {},\n *     onend  : function (event) {},\n *\n *     // the axis in which the first movement must be\n *     // for the drag sequence to start\n *     // 'xy' by default - any direction\n *     startAxis: 'x' || 'y' || 'xy',\n *\n *     // 'xy' by default - don't restrict to one axis (move in any direction)\n *     // 'x' or 'y' to restrict movement to either axis\n *     // 'start' to restrict movement to the axis the drag started in\n *     lockAxis: 'x' || 'y' || 'xy' || 'start',\n *\n *     // max number of drags that can happen concurrently\n *     // with elements of this Interactable. Infinity by default\n *     max: Infinity,\n *\n *     // max number of drags that can target the same element+Interactable\n *     // 1 by default\n *     maxPerElement: 2\n * })\n *\n * var isDraggable = interact('element').draggable(); // true\n * ```\n *\n * Get or set whether drag actions can be performed on the target\n *\n * @alias Interactable.prototype.draggable\n *\n * @param {boolean | object} [options] true/false or An object with event\n * listeners to be fired on drag events (object makes the Interactable\n * draggable)\n * @return {boolean | Interactable} boolean indicating if this can be the\n * target of drag events, or this Interctable\n */\nconst draggable: DraggableMethod = function draggable (\n  this: Interactable,\n  options?: DraggableOptions | boolean,\n): any {\n  if (is.object(options)) {\n    this.options.drag.enabled = options.enabled !== false\n    this.setPerAction('drag', options)\n    this.setOnEvents('drag', options)\n\n    if (/^(xy|x|y|start)$/.test(options.lockAxis)) {\n      this.options.drag.lockAxis = options.lockAxis\n    }\n    if (/^(xy|x|y)$/.test(options.startAxis)) {\n      this.options.drag.startAxis = options.startAxis\n    }\n\n    return this\n  }\n\n  if (is.bool(options)) {\n    this.options.drag.enabled = options\n\n    return this\n  }\n\n  return this.options.drag\n}\n\nconst drag: Plugin = {\n  id: 'actions/drag',\n  install,\n  listeners: {\n    'interactions:before-action-move': beforeMove,\n    'interactions:action-resume': beforeMove,\n\n    // dragmove\n    'interactions:action-move': move,\n    'auto-start:check': (arg) => {\n      const { interaction, interactable, buttons } = arg\n      const dragOptions = interactable.options.drag\n\n      if (\n        !(dragOptions && dragOptions.enabled) ||\n        // check mouseButton setting if the pointer is down\n        (interaction.pointerIsDown &&\n          /mouse|pointer/.test(interaction.pointerType) &&\n          (buttons & interactable.options.drag.mouseButtons) === 0)\n      ) {\n        return undefined\n      }\n\n      arg.action = {\n        name: 'drag',\n        axis: dragOptions.lockAxis === 'start' ? dragOptions.startAxis : dragOptions.lockAxis,\n      }\n\n      return false\n    },\n  },\n  draggable,\n  beforeMove,\n  move,\n  defaults: {\n    startAxis: 'xy',\n    lockAxis: 'xy',\n  } as DropzoneOptions,\n\n  getCursor () {\n    return 'move'\n  },\n}\n\nexport default drag\n","const domObjects: {\n  init: any\n  document: Document\n  DocumentFragment: typeof DocumentFragment\n  SVGElement: typeof SVGElement\n  SVGSVGElement: typeof SVGSVGElement\n  SVGElementInstance: any\n  Element: typeof Element\n  HTMLElement: typeof HTMLElement\n  Event: typeof Event\n  Touch: typeof Touch\n  PointerEvent: typeof PointerEvent\n} = {\n  init,\n  document: null,\n  DocumentFragment: null,\n  SVGElement: null,\n  SVGSVGElement: null,\n  SVGElementInstance: null,\n  Element: null,\n  HTMLElement: null,\n  Event: null,\n  Touch: null,\n  PointerEvent: null,\n}\n\nfunction blank () {}\n\nexport default domObjects\n\nfunction init (window: Window) {\n  const win = window as any\n\n  domObjects.document = win.document\n  domObjects.DocumentFragment = win.DocumentFragment || blank\n  domObjects.SVGElement = win.SVGElement || blank\n  domObjects.SVGSVGElement = win.SVGSVGElement || blank\n  domObjects.SVGElementInstance = win.SVGElementInstance || blank\n  domObjects.Element = win.Element || blank\n  domObjects.HTMLElement = win.HTMLElement || domObjects.Element\n\n  domObjects.Event = win.Event\n  domObjects.Touch = win.Touch || blank\n  domObjects.PointerEvent = win.PointerEvent || win.MSPointerEvent\n}\n","import domObjects from './domObjects'\nimport is from './is'\n\nconst browser = {\n  init,\n  supportsTouch: null as boolean,\n  supportsPointerEvent: null as boolean,\n  isIOS7: null as boolean,\n  isIOS: null as boolean,\n  isIe9: null as boolean,\n  isOperaMobile: null as boolean,\n  prefixedMatchesSelector: null as 'matches',\n  pEventTypes: null as {\n    up: string\n    down: string\n    over: string\n    out: string\n    move: string\n    cancel: string\n  },\n  wheelEvent: null as string,\n}\n\nfunction init (window: any) {\n  const Element = domObjects.Element\n  const navigator: Partial<Navigator> = window.navigator || {}\n\n  // Does the browser support touch input?\n  browser.supportsTouch =\n    'ontouchstart' in window ||\n    (is.func(window.DocumentTouch) && domObjects.document instanceof window.DocumentTouch)\n\n  // Does the browser support PointerEvents\n  browser.supportsPointerEvent = navigator.pointerEnabled !== false && !!domObjects.PointerEvent\n\n  browser.isIOS = /iP(hone|od|ad)/.test(navigator.platform)\n\n  // scrolling doesn't change the result of getClientRects on iOS 7\n  browser.isIOS7 = /iP(hone|od|ad)/.test(navigator.platform) && /OS 7[^\\d]/.test(navigator.appVersion)\n\n  browser.isIe9 = /MSIE 9/.test(navigator.userAgent)\n\n  // Opera Mobile must be handled differently\n  browser.isOperaMobile =\n    navigator.appName === 'Opera' && browser.supportsTouch && /Presto/.test(navigator.userAgent)\n\n  // prefix matchesSelector\n  browser.prefixedMatchesSelector = ('matches' in Element.prototype\n    ? 'matches'\n    : 'webkitMatchesSelector' in Element.prototype\n      ? 'webkitMatchesSelector'\n      : 'mozMatchesSelector' in Element.prototype\n        ? 'mozMatchesSelector'\n        : 'oMatchesSelector' in Element.prototype\n          ? 'oMatchesSelector'\n          : 'msMatchesSelector') as 'matches'\n\n  browser.pEventTypes = browser.supportsPointerEvent\n    ? domObjects.PointerEvent === window.MSPointerEvent\n      ? {\n        up: 'MSPointerUp',\n        down: 'MSPointerDown',\n        over: 'mouseover',\n        out: 'mouseout',\n        move: 'MSPointerMove',\n        cancel: 'MSPointerCancel',\n      }\n      : {\n        up: 'pointerup',\n        down: 'pointerdown',\n        over: 'pointerover',\n        out: 'pointerout',\n        move: 'pointermove',\n        cancel: 'pointercancel',\n      }\n    : null\n\n  // because Webkit and Opera still use 'mousewheel' event type\n  browser.wheelEvent = domObjects.document && 'onmousewheel' in domObjects.document ? 'mousewheel' : 'wheel'\n}\n\nexport default browser\n","import type { Rect, Target, Element } from '@interactjs/types/index'\n\nimport browser from './browser'\nimport domObjects from './domObjects'\nimport is from './is'\nimport * as win from './window'\n\nexport function nodeContains (parent: Node, child: Node) {\n  if (parent.contains) {\n    return parent.contains(child as Node)\n  }\n\n  while (child) {\n    if (child === parent) {\n      return true\n    }\n\n    child = (child as Node).parentNode\n  }\n\n  return false\n}\n\nexport function closest (element: Node, selector: string) {\n  while (is.element(element)) {\n    if (matchesSelector(element, selector)) {\n      return element\n    }\n\n    element = parentNode(element)\n  }\n\n  return null\n}\n\nexport function parentNode (node: Node | Document) {\n  let parent = node.parentNode\n\n  if (is.docFrag(parent)) {\n    // skip past #shado-root fragments\n    // tslint:disable-next-line\n    while ((parent = (parent as any).host) && is.docFrag(parent)) {\n      continue\n    }\n\n    return parent\n  }\n\n  return parent\n}\n\nexport function matchesSelector (element: Element, selector: string) {\n  // remove /deep/ from selectors if shadowDOM polyfill is used\n  if (win.window !== win.realWindow) {\n    selector = selector.replace(/\\/deep\\//g, ' ')\n  }\n\n  return element[browser.prefixedMatchesSelector](selector)\n}\n\nconst getParent = (el: Node | Document | ShadowRoot) => el.parentNode || (el as ShadowRoot).host\n\n// Test for the element that's \"above\" all other qualifiers\nexport function indexOfDeepestElement (elements: Element[] | NodeListOf<globalThis.Element>) {\n  let deepestNodeParents: Node[] = []\n  let deepestNodeIndex: number\n\n  for (let i = 0; i < elements.length; i++) {\n    const currentNode = elements[i]\n    const deepestNode: Node = elements[deepestNodeIndex]\n\n    // node may appear in elements array multiple times\n    if (!currentNode || i === deepestNodeIndex) {\n      continue\n    }\n\n    if (!deepestNode) {\n      deepestNodeIndex = i\n      continue\n    }\n\n    const currentNodeParent = getParent(currentNode)\n    const deepestNodeParent = getParent(deepestNode)\n\n    // check if the deepest or current are document.documentElement/rootElement\n    // - if the current node is, do nothing and continue\n    if (currentNodeParent === currentNode.ownerDocument) {\n      continue\n    }\n    // - if deepest is, update with the current node and continue to next\n    else if (deepestNodeParent === currentNode.ownerDocument) {\n      deepestNodeIndex = i\n      continue\n    }\n\n    // compare zIndex of siblings\n    if (currentNodeParent === deepestNodeParent) {\n      if (zIndexIsHigherThan(currentNode, deepestNode)) {\n        deepestNodeIndex = i\n      }\n\n      continue\n    }\n\n    // populate the ancestry array for the latest deepest node\n    deepestNodeParents = deepestNodeParents.length ? deepestNodeParents : getNodeParents(deepestNode)\n\n    let ancestryStart: Node\n\n    // if the deepest node is an HTMLElement and the current node is a non root svg element\n    if (\n      deepestNode instanceof domObjects.HTMLElement &&\n      currentNode instanceof domObjects.SVGElement &&\n      !(currentNode instanceof domObjects.SVGSVGElement)\n    ) {\n      // TODO: is this check necessary? Was this for HTML elements embedded in SVG?\n      if (currentNode === deepestNodeParent) {\n        continue\n      }\n\n      ancestryStart = currentNode.ownerSVGElement\n    } else {\n      ancestryStart = currentNode\n    }\n\n    const currentNodeParents = getNodeParents(ancestryStart, deepestNode.ownerDocument)\n    let commonIndex = 0\n\n    // get (position of closest common ancestor) + 1\n    while (\n      currentNodeParents[commonIndex] &&\n      currentNodeParents[commonIndex] === deepestNodeParents[commonIndex]\n    ) {\n      commonIndex++\n    }\n\n    const parents = [\n      currentNodeParents[commonIndex - 1],\n      currentNodeParents[commonIndex],\n      deepestNodeParents[commonIndex],\n    ]\n\n    if (parents[0]) {\n      let child = parents[0].lastChild\n\n      while (child) {\n        if (child === parents[1]) {\n          deepestNodeIndex = i\n          deepestNodeParents = currentNodeParents\n\n          break\n        } else if (child === parents[2]) {\n          break\n        }\n\n        child = child.previousSibling\n      }\n    }\n  }\n\n  return deepestNodeIndex\n}\n\nfunction getNodeParents (node: Node, limit?: Node) {\n  const parents: Node[] = []\n  let parent: Node = node\n  let parentParent: Node\n\n  while ((parentParent = getParent(parent)) && parent !== limit && parentParent !== parent.ownerDocument) {\n    parents.unshift(parent)\n    parent = parentParent\n  }\n\n  return parents\n}\n\nfunction zIndexIsHigherThan (higherNode: Node, lowerNode: Node) {\n  const higherIndex = parseInt(win.getWindow(higherNode).getComputedStyle(higherNode).zIndex, 10) || 0\n  const lowerIndex = parseInt(win.getWindow(lowerNode).getComputedStyle(lowerNode).zIndex, 10) || 0\n\n  return higherIndex >= lowerIndex\n}\n\nexport function matchesUpTo (element: Element, selector: string, limit: Node) {\n  while (is.element(element)) {\n    if (matchesSelector(element, selector)) {\n      return true\n    }\n\n    element = parentNode(element) as Element\n\n    if (element === limit) {\n      return matchesSelector(element, selector)\n    }\n  }\n\n  return false\n}\n\nexport function getActualElement (element: Element) {\n  return (element as SVGElement).correspondingUseElement || element\n}\n\nexport function getScrollXY (relevantWindow?: Window) {\n  relevantWindow = relevantWindow || win.window\n  return {\n    x: relevantWindow.scrollX || relevantWindow.document.documentElement.scrollLeft,\n    y: relevantWindow.scrollY || relevantWindow.document.documentElement.scrollTop,\n  }\n}\n\nexport function getElementClientRect (element: Element): Required<Rect> {\n  const clientRect =\n    element instanceof domObjects.SVGElement ? element.getBoundingClientRect() : element.getClientRects()[0]\n\n  return (\n    clientRect && {\n      left: clientRect.left,\n      right: clientRect.right,\n      top: clientRect.top,\n      bottom: clientRect.bottom,\n      width: clientRect.width || clientRect.right - clientRect.left,\n      height: clientRect.height || clientRect.bottom - clientRect.top,\n    }\n  )\n}\n\nexport function getElementRect (element: Element) {\n  const clientRect = getElementClientRect(element)\n\n  if (!browser.isIOS7 && clientRect) {\n    const scroll = getScrollXY(win.getWindow(element))\n\n    clientRect.left += scroll.x\n    clientRect.right += scroll.x\n    clientRect.top += scroll.y\n    clientRect.bottom += scroll.y\n  }\n\n  return clientRect\n}\n\nexport function getPath (node: Node | Document) {\n  const path = []\n\n  while (node) {\n    path.push(node)\n    node = parentNode(node)\n  }\n\n  return path\n}\n\nexport function trySelector (value: Target) {\n  if (!is.string(value)) {\n    return false\n  }\n\n  // an exception will be raised if it is invalid\n  domObjects.document.querySelector(value)\n  return true\n}\n","export default function extend<T, U extends object> (dest: U & Partial<T>, source: T): T & U {\n  for (const prop in source) {\n    ;((dest as unknown) as T)[prop] = source[prop]\n  }\n\n  const ret = dest as T & U\n\n  return ret\n}\n","import type {\n  HasGetRect,\n  RectResolvable,\n  Rect,\n  Element,\n  Point,\n  FullRect,\n  EdgeOptions,\n} from '@interactjs/types'\n\nimport { closest, getElementRect, parentNode } from './domUtils'\nimport extend from './extend'\nimport is from './is'\n\nexport function getStringOptionResult (value: any, target: HasGetRect, element: Node) {\n  if (value === 'parent') {\n    return parentNode(element)\n  }\n\n  if (value === 'self') {\n    return target.getRect(element as Element)\n  }\n\n  return closest(element, value)\n}\n\nexport function resolveRectLike<T extends any[]> (\n  value: RectResolvable<T>,\n  target?: HasGetRect,\n  element?: Node,\n  functionArgs?: T,\n) {\n  let returnValue: any = value\n  if (is.string(returnValue)) {\n    returnValue = getStringOptionResult(returnValue, target, element)\n  } else if (is.func(returnValue)) {\n    returnValue = returnValue(...functionArgs)\n  }\n\n  if (is.element(returnValue)) {\n    returnValue = getElementRect(returnValue)\n  }\n\n  return returnValue as Rect\n}\n\nexport function rectToXY (rect: Rect | Point) {\n  return (\n    rect && {\n      x: 'x' in rect ? rect.x : rect.left,\n      y: 'y' in rect ? rect.y : rect.top,\n    }\n  )\n}\n\nexport function xywhToTlbr<T extends Partial<Rect & Point>> (rect: T) {\n  if (rect && !('left' in rect && 'top' in rect)) {\n    rect = extend({}, rect)\n\n    rect.left = rect.x || 0\n    rect.top = rect.y || 0\n    rect.right = rect.right || rect.left + rect.width\n    rect.bottom = rect.bottom || rect.top + rect.height\n  }\n\n  return rect as Rect & T\n}\n\nexport function tlbrToXywh (rect: Rect & Partial<Point>) {\n  if (rect && !('x' in rect && 'y' in rect)) {\n    rect = extend({}, rect)\n\n    rect.x = rect.left || 0\n    rect.y = rect.top || 0\n    rect.width = rect.width || (rect.right || 0) - rect.x\n    rect.height = rect.height || (rect.bottom || 0) - rect.y\n  }\n\n  return rect as FullRect & Point\n}\n\nexport function addEdges (edges: EdgeOptions, rect: Rect, delta: Point) {\n  if (edges.left) {\n    rect.left += delta.x\n  }\n  if (edges.right) {\n    rect.right += delta.x\n  }\n  if (edges.top) {\n    rect.top += delta.y\n  }\n  if (edges.bottom) {\n    rect.bottom += delta.y\n  }\n\n  rect.width = rect.right - rect.left\n  rect.height = rect.bottom - rect.top\n}\n","import type { PerActionDefaults } from '@interactjs/core/options'\nimport type { ActionName } from '@interactjs/core/scope'\nimport type { HasGetRect } from '@interactjs/types/index'\n\nimport { rectToXY, resolveRectLike } from './rect'\n\nexport default function (\n  target: HasGetRect & { options: PerActionDefaults },\n  element: Node,\n  actionName?: ActionName,\n) {\n  const actionOptions = (target.options as any)[actionName]\n  const actionOrigin = actionOptions && actionOptions.origin\n  const origin = actionOrigin || target.options.origin\n\n  const originRect = resolveRectLike(origin, target, element, [target && element])\n\n  return rectToXY(originRect) || { x: 0, y: 0 }\n}\n","import type { EventTypes, Listener, ListenersArg } from '@interactjs/types/index'\n\nimport extend from './extend'\nimport is from './is'\n\nexport interface NormalizedListeners {\n  [type: string]: Listener[]\n}\n\nexport default function normalize (\n  type: EventTypes,\n  listeners?: ListenersArg | ListenersArg[],\n  result?: NormalizedListeners,\n): NormalizedListeners {\n  result = result || {}\n\n  if (is.string(type) && type.search(' ') !== -1) {\n    type = split(type)\n  }\n\n  if (is.array(type)) {\n    return type.reduce<NormalizedListeners>((acc, t) => extend(acc, normalize(t, listeners, result)), result)\n  }\n\n  // ({ type: fn }) -> ('', { type: fn })\n  if (is.object(type)) {\n    listeners = type\n    type = ''\n  }\n\n  if (is.func(listeners)) {\n    result[type] = result[type] || []\n    result[type].push(listeners)\n  } else if (is.array(listeners)) {\n    for (const l of listeners) {\n      normalize(type, l, result)\n    }\n  } else if (is.object(listeners)) {\n    for (const prefix in listeners) {\n      const combinedTypes = split(prefix).map((p) => `${type}${p}`)\n\n      normalize(combinedTypes, listeners[prefix], result)\n    }\n  }\n\n  return result as NormalizedListeners\n}\n\nfunction split (type: string) {\n  return type.trim().split(/ +/)\n}\n","export default (x: number, y: number) => Math.sqrt(x * x + y * y)\n","function pointerExtend<T> (dest: Partial<T>, source: T) {\n  for (const prop in source) {\n    const prefixedPropREs = pointerExtend.prefixedPropREs\n    let deprecated = false\n\n    // skip deprecated prefixed properties\n    for (const vendor in prefixedPropREs) {\n      if (prop.indexOf(vendor) === 0 && prefixedPropREs[vendor].test(prop)) {\n        deprecated = true\n        break\n      }\n    }\n\n    if (!deprecated && typeof source[prop] !== 'function') {\n      dest[prop] = source[prop]\n    }\n  }\n  return dest\n}\n\npointerExtend.prefixedPropREs = {\n  webkit: /(Movement[XY]|Radius[XY]|RotationAngle|Force)$/,\n  moz: /(Pressure)$/,\n} as { [prefix: string]: RegExp }\n\nexport default pointerExtend\n","import type { InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { CoordsSetMember, PointerType, Point, PointerEventType, Element } from '@interactjs/types/index'\n\nimport browser from './browser'\nimport dom from './domObjects'\nimport * as domUtils from './domUtils'\nimport hypot from './hypot'\nimport is from './is'\nimport pointerExtend from './pointerExtend'\n\nexport function copyCoords (dest: CoordsSetMember, src: CoordsSetMember) {\n  dest.page = dest.page || ({} as any)\n  dest.page.x = src.page.x\n  dest.page.y = src.page.y\n\n  dest.client = dest.client || ({} as any)\n  dest.client.x = src.client.x\n  dest.client.y = src.client.y\n\n  dest.timeStamp = src.timeStamp\n}\n\nexport function setCoordDeltas (targetObj: CoordsSetMember, prev: CoordsSetMember, cur: CoordsSetMember) {\n  targetObj.page.x = cur.page.x - prev.page.x\n  targetObj.page.y = cur.page.y - prev.page.y\n  targetObj.client.x = cur.client.x - prev.client.x\n  targetObj.client.y = cur.client.y - prev.client.y\n  targetObj.timeStamp = cur.timeStamp - prev.timeStamp\n}\n\nexport function setCoordVelocity (targetObj: CoordsSetMember, delta: CoordsSetMember) {\n  const dt = Math.max(delta.timeStamp / 1000, 0.001)\n\n  targetObj.page.x = delta.page.x / dt\n  targetObj.page.y = delta.page.y / dt\n  targetObj.client.x = delta.client.x / dt\n  targetObj.client.y = delta.client.y / dt\n  targetObj.timeStamp = dt\n}\n\nexport function setZeroCoords (targetObj: CoordsSetMember) {\n  targetObj.page.x = 0\n  targetObj.page.y = 0\n  targetObj.client.x = 0\n  targetObj.client.y = 0\n}\n\nexport function isNativePointer (pointer: any) {\n  return pointer instanceof dom.Event || pointer instanceof dom.Touch\n}\n\n// Get specified X/Y coords for mouse or event.touches[0]\nexport function getXY (type: string, pointer: PointerType | InteractEvent, xy: Point) {\n  xy = xy || ({} as Point)\n  type = type || 'page'\n\n  xy.x = pointer[(type + 'X') as keyof PointerType]\n  xy.y = pointer[(type + 'Y') as keyof PointerType]\n\n  return xy\n}\n\nexport function getPageXY (pointer: PointerType | InteractEvent, page?: Point) {\n  page = page || { x: 0, y: 0 }\n\n  // Opera Mobile handles the viewport and scrolling oddly\n  if (browser.isOperaMobile && isNativePointer(pointer)) {\n    getXY('screen', pointer, page)\n\n    page.x += window.scrollX\n    page.y += window.scrollY\n  } else {\n    getXY('page', pointer, page)\n  }\n\n  return page\n}\n\nexport function getClientXY (pointer: PointerType, client: Point) {\n  client = client || ({} as any)\n\n  if (browser.isOperaMobile && isNativePointer(pointer)) {\n    // Opera Mobile handles the viewport and scrolling oddly\n    getXY('screen', pointer, client)\n  } else {\n    getXY('client', pointer, client)\n  }\n\n  return client\n}\n\nexport function getPointerId (pointer: { pointerId?: number, identifier?: number, type?: string }) {\n  return is.number(pointer.pointerId) ? pointer.pointerId! : pointer.identifier!\n}\n\nexport function setCoords (dest: CoordsSetMember, pointers: any[], timeStamp: number) {\n  const pointer = pointers.length > 1 ? pointerAverage(pointers) : pointers[0]\n\n  getPageXY(pointer, dest.page)\n  getClientXY(pointer, dest.client)\n\n  dest.timeStamp = timeStamp\n}\n\nexport function getTouchPair (event: TouchEvent | PointerType[]) {\n  const touches: PointerType[] = []\n\n  // array of touches is supplied\n  if (is.array(event)) {\n    touches[0] = event[0]\n    touches[1] = event[1]\n  }\n  // an event\n  else {\n    if (event.type === 'touchend') {\n      if (event.touches.length === 1) {\n        touches[0] = event.touches[0]\n        touches[1] = event.changedTouches[0]\n      } else if (event.touches.length === 0) {\n        touches[0] = event.changedTouches[0]\n        touches[1] = event.changedTouches[1]\n      }\n    } else {\n      touches[0] = event.touches[0]\n      touches[1] = event.touches[1]\n    }\n  }\n\n  return touches\n}\n\nexport function pointerAverage (pointers: PointerType[]) {\n  const average = {\n    pageX: 0,\n    pageY: 0,\n    clientX: 0,\n    clientY: 0,\n    screenX: 0,\n    screenY: 0,\n  }\n\n  type CoordKeys = keyof typeof average\n\n  for (const pointer of pointers) {\n    for (const prop in average) {\n      average[prop as CoordKeys] += pointer[prop as CoordKeys]\n    }\n  }\n  for (const prop in average) {\n    average[prop as CoordKeys] /= pointers.length\n  }\n\n  return average\n}\n\nexport function touchBBox (event: PointerType[]) {\n  if (!event.length) {\n    return null\n  }\n\n  const touches = getTouchPair(event)\n  const minX = Math.min(touches[0].pageX, touches[1].pageX)\n  const minY = Math.min(touches[0].pageY, touches[1].pageY)\n  const maxX = Math.max(touches[0].pageX, touches[1].pageX)\n  const maxY = Math.max(touches[0].pageY, touches[1].pageY)\n\n  return {\n    x: minX,\n    y: minY,\n    left: minX,\n    top: minY,\n    right: maxX,\n    bottom: maxY,\n    width: maxX - minX,\n    height: maxY - minY,\n  }\n}\n\nexport function touchDistance (event: PointerType[] | TouchEvent, deltaSource: string) {\n  const sourceX = (deltaSource + 'X') as 'pageX'\n  const sourceY = (deltaSource + 'Y') as 'pageY'\n  const touches = getTouchPair(event)\n\n  const dx = touches[0][sourceX] - touches[1][sourceX]\n  const dy = touches[0][sourceY] - touches[1][sourceY]\n\n  return hypot(dx, dy)\n}\n\nexport function touchAngle (event: PointerType[] | TouchEvent, deltaSource: string) {\n  const sourceX = (deltaSource + 'X') as 'pageX'\n  const sourceY = (deltaSource + 'Y') as 'pageY'\n  const touches = getTouchPair(event)\n  const dx = touches[1][sourceX] - touches[0][sourceX]\n  const dy = touches[1][sourceY] - touches[0][sourceY]\n  const angle = (180 * Math.atan2(dy, dx)) / Math.PI\n\n  return angle\n}\n\nexport function getPointerType (pointer: { pointerType?: string, identifier?: number, type?: string }) {\n  return is.string(pointer.pointerType)\n    ? pointer.pointerType\n    : is.number(pointer.pointerType)\n      ? [undefined, undefined, 'touch', 'pen', 'mouse'][pointer.pointerType]!\n      : // if the PointerEvent API isn't available, then the \"pointer\" must\n    // be either a MouseEvent, TouchEvent, or Touch object\n      /touch/.test(pointer.type || '') || pointer instanceof dom.Touch\n        ? 'touch'\n        : 'mouse'\n}\n\n// [ event.target, event.currentTarget ]\nexport function getEventTargets (event: Event) {\n  const path = is.func(event.composedPath)\n    ? (event.composedPath() as Element[])\n    : ((event as unknown) as { path: Element[] }).path\n\n  return [\n    domUtils.getActualElement(path ? path[0] : (event.target as Element)),\n    domUtils.getActualElement(event.currentTarget as Element),\n  ]\n}\n\nexport function newCoords (): CoordsSetMember {\n  return {\n    page: { x: 0, y: 0 },\n    client: { x: 0, y: 0 },\n    timeStamp: 0,\n  }\n}\n\nexport function coordsToEvent (coords: MockCoords) {\n  const event = {\n    coords,\n    get page () {\n      return this.coords.page\n    },\n    get client () {\n      return this.coords.client\n    },\n    get timeStamp () {\n      return this.coords.timeStamp\n    },\n    get pageX () {\n      return this.coords.page.x\n    },\n    get pageY () {\n      return this.coords.page.y\n    },\n    get clientX () {\n      return this.coords.client.x\n    },\n    get clientY () {\n      return this.coords.client.y\n    },\n    get pointerId () {\n      return this.coords.pointerId\n    },\n    get target () {\n      return this.coords.target\n    },\n    get type () {\n      return this.coords.type\n    },\n    get pointerType () {\n      return this.coords.pointerType\n    },\n    get buttons () {\n      return this.coords.buttons\n    },\n    preventDefault () {},\n  }\n\n  return event as typeof event & PointerType & PointerEventType\n}\n\nexport interface MockCoords {\n  page: Point\n  client: Point\n  timeStamp?: number\n  pointerId?: any\n  target?: any\n  type?: string\n  pointerType?: string\n  buttons?: number\n}\n\nexport { pointerExtend }\n","import type { Interactable } from '@interactjs/core/Interactable'\nimport type { Interaction, InteractionProxy } from '@interactjs/core/Interaction'\nimport type { ActionName } from '@interactjs/core/scope'\n\nexport class BaseEvent<T extends ActionName | null = never> {\n  type: string\n  target: EventTarget\n  currentTarget: Node\n  interactable: Interactable\n  _interaction: Interaction<T>\n  timeStamp: any\n  immediatePropagationStopped = false\n  propagationStopped = false\n\n  constructor (interaction: Interaction<T>) {\n    this._interaction = interaction\n  }\n\n  preventDefault () {}\n\n  /**\n   * Don't call any other listeners (even on the current target)\n   */\n  stopPropagation () {\n    this.propagationStopped = true\n  }\n\n  /**\n   * Don't call listeners on the remaining targets\n   */\n  stopImmediatePropagation () {\n    this.immediatePropagationStopped = this.propagationStopped = true\n  }\n}\n\n// defined outside of class definition to avoid assignment of undefined during\n// construction\nexport interface BaseEvent<T extends ActionName> {\n  interaction: InteractionProxy<T>\n}\n\n// getters and setters defined here to support typescript 3.6 and below which\n// don't support getter and setters in .d.ts files\nObject.defineProperty(BaseEvent.prototype, 'interaction', {\n  get (this: BaseEvent) {\n    return this._interaction._proxy\n  },\n  set (this: BaseEvent) {},\n})\n","type Filter<T> = (element: T, index: number, array: T[]) => boolean\n\nexport const contains = <T>(array: T[], target: T) => array.indexOf(target) !== -1\n\nexport const remove = <T>(array: T[], target: T) => array.splice(array.indexOf(target), 1)\n\nexport const merge = <T, U>(target: Array<T | U>, source: U[]) => {\n  for (const item of source) {\n    target.push(item)\n  }\n\n  return target\n}\n\nexport const from = <T = any>(source: ArrayLike<T>) => merge([] as T[], source as T[])\n\nexport const findIndex = <T>(array: T[], func: Filter<T>) => {\n  for (let i = 0; i < array.length; i++) {\n    if (func(array[i], i, array)) {\n      return i\n    }\n  }\n\n  return -1\n}\n\nexport const find = <T = any>(array: T[], func: Filter<T>) => array[findIndex(array, func)]\n","import { BaseEvent } from '@interactjs/core/BaseEvent'\nimport type { InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { Interactable } from '@interactjs/core/Interactable'\nimport type { Element } from '@interactjs/types/index'\nimport * as arr from '@interactjs/utils/arr'\n\nimport type { DropState } from './plugin'\n\nexport class DropEvent extends BaseEvent<'drag'> {\n  target: Element\n  dropzone: Interactable\n  dragEvent: InteractEvent<'drag'>\n  relatedTarget: Element\n  draggable: Interactable\n  timeStamp: number\n  propagationStopped = false\n  immediatePropagationStopped = false\n\n  /**\n   * Class of events fired on dropzones during drags with acceptable targets.\n   */\n  constructor (dropState: DropState, dragEvent: InteractEvent<'drag'>, type: string) {\n    super(dragEvent._interaction)\n\n    const { element, dropzone } = type === 'dragleave' ? dropState.prev : dropState.cur\n\n    this.type = type\n    this.target = element\n    this.currentTarget = element\n    this.dropzone = dropzone\n    this.dragEvent = dragEvent\n    this.relatedTarget = dragEvent.target\n    this.draggable = dragEvent.interactable\n    this.timeStamp = dragEvent.timeStamp\n  }\n\n  /**\n   * If this is a `dropactivate` event, the dropzone element will be\n   * deactivated.\n   *\n   * If this is a `dragmove` or `dragenter`, a `dragleave` will be fired on the\n   * dropzone element and more.\n   */\n  reject () {\n    const { dropState } = this._interaction\n\n    if (\n      this.type !== 'dropactivate' &&\n      (!this.dropzone || dropState.cur.dropzone !== this.dropzone || dropState.cur.element !== this.target)\n    ) {\n      return\n    }\n\n    dropState.prev.dropzone = this.dropzone\n    dropState.prev.element = this.target\n\n    dropState.rejected = true\n    dropState.events.enter = null\n\n    this.stopImmediatePropagation()\n\n    if (this.type === 'dropactivate') {\n      const activeDrops = dropState.activeDrops\n      const index = arr.findIndex(\n        activeDrops,\n        ({ dropzone, element }) => dropzone === this.dropzone && element === this.target,\n      )\n\n      dropState.activeDrops.splice(index, 1)\n\n      const deactivateEvent = new DropEvent(dropState, this.dragEvent, 'dropdeactivate')\n\n      deactivateEvent.dropzone = this.dropzone\n      deactivateEvent.target = this.target\n\n      this.dropzone.fire(deactivateEvent)\n    } else {\n      this.dropzone.fire(new DropEvent(dropState, this.dragEvent, 'dragleave'))\n    }\n  }\n\n  preventDefault () {}\n\n  stopPropagation () {\n    this.propagationStopped = true\n  }\n\n  stopImmediatePropagation () {\n    this.immediatePropagationStopped = this.propagationStopped = true\n  }\n}\n","import type { EventPhase, InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { Interactable } from '@interactjs/core/Interactable'\nimport type { Interaction, DoPhaseArg } from '@interactjs/core/Interaction'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { DropzoneOptions, Element, PointerEventType, Rect } from '@interactjs/types/index'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport getOriginXY from '@interactjs/utils/getOriginXY'\nimport is from '@interactjs/utils/is'\nimport normalizeListeners from '@interactjs/utils/normalizeListeners'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\nimport type { DragEvent } from '../drag/plugin'\nimport drag from '../drag/plugin'\n\nimport { DropEvent } from './DropEvent'\n\nexport interface DropzoneMethod {\n  (this: Interactable, options: DropzoneOptions | boolean): Interactable\n  (): DropzoneOptions\n}\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    dropzone: DropzoneMethod\n    dropCheck: (\n      dragEvent: InteractEvent,\n      event: PointerEventType,\n      draggable: Interactable,\n      draggableElement: Element,\n      dropElemen: Element,\n      rect: any,\n    ) => boolean\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    dropState?: DropState\n  }\n}\n\ndeclare module '@interactjs/core/InteractEvent' {\n  interface InteractEvent {\n    prevDropzone?: Interactable\n    dropzone?: Interactable\n    dragEnter?: Element\n    dragLeave?: Element\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface ActionDefaults {\n    drop: DropzoneOptions\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface ActionMap {\n    drop?: typeof drop\n  }\n\n  interface Scope {\n    dynamicDrop?: boolean\n  }\n\n  interface SignalArgs {\n    'actions/drop:start': DropSignalArg\n    'actions/drop:move': DropSignalArg\n    'actions/drop:end': DropSignalArg\n  }\n}\n\ndeclare module '@interactjs/core/InteractStatic' {\n  interface InteractStatic {\n    dynamicDrop: (this: InteractStatic, newValue?: boolean) => boolean | this\n  }\n}\n\ninterface DropSignalArg {\n  interaction: Interaction<'drag'>\n  dragEvent: DragEvent\n}\n\nexport interface ActiveDrop {\n  dropzone: Interactable\n  element: Element\n  rect: Rect\n}\n\nexport interface DropState {\n  cur: {\n    // the dropzone a drag target might be dropped into\n    dropzone: Interactable\n    // the element at the time of checking\n    element: Element\n  }\n  prev: {\n    // the dropzone that was recently dragged away from\n    dropzone: Interactable\n    // the element at the time of checking\n    element: Element\n  }\n  // wheather the potential drop was rejected from a listener\n  rejected: boolean\n  // the drop events related to the current drag event\n  events: FiredDropEvents\n  activeDrops: ActiveDrop[]\n}\n\nfunction install (scope: Scope) {\n  const {\n    actions,\n    /** @lends module:interact */\n    interactStatic: interact,\n    /** @lends Interactable */\n    Interactable,\n    defaults,\n  } = scope\n\n  scope.usePlugin(drag)\n\n  /**\n   *\n   * ```js\n   * interact('.drop').dropzone({\n   *   accept: '.can-drop' || document.getElementById('single-drop'),\n   *   overlap: 'pointer' || 'center' || zeroToOne\n   * }\n   * ```\n   *\n   * Returns or sets whether draggables can be dropped onto this target to\n   * trigger drop events\n   *\n   * Dropzones can receive the following events:\n   *  - `dropactivate` and `dropdeactivate` when an acceptable drag starts and ends\n   *  - `dragenter` and `dragleave` when a draggable enters and leaves the dropzone\n   *  - `dragmove` when a draggable that has entered the dropzone is moved\n   *  - `drop` when a draggable is dropped into this dropzone\n   *\n   * Use the `accept` option to allow only elements that match the given CSS\n   * selector or element. The value can be:\n   *\n   *  - **an Element** - only that element can be dropped into this dropzone.\n   *  - **a string**, - the element being dragged must match it as a CSS selector.\n   *  - **`null`** - accept options is cleared - it accepts any element.\n   *\n   * Use the `overlap` option to set how drops are checked for. The allowed\n   * values are:\n   *\n   *   - `'pointer'`, the pointer must be over the dropzone (default)\n   *   - `'center'`, the draggable element's center must be over the dropzone\n   *   - a number from 0-1 which is the `(intersection area) / (draggable area)`.\n   *   e.g. `0.5` for drop to happen when half of the area of the draggable is\n   *   over the dropzone\n   *\n   * Use the `checker` option to specify a function to check if a dragged element\n   * is over this Interactable.\n   *\n   * @param {boolean | object | null} [options] The new options to be set.\n   * @return {object | Interactable} The current setting or this Interactable\n   */\n  Interactable.prototype.dropzone = function (this: Interactable, options?: DropzoneOptions | boolean) {\n    return dropzoneMethod(this, options)\n  } as Interactable['dropzone']\n\n  /**\n   * ```js\n   * interact(target)\n   * .dropChecker(function(dragEvent,         // related dragmove or dragend event\n   *                       event,             // TouchEvent/PointerEvent/MouseEvent\n   *                       dropped,           // bool result of the default checker\n   *                       dropzone,          // dropzone Interactable\n   *                       dropElement,       // dropzone elemnt\n   *                       draggable,         // draggable Interactable\n   *                       draggableElement) {// draggable element\n   *\n   *   return dropped && event.target.hasAttribute('allow-drop')\n   * }\n   * ```\n   */\n  Interactable.prototype.dropCheck = function (\n    this: Interactable,\n    dragEvent,\n    event,\n    draggable,\n    draggableElement,\n    dropElement,\n    rect,\n  ) {\n    return dropCheckMethod(this, dragEvent, event, draggable, draggableElement, dropElement, rect)\n  }\n\n  /**\n   * Returns or sets whether the dimensions of dropzone elements are calculated\n   * on every dragmove or only on dragstart for the default dropChecker\n   *\n   * @param {boolean} [newValue] True to check on each move. False to check only\n   * before start\n   * @return {boolean | interact} The current setting or interact\n   */\n  interact.dynamicDrop = function (newValue?: boolean) {\n    if (is.bool(newValue)) {\n      // if (dragging && scope.dynamicDrop !== newValue && !newValue) {\n      //  calcRects(dropzones)\n      // }\n\n      scope.dynamicDrop = newValue\n\n      return interact\n    }\n    return scope.dynamicDrop\n  }\n\n  extend(actions.phaselessTypes, {\n    dragenter: true,\n    dragleave: true,\n    dropactivate: true,\n    dropdeactivate: true,\n    dropmove: true,\n    drop: true,\n  })\n  actions.methodDict.drop = 'dropzone'\n\n  scope.dynamicDrop = false\n\n  defaults.actions.drop = drop.defaults\n}\n\nfunction collectDrops ({ interactables }: Scope, draggableElement: Element) {\n  const drops: ActiveDrop[] = []\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (const dropzone of interactables.list) {\n    if (!dropzone.options.drop.enabled) {\n      continue\n    }\n\n    const accept = dropzone.options.drop.accept\n\n    // test the draggable draggableElement against the dropzone's accept setting\n    if (\n      (is.element(accept) && accept !== draggableElement) ||\n      (is.string(accept) && !domUtils.matchesSelector(draggableElement, accept)) ||\n      (is.func(accept) && !accept({ dropzone, draggableElement }))\n    ) {\n      continue\n    }\n\n    // query for new elements if necessary\n    const dropElements = (is.string(dropzone.target)\n      ? dropzone._context.querySelectorAll(dropzone.target)\n      : is.array(dropzone.target)\n        ? dropzone.target\n        : [dropzone.target]) as Element[]\n\n    for (const dropzoneElement of dropElements) {\n      if (dropzoneElement !== draggableElement) {\n        drops.push({\n          dropzone,\n          element: dropzoneElement,\n          rect: dropzone.getRect(dropzoneElement),\n        })\n      }\n    }\n  }\n\n  return drops\n}\n\nfunction fireActivationEvents (activeDrops: ActiveDrop[], event: DropEvent) {\n  // loop through all active dropzones and trigger event\n  for (const { dropzone, element } of activeDrops.slice()) {\n    event.dropzone = dropzone\n\n    // set current element as event target\n    event.target = element\n    dropzone.fire(event)\n    event.propagationStopped = event.immediatePropagationStopped = false\n  }\n}\n\n// return a new array of possible drops. getActiveDrops should always be\n// called when a drag has just started or a drag event happens while\n// dynamicDrop is true\nfunction getActiveDrops (scope: Scope, dragElement: Element) {\n  // get dropzones and their elements that could receive the draggable\n  const activeDrops = collectDrops(scope, dragElement)\n\n  for (const activeDrop of activeDrops) {\n    activeDrop.rect = activeDrop.dropzone.getRect(activeDrop.element)\n  }\n\n  return activeDrops\n}\n\nfunction getDrop (\n  { dropState, interactable: draggable, element: dragElement }: Partial<Interaction>,\n  dragEvent,\n  pointerEvent,\n) {\n  const validDrops = []\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (const { dropzone, element: dropzoneElement, rect } of dropState.activeDrops) {\n    validDrops.push(\n      dropzone.dropCheck(dragEvent, pointerEvent, draggable, dragElement, dropzoneElement, rect)\n        ? dropzoneElement\n        : null,\n    )\n  }\n\n  // get the most appropriate dropzone based on DOM depth and order\n  const dropIndex = domUtils.indexOfDeepestElement(validDrops)\n\n  return dropState.activeDrops[dropIndex] || null\n}\n\nfunction getDropEvents (interaction: Interaction, _pointerEvent, dragEvent: DragEvent) {\n  const { dropState } = interaction\n  const dropEvents = {\n    enter: null,\n    leave: null,\n    activate: null,\n    deactivate: null,\n    move: null,\n    drop: null,\n  }\n\n  if (dragEvent.type === 'dragstart') {\n    dropEvents.activate = new DropEvent(dropState, dragEvent, 'dropactivate')\n\n    dropEvents.activate.target = null\n    dropEvents.activate.dropzone = null\n  }\n  if (dragEvent.type === 'dragend') {\n    dropEvents.deactivate = new DropEvent(dropState, dragEvent, 'dropdeactivate')\n\n    dropEvents.deactivate.target = null\n    dropEvents.deactivate.dropzone = null\n  }\n\n  if (dropState.rejected) {\n    return dropEvents\n  }\n\n  if (dropState.cur.element !== dropState.prev.element) {\n    // if there was a previous dropzone, create a dragleave event\n    if (dropState.prev.dropzone) {\n      dropEvents.leave = new DropEvent(dropState, dragEvent, 'dragleave')\n\n      dragEvent.dragLeave = dropEvents.leave.target = dropState.prev.element\n      dragEvent.prevDropzone = dropEvents.leave.dropzone = dropState.prev.dropzone\n    }\n    // if dropzone is not null, create a dragenter event\n    if (dropState.cur.dropzone) {\n      dropEvents.enter = new DropEvent(dropState, dragEvent, 'dragenter')\n\n      dragEvent.dragEnter = dropState.cur.element\n      dragEvent.dropzone = dropState.cur.dropzone\n    }\n  }\n\n  if (dragEvent.type === 'dragend' && dropState.cur.dropzone) {\n    dropEvents.drop = new DropEvent(dropState, dragEvent, 'drop')\n\n    dragEvent.dropzone = dropState.cur.dropzone\n    dragEvent.relatedTarget = dropState.cur.element\n  }\n  if (dragEvent.type === 'dragmove' && dropState.cur.dropzone) {\n    dropEvents.move = new DropEvent(dropState, dragEvent, 'dropmove')\n\n    dropEvents.move.dragmove = dragEvent\n    dragEvent.dropzone = dropState.cur.dropzone\n  }\n\n  return dropEvents\n}\n\ntype FiredDropEvents = Partial<\nRecord<'leave' | 'enter' | 'move' | 'drop' | 'activate' | 'deactivate', DropEvent>\n>\n\nfunction fireDropEvents (interaction: Interaction, events: FiredDropEvents) {\n  const { dropState } = interaction\n  const { activeDrops, cur, prev } = dropState\n\n  if (events.leave) {\n    prev.dropzone.fire(events.leave)\n  }\n  if (events.enter) {\n    cur.dropzone.fire(events.enter)\n  }\n  if (events.move) {\n    cur.dropzone.fire(events.move)\n  }\n  if (events.drop) {\n    cur.dropzone.fire(events.drop)\n  }\n\n  if (events.deactivate) {\n    fireActivationEvents(activeDrops, events.deactivate)\n  }\n\n  dropState.prev.dropzone = cur.dropzone\n  dropState.prev.element = cur.element\n}\n\nfunction onEventCreated ({ interaction, iEvent, event }: DoPhaseArg<'drag', EventPhase>, scope: Scope) {\n  if (iEvent.type !== 'dragmove' && iEvent.type !== 'dragend') {\n    return\n  }\n\n  const { dropState } = interaction\n\n  if (scope.dynamicDrop) {\n    dropState.activeDrops = getActiveDrops(scope, interaction.element)\n  }\n\n  const dragEvent = iEvent\n  const dropResult = getDrop(interaction, dragEvent, event)\n\n  // update rejected status\n  dropState.rejected =\n    dropState.rejected &&\n    !!dropResult &&\n    dropResult.dropzone === dropState.cur.dropzone &&\n    dropResult.element === dropState.cur.element\n\n  dropState.cur.dropzone = dropResult && dropResult.dropzone\n  dropState.cur.element = dropResult && dropResult.element\n\n  dropState.events = getDropEvents(interaction, event, dragEvent)\n}\n\nfunction dropzoneMethod(interactable: Interactable): DropzoneOptions\nfunction dropzoneMethod(interactable: Interactable, options: DropzoneOptions | boolean): Interactable\nfunction dropzoneMethod (interactable: Interactable, options?: DropzoneOptions | boolean) {\n  if (is.object(options)) {\n    interactable.options.drop.enabled = options.enabled !== false\n\n    if (options.listeners) {\n      const normalized = normalizeListeners(options.listeners)\n      // rename 'drop' to '' as it will be prefixed with 'drop'\n      const corrected = Object.keys(normalized).reduce((acc, type) => {\n        const correctedType = /^(enter|leave)/.test(type)\n          ? `drag${type}`\n          : /^(activate|deactivate|move)/.test(type)\n            ? `drop${type}`\n            : type\n\n        acc[correctedType] = normalized[type]\n\n        return acc\n      }, {})\n\n      interactable.off(interactable.options.drop.listeners)\n      interactable.on(corrected)\n      interactable.options.drop.listeners = corrected\n    }\n\n    if (is.func(options.ondrop)) {\n      interactable.on('drop', options.ondrop)\n    }\n    if (is.func(options.ondropactivate)) {\n      interactable.on('dropactivate', options.ondropactivate)\n    }\n    if (is.func(options.ondropdeactivate)) {\n      interactable.on('dropdeactivate', options.ondropdeactivate)\n    }\n    if (is.func(options.ondragenter)) {\n      interactable.on('dragenter', options.ondragenter)\n    }\n    if (is.func(options.ondragleave)) {\n      interactable.on('dragleave', options.ondragleave)\n    }\n    if (is.func(options.ondropmove)) {\n      interactable.on('dropmove', options.ondropmove)\n    }\n\n    if (/^(pointer|center)$/.test(options.overlap as string)) {\n      interactable.options.drop.overlap = options.overlap\n    } else if (is.number(options.overlap)) {\n      interactable.options.drop.overlap = Math.max(Math.min(1, options.overlap), 0)\n    }\n    if ('accept' in options) {\n      interactable.options.drop.accept = options.accept\n    }\n    if ('checker' in options) {\n      interactable.options.drop.checker = options.checker\n    }\n\n    return interactable\n  }\n\n  if (is.bool(options)) {\n    interactable.options.drop.enabled = options\n\n    return interactable\n  }\n\n  return interactable.options.drop\n}\n\nfunction dropCheckMethod (\n  interactable: Interactable,\n  dragEvent: InteractEvent,\n  event: PointerEventType,\n  draggable: Interactable,\n  draggableElement: Element,\n  dropElement: Element,\n  rect: any,\n) {\n  let dropped = false\n\n  // if the dropzone has no rect (eg. display: none)\n  // call the custom dropChecker or just return false\n  if (!(rect = rect || interactable.getRect(dropElement))) {\n    return interactable.options.drop.checker\n      ? interactable.options.drop.checker(\n        dragEvent,\n        event,\n        dropped,\n        interactable,\n        dropElement,\n        draggable,\n        draggableElement,\n      )\n      : false\n  }\n\n  const dropOverlap = interactable.options.drop.overlap\n\n  if (dropOverlap === 'pointer') {\n    const origin = getOriginXY(draggable, draggableElement, 'drag')\n    const page = pointerUtils.getPageXY(dragEvent)\n\n    page.x += origin.x\n    page.y += origin.y\n\n    const horizontal = page.x > rect.left && page.x < rect.right\n    const vertical = page.y > rect.top && page.y < rect.bottom\n\n    dropped = horizontal && vertical\n  }\n\n  const dragRect = draggable.getRect(draggableElement)\n\n  if (dragRect && dropOverlap === 'center') {\n    const cx = dragRect.left + dragRect.width / 2\n    const cy = dragRect.top + dragRect.height / 2\n\n    dropped = cx >= rect.left && cx <= rect.right && cy >= rect.top && cy <= rect.bottom\n  }\n\n  if (dragRect && is.number(dropOverlap)) {\n    const overlapArea =\n      Math.max(0, Math.min(rect.right, dragRect.right) - Math.max(rect.left, dragRect.left)) *\n      Math.max(0, Math.min(rect.bottom, dragRect.bottom) - Math.max(rect.top, dragRect.top))\n\n    const overlapRatio = overlapArea / (dragRect.width * dragRect.height)\n\n    dropped = overlapRatio >= dropOverlap\n  }\n\n  if (interactable.options.drop.checker) {\n    dropped = interactable.options.drop.checker(\n      dragEvent,\n      event,\n      dropped,\n      interactable,\n      dropElement,\n      draggable,\n      draggableElement,\n    )\n  }\n\n  return dropped\n}\n\nconst drop: Plugin = {\n  id: 'actions/drop',\n  install,\n  listeners: {\n    'interactions:before-action-start': ({ interaction }) => {\n      if (interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      interaction.dropState = {\n        cur: {\n          dropzone: null,\n          element: null,\n        },\n        prev: {\n          dropzone: null,\n          element: null,\n        },\n        rejected: null,\n        events: null,\n        activeDrops: [],\n      }\n    },\n\n    'interactions:after-action-start': (\n      { interaction, event, iEvent: dragEvent }: DoPhaseArg<'drag', EventPhase>,\n      scope,\n    ) => {\n      if (interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      const { dropState } = interaction\n\n      // reset active dropzones\n      dropState.activeDrops = null\n      dropState.events = null\n      dropState.activeDrops = getActiveDrops(scope, interaction.element)\n      dropState.events = getDropEvents(interaction, event, dragEvent)\n\n      if (dropState.events.activate) {\n        fireActivationEvents(dropState.activeDrops, dropState.events.activate)\n        scope.fire('actions/drop:start', { interaction, dragEvent })\n      }\n    },\n\n    'interactions:action-move': onEventCreated,\n\n    'interactions:after-action-move': (\n      { interaction, iEvent: dragEvent }: DoPhaseArg<'drag', EventPhase>,\n      scope,\n    ) => {\n      if (interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      fireDropEvents(interaction, interaction.dropState.events)\n\n      scope.fire('actions/drop:move', { interaction, dragEvent })\n      interaction.dropState.events = {}\n    },\n\n    'interactions:action-end': (arg: DoPhaseArg<'drag', EventPhase>, scope) => {\n      if (arg.interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      const { interaction, iEvent: dragEvent } = arg\n\n      onEventCreated(arg, scope)\n      fireDropEvents(interaction, interaction.dropState.events)\n      scope.fire('actions/drop:end', { interaction, dragEvent })\n    },\n\n    'interactions:stop': ({ interaction }) => {\n      if (interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      const { dropState } = interaction\n\n      if (dropState) {\n        dropState.activeDrops = null\n        dropState.events = null\n        dropState.cur.dropzone = null\n        dropState.cur.element = null\n        dropState.prev.dropzone = null\n        dropState.prev.element = null\n        dropState.rejected = false\n      }\n    },\n  },\n  getActiveDrops,\n  getDrop,\n  getDropEvents,\n  fireDropEvents,\n  defaults: {\n    enabled: false,\n    accept: null,\n    overlap: 'pointer',\n  } as DropzoneOptions,\n}\n\nexport default drop\n","import type { InteractEvent, EventPhase } from '@interactjs/core/InteractEvent'\nimport type { Interaction, DoPhaseArg } from '@interactjs/core/Interaction'\nimport type { Options } from '@interactjs/core/options'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { ActionMethod, GesturableOptions, Rect, PointerType } from '@interactjs/types/index'\nimport is from '@interactjs/utils/is'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\nexport type GesturableMethod = ActionMethod<GesturableOptions>\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    gesture?: {\n      angle: number // angle from first to second touch\n      distance: number\n      scale: number // gesture.distance / gesture.startDistance\n      startAngle: number // angle of line joining two touches\n      startDistance: number // distance between two touches of touchStart\n    }\n  }\n}\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    gesturable: GesturableMethod\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface ActionDefaults {\n    gesture: GesturableOptions\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface ActionMap {\n    gesture?: typeof gesture\n  }\n}\n\nexport interface GestureEvent extends InteractEvent<'gesture'> {\n  distance: number\n  angle: number\n  da: number // angle change\n  scale: number // ratio of distance start to current event\n  ds: number // scale change\n  box: Rect // enclosing box of all points\n  touches: PointerType[]\n}\n\nexport interface GestureSignalArg extends DoPhaseArg<'gesture', EventPhase> {\n  iEvent: GestureEvent\n  interaction: Interaction<'gesture'>\n}\n\nfunction install (scope: Scope) {\n  const { actions, Interactable, defaults } = scope\n\n  /**\n   * ```js\n   * interact(element).gesturable({\n   *     onstart: function (event) {},\n   *     onmove : function (event) {},\n   *     onend  : function (event) {},\n   *\n   *     // limit multiple gestures.\n   *     // See the explanation in {@link Interactable.draggable} example\n   *     max: Infinity,\n   *     maxPerElement: 1,\n   * })\n   *\n   * var isGestureable = interact(element).gesturable()\n   * ```\n   *\n   * Gets or sets whether multitouch gestures can be performed on the target\n   *\n   * @param {boolean | object} [options] true/false or An object with event\n   * listeners to be fired on gesture events (makes the Interactable gesturable)\n   * @return {boolean | Interactable} A boolean indicating if this can be the\n   * target of gesture events, or this Interactable\n   */\n  Interactable.prototype.gesturable = function (\n    this: InstanceType<typeof Interactable>,\n    options: GesturableOptions | boolean,\n  ) {\n    if (is.object(options)) {\n      this.options.gesture.enabled = options.enabled !== false\n      this.setPerAction('gesture', options)\n      this.setOnEvents('gesture', options)\n\n      return this\n    }\n\n    if (is.bool(options)) {\n      this.options.gesture.enabled = options\n\n      return this\n    }\n\n    return this.options.gesture as Options\n  } as GesturableMethod\n\n  actions.map.gesture = gesture\n  actions.methodDict.gesture = 'gesturable'\n\n  defaults.actions.gesture = gesture.defaults\n}\n\nfunction updateGestureProps ({ interaction, iEvent, phase }: GestureSignalArg) {\n  if (interaction.prepared.name !== 'gesture') return\n\n  const pointers = interaction.pointers.map((p) => p.pointer)\n  const starting = phase === 'start'\n  const ending = phase === 'end'\n  const deltaSource = interaction.interactable.options.deltaSource\n\n  iEvent.touches = [pointers[0], pointers[1]]\n\n  if (starting) {\n    iEvent.distance = pointerUtils.touchDistance(pointers, deltaSource)\n    iEvent.box = pointerUtils.touchBBox(pointers)\n    iEvent.scale = 1\n    iEvent.ds = 0\n    iEvent.angle = pointerUtils.touchAngle(pointers, deltaSource)\n    iEvent.da = 0\n\n    interaction.gesture.startDistance = iEvent.distance\n    interaction.gesture.startAngle = iEvent.angle\n  } else if (ending) {\n    const prevEvent = interaction.prevEvent as GestureEvent\n\n    iEvent.distance = prevEvent.distance\n    iEvent.box = prevEvent.box\n    iEvent.scale = prevEvent.scale\n    iEvent.ds = 0\n    iEvent.angle = prevEvent.angle\n    iEvent.da = 0\n  } else {\n    iEvent.distance = pointerUtils.touchDistance(pointers, deltaSource)\n    iEvent.box = pointerUtils.touchBBox(pointers)\n    iEvent.scale = iEvent.distance / interaction.gesture.startDistance\n    iEvent.angle = pointerUtils.touchAngle(pointers, deltaSource)\n\n    iEvent.ds = iEvent.scale - interaction.gesture.scale\n    iEvent.da = iEvent.angle - interaction.gesture.angle\n  }\n\n  interaction.gesture.distance = iEvent.distance\n  interaction.gesture.angle = iEvent.angle\n\n  if (is.number(iEvent.scale) && iEvent.scale !== Infinity && !isNaN(iEvent.scale)) {\n    interaction.gesture.scale = iEvent.scale\n  }\n}\n\nconst gesture: Plugin = {\n  id: 'actions/gesture',\n  before: ['actions/drag', 'actions/resize'],\n  install,\n  listeners: {\n    'interactions:action-start': updateGestureProps,\n    'interactions:action-move': updateGestureProps,\n    'interactions:action-end': updateGestureProps,\n\n    'interactions:new': ({ interaction }) => {\n      interaction.gesture = {\n        angle: 0,\n        distance: 0,\n        scale: 1,\n        startAngle: 0,\n        startDistance: 0,\n      }\n    },\n\n    'auto-start:check': (arg) => {\n      if (arg.interaction.pointers.length < 2) {\n        return undefined\n      }\n\n      const gestureOptions = arg.interactable.options.gesture\n\n      if (!(gestureOptions && gestureOptions.enabled)) {\n        return undefined\n      }\n\n      arg.action = { name: 'gesture' }\n\n      return false\n    },\n  },\n\n  defaults: {},\n\n  getCursor () {\n    return ''\n  },\n}\n\nexport default gesture\n","import type { EventPhase, InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { Interactable } from '@interactjs/core/Interactable'\nimport type { ActionProps, Interaction } from '@interactjs/core/Interaction'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type {\n  ActionMethod,\n  ResizableOptions,\n  FullRect,\n  OrBoolean,\n  Point,\n  Rect,\n} from '@interactjs/types/index'\nimport * as dom from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\n\nexport type EdgeName = 'top' | 'left' | 'bottom' | 'right'\n\nexport type ResizableMethod = ActionMethod<ResizableOptions>\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    resizable: ResizableMethod\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    resizeAxes: 'x' | 'y' | 'xy'\n    resizeStartAspectRatio: number\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface ActionDefaults {\n    resize: ResizableOptions\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface ActionMap {\n    resize?: typeof resize\n  }\n}\n\nexport interface ResizeEvent<P extends EventPhase = EventPhase> extends InteractEvent<'resize', P> {\n  deltaRect?: FullRect\n  edges?: ActionProps['edges']\n}\n\nfunction install (scope: Scope) {\n  const {\n    actions,\n    browser,\n    /** @lends Interactable */\n    Interactable, // tslint:disable-line no-shadowed-variable\n    defaults,\n  } = scope\n\n  // Less Precision with touch input\n\n  resize.cursors = initCursors(browser)\n  resize.defaultMargin = browser.supportsTouch || browser.supportsPointerEvent ? 20 : 10\n\n  /**\n   * ```js\n   * interact(element).resizable({\n   *   onstart: function (event) {},\n   *   onmove : function (event) {},\n   *   onend  : function (event) {},\n   *\n   *   edges: {\n   *     top   : true,       // Use pointer coords to check for resize.\n   *     left  : false,      // Disable resizing from left edge.\n   *     bottom: '.resize-s',// Resize if pointer target matches selector\n   *     right : handleEl    // Resize if pointer target is the given Element\n   *   },\n   *\n   *     // Width and height can be adjusted independently. When `true`, width and\n   *     // height are adjusted at a 1:1 ratio.\n   *     square: false,\n   *\n   *     // Width and height can be adjusted independently. When `true`, width and\n   *     // height maintain the aspect ratio they had when resizing started.\n   *     preserveAspectRatio: false,\n   *\n   *   // a value of 'none' will limit the resize rect to a minimum of 0x0\n   *   // 'negate' will allow the rect to have negative width/height\n   *   // 'reposition' will keep the width/height positive by swapping\n   *   // the top and bottom edges and/or swapping the left and right edges\n   *   invert: 'none' || 'negate' || 'reposition'\n   *\n   *   // limit multiple resizes.\n   *   // See the explanation in the {@link Interactable.draggable} example\n   *   max: Infinity,\n   *   maxPerElement: 1,\n   * })\n   *\n   * var isResizeable = interact(element).resizable()\n   * ```\n   *\n   * Gets or sets whether resize actions can be performed on the target\n   *\n   * @param {boolean | object} [options] true/false or An object with event\n   * listeners to be fired on resize events (object makes the Interactable\n   * resizable)\n   * @return {boolean | Interactable} A boolean indicating if this can be the\n   * target of resize elements, or this Interactable\n   */\n  Interactable.prototype.resizable = function (this: Interactable, options: ResizableOptions | boolean) {\n    return resizable(this, options, scope)\n  } as ResizableMethod\n\n  actions.map.resize = resize\n  actions.methodDict.resize = 'resizable'\n\n  defaults.actions.resize = resize.defaults\n}\n\nfunction resizeChecker (arg) {\n  const { interaction, interactable, element, rect, buttons } = arg\n\n  if (!rect) {\n    return undefined\n  }\n\n  const page = extend({}, interaction.coords.cur.page)\n  const resizeOptions = interactable.options.resize\n\n  if (\n    !(resizeOptions && resizeOptions.enabled) ||\n    // check mouseButton setting if the pointer is down\n    (interaction.pointerIsDown &&\n      /mouse|pointer/.test(interaction.pointerType) &&\n      (buttons & resizeOptions.mouseButtons) === 0)\n  ) {\n    return undefined\n  }\n\n  // if using resize.edges\n  if (is.object(resizeOptions.edges)) {\n    const resizeEdges = {\n      left: false,\n      right: false,\n      top: false,\n      bottom: false,\n    }\n\n    for (const edge in resizeEdges) {\n      resizeEdges[edge] = checkResizeEdge(\n        edge,\n        resizeOptions.edges[edge],\n        page,\n        interaction._latestPointer.eventTarget,\n        element,\n        rect,\n        resizeOptions.margin || resize.defaultMargin,\n      )\n    }\n\n    resizeEdges.left = resizeEdges.left && !resizeEdges.right\n    resizeEdges.top = resizeEdges.top && !resizeEdges.bottom\n\n    if (resizeEdges.left || resizeEdges.right || resizeEdges.top || resizeEdges.bottom) {\n      arg.action = {\n        name: 'resize',\n        edges: resizeEdges,\n      }\n    }\n  } else {\n    const right = resizeOptions.axis !== 'y' && page.x > rect.right - resize.defaultMargin\n    const bottom = resizeOptions.axis !== 'x' && page.y > rect.bottom - resize.defaultMargin\n\n    if (right || bottom) {\n      arg.action = {\n        name: 'resize',\n        axes: (right ? 'x' : '') + (bottom ? 'y' : ''),\n      }\n    }\n  }\n\n  return arg.action ? false : undefined\n}\n\nfunction resizable (interactable: Interactable, options: OrBoolean<ResizableOptions> | boolean, scope: Scope) {\n  if (is.object(options)) {\n    interactable.options.resize.enabled = options.enabled !== false\n    interactable.setPerAction('resize', options)\n    interactable.setOnEvents('resize', options)\n\n    if (is.string(options.axis) && /^x$|^y$|^xy$/.test(options.axis)) {\n      interactable.options.resize.axis = options.axis\n    } else if (options.axis === null) {\n      interactable.options.resize.axis = scope.defaults.actions.resize.axis\n    }\n\n    if (is.bool(options.preserveAspectRatio)) {\n      interactable.options.resize.preserveAspectRatio = options.preserveAspectRatio\n    } else if (is.bool(options.square)) {\n      interactable.options.resize.square = options.square\n    }\n\n    return interactable\n  }\n  if (is.bool(options)) {\n    interactable.options.resize.enabled = options\n\n    return interactable\n  }\n  return interactable.options.resize\n}\n\nfunction checkResizeEdge (\n  name: string,\n  value: any,\n  page: Point,\n  element: Node,\n  interactableElement: Element,\n  rect: Rect,\n  margin: number,\n) {\n  // false, '', undefined, null\n  if (!value) {\n    return false\n  }\n\n  // true value, use pointer coords and element rect\n  if (value === true) {\n    // if dimensions are negative, \"switch\" edges\n    const width = is.number(rect.width) ? rect.width : rect.right - rect.left\n    const height = is.number(rect.height) ? rect.height : rect.bottom - rect.top\n\n    // don't use margin greater than half the relevent dimension\n    margin = Math.min(margin, Math.abs((name === 'left' || name === 'right' ? width : height) / 2))\n\n    if (width < 0) {\n      if (name === 'left') {\n        name = 'right'\n      } else if (name === 'right') {\n        name = 'left'\n      }\n    }\n    if (height < 0) {\n      if (name === 'top') {\n        name = 'bottom'\n      } else if (name === 'bottom') {\n        name = 'top'\n      }\n    }\n\n    if (name === 'left') {\n      return page.x < (width >= 0 ? rect.left : rect.right) + margin\n    }\n    if (name === 'top') {\n      return page.y < (height >= 0 ? rect.top : rect.bottom) + margin\n    }\n\n    if (name === 'right') {\n      return page.x > (width >= 0 ? rect.right : rect.left) - margin\n    }\n    if (name === 'bottom') {\n      return page.y > (height >= 0 ? rect.bottom : rect.top) - margin\n    }\n  }\n\n  // the remaining checks require an element\n  if (!is.element(element)) {\n    return false\n  }\n\n  return is.element(value)\n    ? // the value is an element to use as a resize handle\n    value === element\n    : // otherwise check if element matches value as selector\n    dom.matchesUpTo(element, value, interactableElement)\n}\n\n/* eslint-disable multiline-ternary */\n// eslint-disable-next-line @typescript-eslint/consistent-type-imports\nfunction initCursors (browser: typeof import('@interactjs/utils/browser').default) {\n  return browser.isIe9\n    ? {\n      x: 'e-resize',\n      y: 's-resize',\n      xy: 'se-resize',\n\n      top: 'n-resize',\n      left: 'w-resize',\n      bottom: 's-resize',\n      right: 'e-resize',\n      topleft: 'se-resize',\n      bottomright: 'se-resize',\n      topright: 'ne-resize',\n      bottomleft: 'ne-resize',\n    }\n    : {\n      x: 'ew-resize',\n      y: 'ns-resize',\n      xy: 'nwse-resize',\n\n      top: 'ns-resize',\n      left: 'ew-resize',\n      bottom: 'ns-resize',\n      right: 'ew-resize',\n      topleft: 'nwse-resize',\n      bottomright: 'nwse-resize',\n      topright: 'nesw-resize',\n      bottomleft: 'nesw-resize',\n    }\n}\n/* eslint-enable multiline-ternary */\n\nfunction start ({ iEvent, interaction }: { iEvent: InteractEvent<any, any>, interaction: Interaction }) {\n  if (interaction.prepared.name !== 'resize' || !interaction.prepared.edges) {\n    return\n  }\n\n  const resizeEvent = iEvent as ResizeEvent\n  const rect = interaction.rect\n\n  interaction._rects = {\n    start: extend({}, rect),\n    corrected: extend({}, rect),\n    previous: extend({}, rect),\n    delta: {\n      left: 0,\n      right: 0,\n      width: 0,\n      top: 0,\n      bottom: 0,\n      height: 0,\n    },\n  }\n\n  resizeEvent.edges = interaction.prepared.edges\n  resizeEvent.rect = interaction._rects.corrected\n  resizeEvent.deltaRect = interaction._rects.delta\n}\n\nfunction move ({ iEvent, interaction }: { iEvent: InteractEvent<any, any>, interaction: Interaction }) {\n  if (interaction.prepared.name !== 'resize' || !interaction.prepared.edges) return\n\n  const resizeEvent = iEvent as ResizeEvent\n  const resizeOptions = interaction.interactable.options.resize\n  const invert = resizeOptions.invert\n  const invertible = invert === 'reposition' || invert === 'negate'\n\n  const current = interaction.rect\n  const { start: startRect, corrected, delta: deltaRect, previous } = interaction._rects\n\n  extend(previous, corrected)\n\n  if (invertible) {\n    // if invertible, copy the current rect\n    extend(corrected, current)\n\n    if (invert === 'reposition') {\n      // swap edge values if necessary to keep width/height positive\n      if (corrected.top > corrected.bottom) {\n        const swap = corrected.top\n\n        corrected.top = corrected.bottom\n        corrected.bottom = swap\n      }\n      if (corrected.left > corrected.right) {\n        const swap = corrected.left\n\n        corrected.left = corrected.right\n        corrected.right = swap\n      }\n    }\n  } else {\n    // if not invertible, restrict to minimum of 0x0 rect\n    corrected.top = Math.min(current.top, startRect.bottom)\n    corrected.bottom = Math.max(current.bottom, startRect.top)\n    corrected.left = Math.min(current.left, startRect.right)\n    corrected.right = Math.max(current.right, startRect.left)\n  }\n\n  corrected.width = corrected.right - corrected.left\n  corrected.height = corrected.bottom - corrected.top\n\n  for (const edge in corrected) {\n    deltaRect[edge] = corrected[edge] - previous[edge]\n  }\n\n  resizeEvent.edges = interaction.prepared.edges\n  resizeEvent.rect = corrected\n  resizeEvent.deltaRect = deltaRect\n}\n\nfunction end ({ iEvent, interaction }: { iEvent: InteractEvent<any, any>, interaction: Interaction }) {\n  if (interaction.prepared.name !== 'resize' || !interaction.prepared.edges) return\n\n  const resizeEvent = iEvent as ResizeEvent\n\n  resizeEvent.edges = interaction.prepared.edges\n  resizeEvent.rect = interaction._rects.corrected\n  resizeEvent.deltaRect = interaction._rects.delta\n}\n\nfunction updateEventAxes ({\n  iEvent,\n  interaction,\n}: {\n  iEvent: InteractEvent<any, any>\n  interaction: Interaction\n}) {\n  if (interaction.prepared.name !== 'resize' || !interaction.resizeAxes) return\n\n  const options = interaction.interactable.options\n  const resizeEvent = iEvent as ResizeEvent\n\n  if (options.resize.square) {\n    if (interaction.resizeAxes === 'y') {\n      resizeEvent.delta.x = resizeEvent.delta.y\n    } else {\n      resizeEvent.delta.y = resizeEvent.delta.x\n    }\n    resizeEvent.axes = 'xy'\n  } else {\n    resizeEvent.axes = interaction.resizeAxes\n\n    if (interaction.resizeAxes === 'x') {\n      resizeEvent.delta.y = 0\n    } else if (interaction.resizeAxes === 'y') {\n      resizeEvent.delta.x = 0\n    }\n  }\n}\n\nconst resize: Plugin = {\n  id: 'actions/resize',\n  before: ['actions/drag'],\n  install,\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.resizeAxes = 'xy'\n    },\n\n    'interactions:action-start': (arg) => {\n      start(arg)\n      updateEventAxes(arg)\n    },\n    'interactions:action-move': (arg) => {\n      move(arg)\n      updateEventAxes(arg)\n    },\n    'interactions:action-end': end,\n    'auto-start:check': resizeChecker,\n  },\n\n  defaults: {\n    square: false,\n    preserveAspectRatio: false,\n    axis: 'xy',\n\n    // use default margin\n    margin: NaN,\n\n    // object with props left, right, top, bottom which are\n    // true/false values to resize when the pointer is over that edge,\n    // CSS selectors to match the handles for each direction\n    // or the Elements for each handle\n    edges: null,\n\n    // a value of 'none' will limit the resize rect to a minimum of 0x0\n    // 'negate' will alow the rect to have negative width/height\n    // 'reposition' will keep the width/height positive by swapping\n    // the top and bottom edges and/or swapping the left and right edges\n    invert: 'none',\n  } as ResizableOptions,\n\n  cursors: null as ReturnType<typeof initCursors>,\n\n  getCursor ({ edges, axis, name }: ActionProps) {\n    const cursors = resize.cursors\n    let result: string = null\n\n    if (axis) {\n      result = cursors[name + axis]\n    } else if (edges) {\n      let cursorKey = ''\n\n      for (const edge of ['top', 'bottom', 'left', 'right']) {\n        if (edges[edge]) {\n          cursorKey += edge\n        }\n      }\n\n      result = cursors[cursorKey]\n    }\n\n    return result\n  },\n\n  defaultMargin: null as number,\n}\n\nexport default resize\n","import type { Scope } from '@interactjs/core/scope'\n\nimport drag from './drag/plugin'\nimport drop from './drop/plugin'\nimport gesture from './gesture/plugin'\nimport resize from './resize/plugin'\n\nexport default {\n  id: 'actions',\n  install (scope: Scope) {\n    scope.usePlugin(gesture)\n    scope.usePlugin(resize)\n    scope.usePlugin(drag)\n    scope.usePlugin(drop)\n  },\n}\n","let lastTime = 0\nlet request: typeof requestAnimationFrame\nlet cancel: typeof cancelAnimationFrame\n\nfunction init (global: Window | typeof globalThis) {\n  request = global.requestAnimationFrame\n  cancel = global.cancelAnimationFrame\n\n  if (!request) {\n    const vendors = ['ms', 'moz', 'webkit', 'o']\n\n    for (const vendor of vendors) {\n      request = global[`${vendor}RequestAnimationFrame` as 'requestAnimationFrame']\n      cancel =\n        global[`${vendor}CancelAnimationFrame` as 'cancelAnimationFrame'] ||\n        global[`${vendor}CancelRequestAnimationFrame` as 'cancelAnimationFrame']\n    }\n  }\n\n  request = request && request.bind(global)\n  cancel = cancel && cancel.bind(global)\n\n  if (!request) {\n    request = (callback) => {\n      const currTime = Date.now()\n      const timeToCall = Math.max(0, 16 - (currTime - lastTime))\n      const token = global.setTimeout(() => {\n        // eslint-disable-next-line node/no-callback-literal\n        callback(currTime + timeToCall)\n      }, timeToCall)\n\n      lastTime = currTime + timeToCall\n      return token as any\n    }\n\n    cancel = (token) => clearTimeout(token)\n  }\n}\n\nexport default {\n  request: (callback: FrameRequestCallback) => request(callback),\n  cancel: (token: number) => cancel(token),\n  init,\n}\n","import type { Interactable } from '@interactjs/core/Interactable'\nimport type Interaction from '@interactjs/core/Interaction'\nimport type { ActionName, Scope, Plugin } from '@interactjs/core/scope'\nimport type { PointerType } from '@interactjs/types/index'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport is from '@interactjs/utils/is'\nimport raf from '@interactjs/utils/raf'\nimport { getStringOptionResult } from '@interactjs/utils/rect'\nimport { getWindow } from '@interactjs/utils/window'\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    autoScroll: typeof autoScroll\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    autoScroll?: typeof autoScroll\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface PerActionDefaults {\n    autoScroll?: AutoScrollOptions\n  }\n}\n\nexport interface AutoScrollOptions {\n  container?: Window | HTMLElement\n  margin?: number\n  distance?: number\n  interval?: number\n  speed?: number\n  enabled?: boolean\n}\n\nfunction install (scope: Scope) {\n  const { defaults, actions } = scope\n\n  scope.autoScroll = autoScroll\n  autoScroll.now = () => scope.now()\n\n  actions.phaselessTypes.autoscroll = true\n  defaults.perAction.autoScroll = autoScroll.defaults\n}\n\nconst autoScroll = {\n  defaults: {\n    enabled: false,\n    margin: 60,\n\n    // the item that is scrolled (Window or HTMLElement)\n    container: null as AutoScrollOptions['container'],\n\n    // the scroll speed in pixels per second\n    speed: 300,\n  } as AutoScrollOptions,\n\n  now: Date.now,\n\n  interaction: null as Interaction,\n  i: 0, // the handle returned by window.setInterval\n\n  // Direction each pulse is to scroll in\n  x: 0,\n  y: 0,\n\n  isScrolling: false,\n  prevTime: 0,\n  margin: 0,\n  speed: 0,\n\n  start (interaction: Interaction) {\n    autoScroll.isScrolling = true\n    raf.cancel(autoScroll.i)\n\n    interaction.autoScroll = autoScroll\n    autoScroll.interaction = interaction\n    autoScroll.prevTime = autoScroll.now()\n    autoScroll.i = raf.request(autoScroll.scroll)\n  },\n\n  stop () {\n    autoScroll.isScrolling = false\n    if (autoScroll.interaction) {\n      autoScroll.interaction.autoScroll = null\n    }\n    raf.cancel(autoScroll.i)\n  },\n\n  // scroll the window by the values in scroll.x/y\n  scroll () {\n    const { interaction } = autoScroll\n    const { interactable, element } = interaction\n    const actionName = interaction.prepared.name\n    const options = interactable.options[actionName].autoScroll\n    const container = getContainer(options.container, interactable, element)\n    const now = autoScroll.now()\n    // change in time in seconds\n    const dt = (now - autoScroll.prevTime) / 1000\n    // displacement\n    const s = options.speed * dt\n\n    if (s >= 1) {\n      const scrollBy = {\n        x: autoScroll.x * s,\n        y: autoScroll.y * s,\n      }\n\n      if (scrollBy.x || scrollBy.y) {\n        const prevScroll = getScroll(container)\n\n        if (is.window(container)) {\n          container.scrollBy(scrollBy.x, scrollBy.y)\n        } else if (container) {\n          container.scrollLeft += scrollBy.x\n          container.scrollTop += scrollBy.y\n        }\n\n        const curScroll = getScroll(container)\n        const delta = {\n          x: curScroll.x - prevScroll.x,\n          y: curScroll.y - prevScroll.y,\n        }\n\n        if (delta.x || delta.y) {\n          interactable.fire({\n            type: 'autoscroll',\n            target: element,\n            interactable,\n            delta,\n            interaction,\n            container,\n          })\n        }\n      }\n\n      autoScroll.prevTime = now\n    }\n\n    if (autoScroll.isScrolling) {\n      raf.cancel(autoScroll.i)\n      autoScroll.i = raf.request(autoScroll.scroll)\n    }\n  },\n  check (interactable: Interactable, actionName: ActionName) {\n    const options = interactable.options\n\n    return options[actionName].autoScroll?.enabled\n  },\n  onInteractionMove<T extends ActionName> ({\n    interaction,\n    pointer,\n  }: {\n    interaction: Interaction<T>\n    pointer: PointerType\n  }) {\n    if (\n      !(interaction.interacting() && autoScroll.check(interaction.interactable, interaction.prepared.name))\n    ) {\n      return\n    }\n\n    if (interaction.simulation) {\n      autoScroll.x = autoScroll.y = 0\n      return\n    }\n\n    let top: boolean\n    let right: boolean\n    let bottom: boolean\n    let left: boolean\n\n    const { interactable, element } = interaction\n    const actionName = interaction.prepared.name\n    const options = interactable.options[actionName].autoScroll\n    const container = getContainer(options.container, interactable, element)\n\n    if (is.window(container)) {\n      left = pointer.clientX < autoScroll.margin\n      top = pointer.clientY < autoScroll.margin\n      right = pointer.clientX > container.innerWidth - autoScroll.margin\n      bottom = pointer.clientY > container.innerHeight - autoScroll.margin\n    } else {\n      const rect = domUtils.getElementClientRect(container)\n\n      left = pointer.clientX < rect.left + autoScroll.margin\n      top = pointer.clientY < rect.top + autoScroll.margin\n      right = pointer.clientX > rect.right - autoScroll.margin\n      bottom = pointer.clientY > rect.bottom - autoScroll.margin\n    }\n\n    autoScroll.x = right ? 1 : left ? -1 : 0\n    autoScroll.y = bottom ? 1 : top ? -1 : 0\n\n    if (!autoScroll.isScrolling) {\n      // set the autoScroll properties to those of the target\n      autoScroll.margin = options.margin\n      autoScroll.speed = options.speed\n\n      autoScroll.start(interaction)\n    }\n  },\n}\n\nexport function getContainer (value: any, interactable: Interactable, element: Element) {\n  return (\n    (is.string(value) ? getStringOptionResult(value, interactable, element) : value) || getWindow(element)\n  )\n}\n\nexport function getScroll (container: any) {\n  if (is.window(container)) {\n    container = window.document.body\n  }\n\n  return { x: container.scrollLeft, y: container.scrollTop }\n}\n\nexport function getScrollSize (container: any) {\n  if (is.window(container)) {\n    container = window.document.body\n  }\n\n  return { x: container.scrollWidth, y: container.scrollHeight }\n}\n\nexport function getScrollSizeDelta<T extends ActionName> (\n  {\n    interaction,\n    element,\n  }: {\n    interaction: Partial<Interaction<T>>\n    element: Element\n  },\n  func: any,\n) {\n  const scrollOptions = interaction && interaction.interactable.options[interaction.prepared.name].autoScroll\n\n  if (!scrollOptions || !scrollOptions.enabled) {\n    func()\n    return { x: 0, y: 0 }\n  }\n\n  const scrollContainer = getContainer(scrollOptions.container, interaction.interactable, element)\n\n  const prevSize = getScroll(scrollContainer)\n  func()\n  const curSize = getScroll(scrollContainer)\n\n  return {\n    x: curSize.x - prevSize.x,\n    y: curSize.y - prevSize.y,\n  }\n}\n\nconst autoScrollPlugin: Plugin = {\n  id: 'auto-scroll',\n  install,\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.autoScroll = null\n    },\n\n    'interactions:destroy': ({ interaction }) => {\n      interaction.autoScroll = null\n      autoScroll.stop()\n      if (autoScroll.interaction) {\n        autoScroll.interaction = null\n      }\n    },\n\n    'interactions:stop': autoScroll.stop,\n\n    'interactions:action-move': (arg: any) => autoScroll.onInteractionMove(arg),\n  },\n}\n\nexport default autoScrollPlugin\n","import type { ActionProps } from '@interactjs/core/Interaction'\nimport type { ActionName } from '@interactjs/core/scope'\n\nimport { window } from './window'\n\nexport function warnOnce<T> (this: T, method: (...args: any[]) => any, message: string) {\n  let warned = false\n\n  return function (this: T) {\n    if (!warned) {\n      ;(window as any).console.warn(message)\n      warned = true\n    }\n\n    return method.apply(this, arguments)\n  }\n}\n\nexport function copyAction<T extends ActionName> (dest: ActionProps<any>, src: ActionProps<T>) {\n  dest.name = src.name\n  dest.axis = src.axis\n  dest.edges = src.edges\n\n  return dest\n}\n\nexport const sign = (n: number) => (n >= 0 ? 1 : -1)\n","import type { Interactable } from '@interactjs/core/Interactable'\nimport type { Interaction, ActionProps } from '@interactjs/core/Interaction'\nimport type { Scope } from '@interactjs/core/scope'\nimport type { PointerType, PointerEventType, Element } from '@interactjs/types/index'\nimport is from '@interactjs/utils/is'\nimport { warnOnce } from '@interactjs/utils/misc'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    getAction: (\n      this: Interactable,\n      pointer: PointerType,\n      event: PointerEventType,\n      interaction: Interaction,\n      element: Element,\n    ) => ActionProps | null\n    styleCursor: typeof styleCursor\n    actionChecker: typeof actionChecker\n    ignoreFrom: {\n      (...args: any[]): Interactable\n      (): boolean\n    }\n    allowFrom: {\n      (...args: any[]): Interactable\n      (): boolean\n    }\n  }\n}\n\nfunction install (scope: Scope) {\n  const {\n    /** @lends Interactable */\n    Interactable, // tslint:disable-line no-shadowed-variable\n  } = scope\n\n  Interactable.prototype.getAction = function getAction (\n    this: Interactable,\n    pointer: PointerType,\n    event: PointerEventType,\n    interaction: Interaction,\n    element: Element,\n  ): ActionProps {\n    const action = defaultActionChecker(this, event, interaction, element, scope)\n\n    if (this.options.actionChecker) {\n      return this.options.actionChecker(pointer, event, action, this, element, interaction)\n    }\n\n    return action\n  }\n\n  /**\n   * If the target of the `mousedown`, `pointerdown` or `touchstart` event or any\n   * of it's parents match the given CSS selector or Element, no\n   * drag/resize/gesture is started.\n   *\n   * @deprecated\n   * Don't use this method. Instead set the `ignoreFrom` option for each action\n   * or for `pointerEvents`\n   *\n   * ```js\n   * interact(targett)\n   *   .draggable({\n   *     ignoreFrom: 'input, textarea, a[href]'',\n   *   })\n   *   .pointerEvents({\n   *     ignoreFrom: '[no-pointer]',\n   *   })\n   * ```\n   *\n   * @param {string | Element | null} [newValue] a CSS selector string, an\n   * Element or `null` to not ignore any elements\n   * @return {string | Element | object} The current ignoreFrom value or this\n   * Interactable\n   */\n  Interactable.prototype.ignoreFrom = warnOnce(function (this: Interactable, newValue) {\n    return this._backCompatOption('ignoreFrom', newValue)\n  }, 'Interactable.ignoreFrom() has been deprecated. Use Interactble.draggable({ignoreFrom: newValue}).')\n\n  /**\n   *\n   * A drag/resize/gesture is started only If the target of the `mousedown`,\n   * `pointerdown` or `touchstart` event or any of it's parents match the given\n   * CSS selector or Element.\n   *\n   * @deprecated\n   * Don't use this method. Instead set the `allowFrom` option for each action\n   * or for `pointerEvents`\n   *\n   * ```js\n   * interact(targett)\n   *   .resizable({\n   *     allowFrom: '.resize-handle',\n   *   .pointerEvents({\n   *     allowFrom: '.handle',,\n   *   })\n   * ```\n   *\n   * @param {string | Element | null} [newValue] a CSS selector string, an\n   * Element or `null` to allow from any element\n   * @return {string | Element | object} The current allowFrom value or this\n   * Interactable\n   */\n  Interactable.prototype.allowFrom = warnOnce(function (this: Interactable, newValue) {\n    return this._backCompatOption('allowFrom', newValue)\n  }, 'Interactable.allowFrom() has been deprecated. Use Interactble.draggable({allowFrom: newValue}).')\n\n  /**\n   * ```js\n   * interact('.resize-drag')\n   *   .resizable(true)\n   *   .draggable(true)\n   *   .actionChecker(function (pointer, event, action, interactable, element, interaction) {\n   *\n   *     if (interact.matchesSelector(event.target, '.drag-handle')) {\n   *       // force drag with handle target\n   *       action.name = drag\n   *     }\n   *     else {\n   *       // resize from the top and right edges\n   *       action.name  = 'resize'\n   *       action.edges = { top: true, right: true }\n   *     }\n   *\n   *     return action\n   * })\n   * ```\n   *\n   * Returns or sets the function used to check action to be performed on\n   * pointerDown\n   *\n   * @param {function | null} [checker] A function which takes a pointer event,\n   * defaultAction string, interactable, element and interaction as parameters\n   * and returns an object with name property 'drag' 'resize' or 'gesture' and\n   * optionally an `edges` object with boolean 'top', 'left', 'bottom' and right\n   * props.\n   * @return {Function | Interactable} The checker function or this Interactable\n   */\n  Interactable.prototype.actionChecker = actionChecker\n\n  /**\n   * Returns or sets whether the the cursor should be changed depending on the\n   * action that would be performed if the mouse were pressed and dragged.\n   *\n   * @param {boolean} [newValue]\n   * @return {boolean | Interactable} The current setting or this Interactable\n   */\n  Interactable.prototype.styleCursor = styleCursor\n}\n\nfunction defaultActionChecker (\n  interactable: Interactable,\n  event: PointerEventType,\n  interaction: Interaction,\n  element: Element,\n  scope: Scope,\n) {\n  const rect = interactable.getRect(element)\n  const buttons =\n    (event as MouseEvent).buttons ||\n    {\n      0: 1,\n      1: 4,\n      3: 8,\n      4: 16,\n    }[(event as MouseEvent).button as 0 | 1 | 3 | 4]\n  const arg = {\n    action: null,\n    interactable,\n    interaction,\n    element,\n    rect,\n    buttons,\n  }\n\n  scope.fire('auto-start:check', arg)\n\n  return arg.action\n}\n\nfunction styleCursor(this: Interactable): boolean\nfunction styleCursor(this: Interactable, newValue: boolean): typeof this\nfunction styleCursor (this: Interactable, newValue?: boolean) {\n  if (is.bool(newValue)) {\n    this.options.styleCursor = newValue\n\n    return this\n  }\n\n  if (newValue === null) {\n    delete this.options.styleCursor\n\n    return this\n  }\n\n  return this.options.styleCursor\n}\n\nfunction actionChecker (this: Interactable, checker: any) {\n  if (is.func(checker)) {\n    this.options.actionChecker = checker\n\n    return this\n  }\n\n  if (checker === null) {\n    delete this.options.actionChecker\n\n    return this\n  }\n\n  return this.options.actionChecker\n}\n\nexport default {\n  id: 'auto-start/interactableMethods',\n  install,\n}\n","import type { Interactable } from '@interactjs/core/Interactable'\nimport type { Interaction, ActionProps } from '@interactjs/core/Interaction'\nimport type { Scope, SignalArgs, ActionName, Plugin } from '@interactjs/core/scope'\nimport type { CursorChecker, PointerType, PointerEventType, Element } from '@interactjs/types/index'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport { copyAction } from '@interactjs/utils/misc'\n\nimport InteractableMethods from './InteractableMethods'\n\ndeclare module '@interactjs/core/InteractStatic' {\n  export interface InteractStatic {\n    maxInteractions: (newValue: any) => any\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    autoStart: AutoStart\n  }\n\n  interface SignalArgs {\n    'autoStart:before-start': Omit<SignalArgs['interactions:move'], 'interaction'> & {\n      interaction: Interaction<ActionName>\n    }\n    'autoStart:prepared': { interaction: Interaction }\n    'auto-start:check': CheckSignalArg\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface BaseDefaults {\n    actionChecker?: any\n    cursorChecker?: any\n    styleCursor?: any\n  }\n\n  interface PerActionDefaults {\n    manualStart?: boolean\n    max?: number\n    maxPerElement?: number\n    allowFrom?: string | Element\n    ignoreFrom?: string | Element\n    cursorChecker?: CursorChecker\n\n    // only allow left button by default\n    // see https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons#Return_value\n    // TODO: docst\n    mouseButtons?: 0 | 1 | 2 | 4 | 8 | 16\n  }\n}\n\ninterface CheckSignalArg {\n  interactable: Interactable\n  interaction: Interaction\n  element: Element\n  action: ActionProps<ActionName>\n  buttons: number\n}\n\nexport interface AutoStart {\n  // Allow this many interactions to happen simultaneously\n  maxInteractions: number\n  withinInteractionLimit: typeof withinInteractionLimit\n  cursorElement: Element\n}\n\nfunction install (scope: Scope) {\n  const { interactStatic: interact, defaults } = scope\n\n  scope.usePlugin(InteractableMethods)\n\n  defaults.base.actionChecker = null\n  defaults.base.styleCursor = true\n\n  extend(defaults.perAction, {\n    manualStart: false,\n    max: Infinity,\n    maxPerElement: 1,\n    allowFrom: null,\n    ignoreFrom: null,\n\n    // only allow left button by default\n    // see https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons#Return_value\n    mouseButtons: 1,\n  })\n\n  /**\n   * Returns or sets the maximum number of concurrent interactions allowed.  By\n   * default only 1 interaction is allowed at a time (for backwards\n   * compatibility). To allow multiple interactions on the same Interactables and\n   * elements, you need to enable it in the draggable, resizable and gesturable\n   * `'max'` and `'maxPerElement'` options.\n   *\n   * @alias module:interact.maxInteractions\n   *\n   * @param {number} [newValue] Any number. newValue <= 0 means no interactions.\n   */\n  interact.maxInteractions = (newValue: number) => maxInteractions(newValue, scope)\n\n  scope.autoStart = {\n    // Allow this many interactions to happen simultaneously\n    maxInteractions: Infinity,\n    withinInteractionLimit,\n    cursorElement: null,\n  }\n}\n\nfunction prepareOnDown (\n  { interaction, pointer, event, eventTarget }: SignalArgs['interactions:down'],\n  scope: Scope,\n) {\n  if (interaction.interacting()) return\n\n  const actionInfo = getActionInfo(interaction, pointer, event, eventTarget, scope)\n  prepare(interaction, actionInfo, scope)\n}\n\nfunction prepareOnMove (\n  { interaction, pointer, event, eventTarget }: SignalArgs['interactions:move'],\n  scope: Scope,\n) {\n  if (interaction.pointerType !== 'mouse' || interaction.pointerIsDown || interaction.interacting()) return\n\n  const actionInfo = getActionInfo(interaction, pointer, event, eventTarget as Element, scope)\n  prepare(interaction, actionInfo, scope)\n}\n\nfunction startOnMove (arg: SignalArgs['interactions:move'], scope: Scope) {\n  const { interaction } = arg\n\n  if (\n    !interaction.pointerIsDown ||\n    interaction.interacting() ||\n    !interaction.pointerWasMoved ||\n    !interaction.prepared.name\n  ) {\n    return\n  }\n\n  scope.fire('autoStart:before-start', arg)\n\n  const { interactable } = interaction\n  const actionName = (interaction as Interaction<ActionName>).prepared.name\n\n  if (actionName && interactable) {\n    // check manualStart and interaction limit\n    if (\n      interactable.options[actionName].manualStart ||\n      !withinInteractionLimit(interactable, interaction.element, interaction.prepared, scope)\n    ) {\n      interaction.stop()\n    } else {\n      interaction.start(interaction.prepared, interactable, interaction.element)\n      setInteractionCursor(interaction, scope)\n    }\n  }\n}\n\nfunction clearCursorOnStop ({ interaction }: { interaction: Interaction }, scope: Scope) {\n  const { interactable } = interaction\n\n  if (interactable && interactable.options.styleCursor) {\n    setCursor(interaction.element, '', scope)\n  }\n}\n\n// Check if the current interactable supports the action.\n// If so, return the validated action. Otherwise, return null\nfunction validateAction<T extends ActionName> (\n  action: ActionProps<T>,\n  interactable: Interactable,\n  element: Element,\n  eventTarget: Node,\n  scope: Scope,\n) {\n  if (\n    interactable.testIgnoreAllow(interactable.options[action.name], element, eventTarget) &&\n    interactable.options[action.name].enabled &&\n    withinInteractionLimit(interactable, element, action, scope)\n  ) {\n    return action\n  }\n\n  return null\n}\n\nfunction validateMatches (\n  interaction: Interaction,\n  pointer: PointerType,\n  event: PointerEventType,\n  matches: Interactable[],\n  matchElements: Element[],\n  eventTarget: Node,\n  scope: Scope,\n) {\n  for (let i = 0, len = matches.length; i < len; i++) {\n    const match = matches[i]\n    const matchElement = matchElements[i]\n    const matchAction = match.getAction(pointer, event, interaction, matchElement)\n\n    if (!matchAction) {\n      continue\n    }\n\n    const action = validateAction<ActionName>(matchAction, match, matchElement, eventTarget, scope)\n\n    if (action) {\n      return {\n        action,\n        interactable: match,\n        element: matchElement,\n      }\n    }\n  }\n\n  return { action: null, interactable: null, element: null }\n}\n\nfunction getActionInfo (\n  interaction: Interaction,\n  pointer: PointerType,\n  event: PointerEventType,\n  eventTarget: Node,\n  scope: Scope,\n) {\n  let matches: Interactable[] = []\n  let matchElements: Element[] = []\n\n  let element = eventTarget as Element\n\n  function pushMatches (interactable: Interactable) {\n    matches.push(interactable)\n    matchElements.push(element)\n  }\n\n  while (is.element(element)) {\n    matches = []\n    matchElements = []\n\n    scope.interactables.forEachMatch(element, pushMatches)\n\n    const actionInfo = validateMatches(\n      interaction,\n      pointer,\n      event,\n      matches,\n      matchElements,\n      eventTarget,\n      scope,\n    )\n\n    if (actionInfo.action && !actionInfo.interactable.options[actionInfo.action.name].manualStart) {\n      return actionInfo\n    }\n\n    element = domUtils.parentNode(element) as Element\n  }\n\n  return { action: null, interactable: null, element: null }\n}\n\nfunction prepare (\n  interaction: Interaction,\n  {\n    action,\n    interactable,\n    element,\n  }: {\n    action: ActionProps<any>\n    interactable: Interactable\n    element: Element\n  },\n  scope: Scope,\n) {\n  action = action || { name: null }\n\n  interaction.interactable = interactable\n  interaction.element = element\n  copyAction(interaction.prepared, action)\n\n  interaction.rect = interactable && action.name ? interactable.getRect(element) : null\n\n  setInteractionCursor(interaction, scope)\n\n  scope.fire('autoStart:prepared', { interaction })\n}\n\nfunction withinInteractionLimit<T extends ActionName> (\n  interactable: Interactable,\n  element: Element,\n  action: ActionProps<T>,\n  scope: Scope,\n) {\n  const options = interactable.options\n  const maxActions = options[action.name].max\n  const maxPerElement = options[action.name].maxPerElement\n  const autoStartMax = scope.autoStart.maxInteractions\n  let activeInteractions = 0\n  let interactableCount = 0\n  let elementCount = 0\n\n  // no actions if any of these values == 0\n  if (!(maxActions && maxPerElement && autoStartMax)) {\n    return false\n  }\n\n  for (const interaction of scope.interactions.list) {\n    const otherAction = interaction.prepared.name\n\n    if (!interaction.interacting()) {\n      continue\n    }\n\n    activeInteractions++\n\n    if (activeInteractions >= autoStartMax) {\n      return false\n    }\n\n    if (interaction.interactable !== interactable) {\n      continue\n    }\n\n    interactableCount += otherAction === action.name ? 1 : 0\n\n    if (interactableCount >= maxActions) {\n      return false\n    }\n\n    if (interaction.element === element) {\n      elementCount++\n\n      if (otherAction === action.name && elementCount >= maxPerElement) {\n        return false\n      }\n    }\n  }\n\n  return autoStartMax > 0\n}\n\nfunction maxInteractions (newValue: any, scope: Scope) {\n  if (is.number(newValue)) {\n    scope.autoStart.maxInteractions = newValue\n\n    return this\n  }\n\n  return scope.autoStart.maxInteractions\n}\n\nfunction setCursor (element: Element, cursor: string, scope: Scope) {\n  const { cursorElement: prevCursorElement } = scope.autoStart\n\n  if (prevCursorElement && prevCursorElement !== element) {\n    prevCursorElement.style.cursor = ''\n  }\n\n  element.ownerDocument.documentElement.style.cursor = cursor\n  element.style.cursor = cursor\n  scope.autoStart.cursorElement = cursor ? element : null\n}\n\nfunction setInteractionCursor<T extends ActionName> (interaction: Interaction<T>, scope: Scope) {\n  const { interactable, element, prepared } = interaction\n\n  if (!(interaction.pointerType === 'mouse' && interactable && interactable.options.styleCursor)) {\n    // clear previous target element cursor\n    if (scope.autoStart.cursorElement) {\n      setCursor(scope.autoStart.cursorElement, '', scope)\n    }\n\n    return\n  }\n\n  let cursor = ''\n\n  if (prepared.name) {\n    const cursorChecker = interactable.options[prepared.name].cursorChecker\n\n    if (is.func(cursorChecker)) {\n      cursor = cursorChecker(prepared, interactable, element, interaction._interacting)\n    } else {\n      cursor = scope.actions.map[prepared.name].getCursor(prepared)\n    }\n  }\n\n  setCursor(interaction.element, cursor || '', scope)\n}\n\nconst autoStart: Plugin = {\n  id: 'auto-start/base',\n  before: ['actions'],\n  install,\n  listeners: {\n    'interactions:down': prepareOnDown,\n    'interactions:move': (arg, scope) => {\n      prepareOnMove(arg, scope)\n      startOnMove(arg, scope)\n    },\n    'interactions:stop': clearCursorOnStop,\n  },\n  maxInteractions,\n  withinInteractionLimit,\n  validateAction,\n}\n\nexport default autoStart\n","import type { Interactable } from '@interactjs/core/Interactable'\nimport type Interaction from '@interactjs/core/Interaction'\nimport type { SignalArgs, Scope, ActionName } from '@interactjs/core/scope'\nimport type { Element } from '@interactjs/types/index'\nimport { parentNode } from '@interactjs/utils/domUtils'\nimport is from '@interactjs/utils/is'\n\nimport autoStart from './base'\n\nfunction beforeStart ({ interaction, eventTarget, dx, dy }: SignalArgs['interactions:move'], scope: Scope) {\n  if (interaction.prepared.name !== 'drag') return\n\n  // check if a drag is in the correct axis\n  const absX = Math.abs(dx)\n  const absY = Math.abs(dy)\n  const targetOptions = interaction.interactable.options.drag\n  const startAxis = targetOptions.startAxis\n  const currentAxis = absX > absY ? 'x' : absX < absY ? 'y' : 'xy'\n\n  interaction.prepared.axis =\n    targetOptions.lockAxis === 'start'\n      ? (currentAxis[0] as 'x' | 'y') // always lock to one axis even if currentAxis === 'xy'\n      : targetOptions.lockAxis\n\n  // if the movement isn't in the startAxis of the interactable\n  if (currentAxis !== 'xy' && startAxis !== 'xy' && startAxis !== currentAxis) {\n    // cancel the prepared action\n    ;(interaction as Interaction<ActionName>).prepared.name = null\n\n    // then try to get a drag from another ineractable\n    let element = eventTarget as Element\n\n    const getDraggable = function (interactable: Interactable): Interactable | void {\n      if (interactable === interaction.interactable) return\n\n      const options = interaction.interactable.options.drag\n\n      if (!options.manualStart && interactable.testIgnoreAllow(options, element, eventTarget)) {\n        const action = interactable.getAction(\n          interaction.downPointer,\n          interaction.downEvent,\n          interaction,\n          element,\n        )\n\n        if (\n          action &&\n          action.name === 'drag' &&\n          checkStartAxis(currentAxis, interactable) &&\n          autoStart.validateAction(action, interactable, element, eventTarget, scope)\n        ) {\n          return interactable\n        }\n      }\n    }\n\n    // check all interactables\n    while (is.element(element)) {\n      const interactable = scope.interactables.forEachMatch(element, getDraggable)\n\n      if (interactable) {\n        ;(interaction as Interaction<ActionName>).prepared.name = 'drag'\n        interaction.interactable = interactable\n        interaction.element = element\n        break\n      }\n\n      element = parentNode(element) as Element\n    }\n  }\n}\n\nfunction checkStartAxis (startAxis: string, interactable: Interactable) {\n  if (!interactable) {\n    return false\n  }\n\n  const thisAxis = interactable.options.drag.startAxis\n\n  return startAxis === 'xy' || thisAxis === 'xy' || thisAxis === startAxis\n}\n\nexport default {\n  id: 'auto-start/dragAxis',\n  listeners: { 'autoStart:before-start': beforeStart },\n}\n","import type Interaction from '@interactjs/core/Interaction'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\n\nimport basePlugin from './base'\n\ndeclare module '@interactjs/core/options' {\n  interface PerActionDefaults {\n    hold?: number\n    delay?: number\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    autoStartHoldTimer?: any\n  }\n}\n\nfunction install (scope: Scope) {\n  const { defaults } = scope\n\n  scope.usePlugin(basePlugin)\n\n  defaults.perAction.hold = 0\n  defaults.perAction.delay = 0\n}\n\nfunction getHoldDuration (interaction: Interaction) {\n  const actionName = interaction.prepared && interaction.prepared.name\n\n  if (!actionName) {\n    return null\n  }\n\n  const options = interaction.interactable.options\n\n  return options[actionName].hold || options[actionName].delay\n}\n\nconst hold: Plugin = {\n  id: 'auto-start/hold',\n  install,\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.autoStartHoldTimer = null\n    },\n\n    'autoStart:prepared': ({ interaction }) => {\n      const hold = getHoldDuration(interaction)\n\n      if (hold > 0) {\n        interaction.autoStartHoldTimer = setTimeout(() => {\n          interaction.start(interaction.prepared, interaction.interactable, interaction.element)\n        }, hold)\n      }\n    },\n\n    'interactions:move': ({ interaction, duplicate }) => {\n      if (interaction.autoStartHoldTimer && interaction.pointerWasMoved && !duplicate) {\n        clearTimeout(interaction.autoStartHoldTimer)\n        interaction.autoStartHoldTimer = null\n      }\n    },\n\n    // prevent regular down->move autoStart\n    'autoStart:before-start': ({ interaction }) => {\n      const holdDuration = getHoldDuration(interaction)\n\n      if (holdDuration > 0) {\n        interaction.prepared.name = null\n      }\n    },\n  },\n  getHoldDuration,\n}\nexport default hold\n","import type { Scope } from '@interactjs/core/scope'\n\nimport autoStart from './base'\nimport dragAxis from './dragAxis'\nimport hold from './hold'\n\nexport default {\n  id: 'auto-start',\n  install (scope: Scope) {\n    scope.usePlugin(autoStart)\n    scope.usePlugin(hold)\n    scope.usePlugin(dragAxis)\n  },\n}\n","import type { Interactable } from '@interactjs/core/Interactable'\nimport type Interaction from '@interactjs/core/Interaction'\nimport type { Scope } from '@interactjs/core/scope'\nimport type { PointerEventType } from '@interactjs/types/index'\nimport { matchesSelector, nodeContains } from '@interactjs/utils/domUtils'\nimport is from '@interactjs/utils/is'\nimport { getWindow } from '@interactjs/utils/window'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    preventDefault: typeof preventDefault\n    checkAndPreventDefault: (event: Event) => void\n  }\n}\n\ntype PreventDefaultValue = 'always' | 'never' | 'auto'\nfunction preventDefault(this: Interactable): PreventDefaultValue\nfunction preventDefault(this: Interactable, newValue: PreventDefaultValue): typeof this\nfunction preventDefault (this: Interactable, newValue?: PreventDefaultValue) {\n  if (/^(always|never|auto)$/.test(newValue)) {\n    this.options.preventDefault = newValue\n    return this\n  }\n\n  if (is.bool(newValue)) {\n    this.options.preventDefault = newValue ? 'always' : 'never'\n    return this\n  }\n\n  return this.options.preventDefault\n}\n\nfunction checkAndPreventDefault (interactable: Interactable, scope: Scope, event: Event) {\n  const setting = interactable.options.preventDefault\n\n  if (setting === 'never') return\n\n  if (setting === 'always') {\n    event.preventDefault()\n    return\n  }\n\n  // setting === 'auto'\n\n  // if the browser supports passive event listeners and isn't running on iOS,\n  // don't preventDefault of touch{start,move} events. CSS touch-action and\n  // user-select should be used instead of calling event.preventDefault().\n  if (scope.events.supportsPassive && /^touch(start|move)$/.test(event.type)) {\n    const doc = getWindow(event.target).document\n    const docOptions = scope.getDocOptions(doc)\n\n    if (!(docOptions && docOptions.events) || docOptions.events.passive !== false) {\n      return\n    }\n  }\n\n  // don't preventDefault of pointerdown events\n  if (/^(mouse|pointer|touch)*(down|start)/i.test(event.type)) {\n    return\n  }\n\n  // don't preventDefault on editable elements\n  if (\n    is.element(event.target) &&\n    matchesSelector(event.target, 'input,select,textarea,[contenteditable=true],[contenteditable=true] *')\n  ) {\n    return\n  }\n\n  event.preventDefault()\n}\n\nfunction onInteractionEvent ({ interaction, event }: { interaction: Interaction, event: PointerEventType }) {\n  if (interaction.interactable) {\n    interaction.interactable.checkAndPreventDefault(event as Event)\n  }\n}\n\nexport function install (scope: Scope) {\n  /** @lends Interactable */\n  const { Interactable } = scope\n\n  /**\n   * Returns or sets whether to prevent the browser's default behaviour in\n   * response to pointer events. Can be set to:\n   *  - `'always'` to always prevent\n   *  - `'never'` to never prevent\n   *  - `'auto'` to let interact.js try to determine what would be best\n   *\n   * @param {string} [newValue] `'always'`, `'never'` or `'auto'`\n   * @return {string | Interactable} The current setting or this Interactable\n   */\n  Interactable.prototype.preventDefault = preventDefault\n\n  Interactable.prototype.checkAndPreventDefault = function (event) {\n    return checkAndPreventDefault(this, scope, event)\n  }\n\n  // prevent native HTML5 drag on interact.js target elements\n  scope.interactions.docEvents.push({\n    type: 'dragstart',\n    listener (event) {\n      for (const interaction of scope.interactions.list) {\n        if (\n          interaction.element &&\n          (interaction.element === event.target || nodeContains(interaction.element, event.target))\n        ) {\n          interaction.interactable.checkAndPreventDefault(event)\n          return\n        }\n      }\n    },\n  })\n}\n\nexport default {\n  id: 'core/interactablePreventDefault',\n  install,\n  listeners: ['down', 'move', 'up', 'cancel'].reduce((acc, eventType) => {\n    acc[`interactions:${eventType}`] = onInteractionEvent\n    return acc\n  }, {} as any),\n}\n","export default {}\n","import type Interaction from '@interactjs/core/Interaction'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport visualizer from '@interactjs/dev-tools/visualizer/plugin'\nimport type { Element, OptionMethod } from '@interactjs/types/index'\nimport domObjects from '@interactjs/utils/domObjects'\nimport { parentNode } from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport * as win from '@interactjs/utils/window'\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    logger: Logger\n  }\n}\n\ndeclare module '@interactjs/core/InteractStatic' {\n  export interface InteractStatic {\n    visializer: typeof visualizer\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface BaseDefaults {\n    devTools?: DevToolsOptions\n  }\n}\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    devTools: OptionMethod<DevToolsOptions>\n  }\n}\n\nexport interface DevToolsOptions {\n  ignore: { [P in keyof typeof CheckName]?: boolean }\n}\n\nexport interface Logger {\n  warn: (...args: any[]) => void\n  error: (...args: any[]) => void\n  log: (...args: any[]) => void\n}\n\nexport interface Check {\n  name: CheckName\n  text: string\n  perform: (interaction: Interaction) => boolean\n  getInfo: (interaction: Interaction) => any[]\n}\n\nenum CheckName {\n  touchAction = 'touchAction',\n  boxSizing = 'boxSizing',\n  noListeners = 'noListeners',\n}\n\nconst prefix = '[interact.js] '\nconst links = {\n  touchAction: 'https://developer.mozilla.org/en-US/docs/Web/CSS/touch-action',\n  boxSizing: 'https://developer.mozilla.org/en-US/docs/Web/CSS/box-sizing',\n}\n\n// eslint-disable-next-line no-undef\nconst isProduction = process.env.NODE_ENV === 'production'\n\nfunction install (scope: Scope, { logger }: { logger?: Logger } = {}) {\n  const { Interactable, defaults } = scope\n\n  scope.logger = logger || console\n\n  defaults.base.devTools = {\n    ignore: {},\n  }\n\n  Interactable.prototype.devTools = function (options?: object) {\n    if (options) {\n      extend(this.options.devTools, options)\n      return this\n    }\n\n    return this.options.devTools\n  }\n\n  scope.usePlugin(visualizer)\n}\n\nconst checks: Check[] = [\n  {\n    name: CheckName.touchAction,\n    perform ({ element }) {\n      return !parentHasStyle(element, 'touchAction', /pan-|pinch|none/)\n    },\n    getInfo ({ element }) {\n      return [element, links.touchAction]\n    },\n    text: 'Consider adding CSS \"touch-action: none\" to this element\\n',\n  },\n\n  {\n    name: CheckName.boxSizing,\n    perform (interaction) {\n      const { element } = interaction\n\n      return (\n        interaction.prepared.name === 'resize' &&\n        element instanceof domObjects.HTMLElement &&\n        !hasStyle(element, 'boxSizing', /border-box/)\n      )\n    },\n    text: 'Consider adding CSS \"box-sizing: border-box\" to this resizable element',\n    getInfo ({ element }) {\n      return [element, links.boxSizing]\n    },\n  },\n\n  {\n    name: CheckName.noListeners,\n    perform (interaction) {\n      const actionName = interaction.prepared.name\n      const moveListeners = interaction.interactable.events.types[`${actionName}move`] || []\n\n      return !moveListeners.length\n    },\n    getInfo (interaction) {\n      return [interaction.prepared.name, interaction.interactable]\n    },\n    text: 'There are no listeners set for this action',\n  },\n]\n\nfunction hasStyle (element: HTMLElement, prop: keyof CSSStyleDeclaration, styleRe: RegExp) {\n  const value = element.style[prop] || win.window.getComputedStyle(element)[prop]\n  return styleRe.test((value || '').toString())\n}\n\nfunction parentHasStyle (element: Element, prop: keyof CSSStyleDeclaration, styleRe: RegExp) {\n  let parent = element as HTMLElement\n\n  while (is.element(parent)) {\n    if (hasStyle(parent, prop, styleRe)) {\n      return true\n    }\n\n    parent = parentNode(parent) as HTMLElement\n  }\n\n  return false\n}\n\nconst id = 'dev-tools'\nconst defaultExport: Plugin = isProduction\n  ? { id, install: () => {} }\n  : {\n    id,\n    install,\n    listeners: {\n      'interactions:action-start': ({ interaction }, scope) => {\n        for (const check of checks) {\n          const options = interaction.interactable && interaction.interactable.options\n\n          if (\n            !(options && options.devTools && options.devTools.ignore[check.name]) &&\n              check.perform(interaction)\n          ) {\n            scope.logger.warn(prefix + check.text, ...check.getInfo(interaction))\n          }\n        }\n      },\n    },\n    checks,\n    CheckName,\n    links,\n    prefix,\n  }\n\nexport default defaultExport\n","import * as arr from './arr'\nimport is from './is'\n\n// tslint:disable-next-line ban-types\nexport default function clone<T extends Object> (source: T): Partial<T> {\n  const dest = {} as Partial<T>\n\n  for (const prop in source) {\n    const value = source[prop]\n\n    if (is.plainObject(value)) {\n      dest[prop] = clone(value) as any\n    } else if (is.array(value)) {\n      dest[prop] = arr.from(value) as typeof value\n    } else {\n      dest[prop] = value\n    }\n  }\n\n  return dest\n}\n","import type { EventPhase } from '@interactjs/core/InteractEvent'\nimport type { Interaction, DoAnyPhaseArg } from '@interactjs/core/Interaction'\nimport type { EdgeOptions, FullRect, Point, Rect } from '@interactjs/types/index'\nimport clone from '@interactjs/utils/clone'\nimport extend from '@interactjs/utils/extend'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport type { Modifier, ModifierArg, ModifierState } from './base'\n\nexport interface ModificationResult {\n  delta: Point\n  rectDelta: Rect\n  coords: Point\n  rect: FullRect\n  eventProps: any[]\n  changed: boolean\n}\n\ninterface MethodArg {\n  phase: EventPhase\n  pageCoords: Point\n  rect: FullRect\n  coords: Point\n  preEnd?: boolean\n  skipModifiers?: number\n}\n\nexport default class Modification {\n  states: ModifierState[] = []\n  startOffset: Rect = { left: 0, right: 0, top: 0, bottom: 0 }\n  startDelta!: Point\n  result!: ModificationResult\n  endResult!: Point\n  edges!: EdgeOptions\n  readonly interaction: Readonly<Interaction>\n\n  constructor (interaction: Interaction) {\n    this.interaction = interaction\n    this.result = createResult()\n  }\n\n  start ({ phase }: { phase: EventPhase }, pageCoords: Point) {\n    const { interaction } = this\n    const modifierList = getModifierList(interaction)\n    this.prepareStates(modifierList)\n\n    this.edges = extend({}, interaction.edges)\n    this.startOffset = getRectOffset(interaction.rect, pageCoords)\n    this.startDelta = { x: 0, y: 0 }\n\n    const arg = this.fillArg({\n      phase,\n      pageCoords,\n      preEnd: false,\n    })\n\n    this.result = createResult()\n    this.startAll(arg)\n\n    const result = (this.result = this.setAll(arg))\n\n    return result\n  }\n\n  fillArg (arg: Partial<ModifierArg>) {\n    const { interaction } = this\n\n    arg.interaction = interaction\n    arg.interactable = interaction.interactable\n    arg.element = interaction.element\n    arg.rect = arg.rect || interaction.rect\n    arg.edges = this.edges\n    arg.startOffset = this.startOffset\n\n    return arg as ModifierArg\n  }\n\n  startAll (arg: MethodArg & Partial<ModifierArg>) {\n    for (const state of this.states) {\n      if (state.methods.start) {\n        arg.state = state\n        state.methods.start(arg as ModifierArg)\n      }\n    }\n  }\n\n  setAll (arg: MethodArg & Partial<ModifierArg>): ModificationResult {\n    const { phase, preEnd, skipModifiers, rect: unmodifiedRect } = arg\n\n    arg.coords = extend({}, arg.pageCoords)\n    arg.rect = extend({}, unmodifiedRect)\n\n    const states = skipModifiers ? this.states.slice(skipModifiers) : this.states\n\n    const newResult = createResult(arg.coords, arg.rect)\n\n    for (const state of states) {\n      const { options } = state\n      const lastModifierCoords = extend({}, arg.coords)\n      let returnValue = null\n\n      if (state.methods?.set && this.shouldDo(options, preEnd, phase)) {\n        arg.state = state\n        returnValue = state.methods.set(arg as ModifierArg<never>)\n\n        rectUtils.addEdges(this.interaction.edges, arg.rect, {\n          x: arg.coords.x - lastModifierCoords.x,\n          y: arg.coords.y - lastModifierCoords.y,\n        })\n      }\n\n      newResult.eventProps.push(returnValue)\n    }\n\n    newResult.delta.x = arg.coords.x - arg.pageCoords.x\n    newResult.delta.y = arg.coords.y - arg.pageCoords.y\n\n    newResult.rectDelta.left = arg.rect.left - unmodifiedRect.left\n    newResult.rectDelta.right = arg.rect.right - unmodifiedRect.right\n    newResult.rectDelta.top = arg.rect.top - unmodifiedRect.top\n    newResult.rectDelta.bottom = arg.rect.bottom - unmodifiedRect.bottom\n\n    const prevCoords = this.result.coords\n    const prevRect = this.result.rect\n\n    if (prevCoords && prevRect) {\n      const rectChanged =\n        newResult.rect.left !== prevRect.left ||\n        newResult.rect.right !== prevRect.right ||\n        newResult.rect.top !== prevRect.top ||\n        newResult.rect.bottom !== prevRect.bottom\n\n      newResult.changed =\n        rectChanged || prevCoords.x !== newResult.coords.x || prevCoords.y !== newResult.coords.y\n    }\n\n    return newResult\n  }\n\n  applyToInteraction (arg: { phase: EventPhase, rect?: Rect }) {\n    const { interaction } = this\n    const { phase } = arg\n    const curCoords = interaction.coords.cur\n    const startCoords = interaction.coords.start\n    const { result, startDelta } = this\n    const curDelta = result.delta\n\n    if (phase === 'start') {\n      extend(this.startDelta, result.delta)\n    }\n\n    for (const [coordsSet, delta] of [\n      [startCoords, startDelta],\n      [curCoords, curDelta],\n    ] as const) {\n      coordsSet.page.x += delta.x\n      coordsSet.page.y += delta.y\n      coordsSet.client.x += delta.x\n      coordsSet.client.y += delta.y\n    }\n\n    const { rectDelta } = this.result\n    const rect = arg.rect || interaction.rect\n\n    rect.left += rectDelta.left\n    rect.right += rectDelta.right\n    rect.top += rectDelta.top\n    rect.bottom += rectDelta.bottom\n\n    rect.width = rect.right - rect.left\n    rect.height = rect.bottom - rect.top\n  }\n\n  setAndApply (\n    arg: Partial<DoAnyPhaseArg> & {\n      phase: EventPhase\n      preEnd?: boolean\n      skipModifiers?: number\n      modifiedCoords?: Point\n    },\n  ): void | false {\n    const { interaction } = this\n    const { phase, preEnd, skipModifiers } = arg\n\n    const result = this.setAll(\n      this.fillArg({\n        preEnd,\n        phase,\n        pageCoords: arg.modifiedCoords || interaction.coords.cur.page,\n      }),\n    )\n\n    this.result = result\n\n    // don't fire an action move if a modifier would keep the event in the same\n    // cordinates as before\n    if (\n      !result.changed &&\n      (!skipModifiers || skipModifiers < this.states.length) &&\n      interaction.interacting()\n    ) {\n      return false\n    }\n\n    if (arg.modifiedCoords) {\n      const { page } = interaction.coords.cur\n      const adjustment = {\n        x: arg.modifiedCoords.x - page.x,\n        y: arg.modifiedCoords.y - page.y,\n      }\n\n      result.coords.x += adjustment.x\n      result.coords.y += adjustment.y\n      result.delta.x += adjustment.x\n      result.delta.y += adjustment.y\n    }\n\n    this.applyToInteraction(arg)\n  }\n\n  beforeEnd (arg: Omit<DoAnyPhaseArg, 'iEvent'> & { state?: ModifierState }): void | false {\n    const { interaction, event } = arg\n    const states = this.states\n\n    if (!states || !states.length) {\n      return\n    }\n\n    let doPreend = false\n\n    for (const state of states) {\n      arg.state = state\n      const { options, methods } = state\n\n      const endPosition = methods.beforeEnd && methods.beforeEnd((arg as unknown) as ModifierArg)\n\n      if (endPosition) {\n        this.endResult = endPosition\n        return false\n      }\n\n      doPreend = doPreend || (!doPreend && this.shouldDo(options, true, arg.phase, true))\n    }\n\n    if (doPreend) {\n      // trigger a final modified move before ending\n      interaction.move({ event, preEnd: true })\n    }\n  }\n\n  stop (arg: { interaction: Interaction }) {\n    const { interaction } = arg\n\n    if (!this.states || !this.states.length) {\n      return\n    }\n\n    const modifierArg: Partial<ModifierArg> = extend(\n      {\n        states: this.states,\n        interactable: interaction.interactable,\n        element: interaction.element,\n        rect: null,\n      },\n      arg,\n    )\n\n    this.fillArg(modifierArg)\n\n    for (const state of this.states) {\n      modifierArg.state = state\n\n      if (state.methods.stop) {\n        state.methods.stop(modifierArg as ModifierArg)\n      }\n    }\n\n    this.states = null\n    this.endResult = null\n  }\n\n  prepareStates (modifierList: Modifier[]) {\n    this.states = []\n\n    for (let index = 0; index < modifierList.length; index++) {\n      const { options, methods, name } = modifierList[index]\n\n      this.states.push({\n        options,\n        methods,\n        index,\n        name,\n      })\n    }\n\n    return this.states\n  }\n\n  restoreInteractionCoords ({ interaction: { coords, rect, modification } }: { interaction: Interaction }) {\n    if (!modification.result) return\n\n    const { startDelta } = modification\n    const { delta: curDelta, rectDelta } = modification.result\n\n    const coordsAndDeltas = [\n      [coords.start, startDelta],\n      [coords.cur, curDelta],\n    ]\n\n    for (const [coordsSet, delta] of coordsAndDeltas as any) {\n      coordsSet.page.x -= delta.x\n      coordsSet.page.y -= delta.y\n      coordsSet.client.x -= delta.x\n      coordsSet.client.y -= delta.y\n    }\n\n    rect.left -= rectDelta.left\n    rect.right -= rectDelta.right\n    rect.top -= rectDelta.top\n    rect.bottom -= rectDelta.bottom\n  }\n\n  shouldDo (options, preEnd?: boolean, phase?: string, requireEndOnly?: boolean) {\n    if (\n      // ignore disabled modifiers\n      !options ||\n      options.enabled === false ||\n      // check if we require endOnly option to fire move before end\n      (requireEndOnly && !options.endOnly) ||\n      // don't apply endOnly modifiers when not ending\n      (options.endOnly && !preEnd) ||\n      // check if modifier should run be applied on start\n      (phase === 'start' && !options.setStart)\n    ) {\n      return false\n    }\n\n    return true\n  }\n\n  copyFrom (other: Modification) {\n    this.startOffset = other.startOffset\n    this.startDelta = other.startDelta\n    this.edges = other.edges\n    this.states = other.states.map((s) => clone(s) as ModifierState)\n    this.result = createResult(extend({}, other.result.coords), extend({}, other.result.rect))\n  }\n\n  destroy () {\n    for (const prop in this) {\n      this[prop] = null\n    }\n  }\n}\n\nfunction createResult (coords?: Point, rect?: FullRect): ModificationResult {\n  return {\n    rect,\n    coords,\n    delta: { x: 0, y: 0 },\n    rectDelta: {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n    },\n    eventProps: [],\n    changed: true,\n  }\n}\n\nfunction getModifierList (interaction) {\n  const actionOptions = interaction.interactable.options[interaction.prepared.name]\n  const actionModifiers = actionOptions.modifiers\n\n  if (actionModifiers && actionModifiers.length) {\n    return actionModifiers\n  }\n\n  return ['snap', 'snapSize', 'snapEdges', 'restrict', 'restrictEdges', 'restrictSize']\n    .map((type) => {\n      const options = actionOptions[type]\n\n      return (\n        options &&\n        options.enabled && {\n          options,\n          methods: options._methods,\n        }\n      )\n    })\n    .filter((m) => !!m)\n}\n\nexport function getRectOffset (rect, coords) {\n  return rect\n    ? {\n      left: coords.x - rect.left,\n      top: coords.y - rect.top,\n      right: rect.right - coords.x,\n      bottom: rect.bottom - coords.y,\n    }\n    : {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0,\n    }\n}\n","import type { EventPhase, InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { Interactable } from '@interactjs/core/Interactable'\nimport type Interaction from '@interactjs/core/Interaction'\nimport type { Plugin } from '@interactjs/core/scope'\nimport type { EdgeOptions, FullRect, Point, Rect } from '@interactjs/types/index'\n\nimport Modification from './Modification'\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    modification?: Modification\n  }\n}\n\ndeclare module '@interactjs/core/InteractEvent' {\n  interface InteractEvent {\n    modifiers?: Array<{\n      name: string\n      [key: string]: any\n    }>\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface PerActionDefaults {\n    modifiers?: Modifier[]\n  }\n}\n\nexport interface Modifier<\n  Defaults = any,\n  State extends ModifierState = any,\n  Name extends string = any,\n  Result = any\n> {\n  options: Defaults\n  methods: {\n    start?: (arg: ModifierArg<State>) => void\n    set?: (arg: ModifierArg<State>) => Result\n    beforeEnd?: (arg: ModifierArg<State>) => Point | void\n    stop?: (arg: ModifierArg<State>) => void\n  }\n  name?: Name\n  enable: () => Modifier<Defaults, State, Name, Result>\n  disable: () => Modifier<Defaults, State, Name, Result>\n}\n\nexport type ModifierState<Defaults = unknown, StateProps = unknown, Name extends string = any> = {\n  options: Defaults\n  methods?: Modifier<Defaults>['methods']\n  index?: number\n  name?: Name\n} & StateProps\n\nexport interface ModifierArg<State extends ModifierState = ModifierState> {\n  interaction: Interaction\n  interactable: Interactable\n  phase: EventPhase\n  rect: FullRect\n  edges: EdgeOptions\n  state: State\n  element: Element\n  pageCoords: Point\n  prevCoords: Point\n  prevRect?: FullRect\n  coords: Point\n  startOffset: Rect\n  preEnd?: boolean\n}\n\nexport interface ModifierModule<\n  Defaults extends { enabled?: boolean },\n  State extends ModifierState,\n  Result = unknown\n> {\n  defaults?: Defaults\n  start?(arg: ModifierArg<State>): void\n  set?(arg: ModifierArg<State>): Result\n  beforeEnd?(arg: ModifierArg<State>): Point | void\n  stop?(arg: ModifierArg<State>): void\n}\n\nexport interface ModifierFunction<\n  Defaults extends { enabled?: boolean },\n  State extends ModifierState,\n  Name extends string\n> {\n  (_options?: Partial<Defaults>): Modifier<Defaults, State, Name>\n  _defaults: Defaults\n  _methods: ModifierModule<Defaults, State>\n}\n\nexport function makeModifier<\n  Defaults extends { enabled?: boolean },\n  State extends ModifierState,\n  Name extends string,\n  Result\n> (module: ModifierModule<Defaults, State, Result>, name?: Name) {\n  const { defaults } = module\n  const methods = {\n    start: module.start,\n    set: module.set,\n    beforeEnd: module.beforeEnd,\n    stop: module.stop,\n  }\n\n  const modifier = (_options?: Partial<Defaults>) => {\n    const options = (_options || {}) as Defaults\n\n    options.enabled = options.enabled !== false\n\n    // add missing defaults to options\n    for (const prop in defaults) {\n      if (!(prop in options)) {\n        ;(options as any)[prop] = defaults[prop]\n      }\n    }\n\n    const m: Modifier<Defaults, State, Name, Result> = {\n      options,\n      methods,\n      name,\n      enable: () => {\n        options.enabled = true\n        return m\n      },\n      disable: () => {\n        options.enabled = false\n        return m\n      },\n    }\n\n    return m\n  }\n\n  if (name && typeof name === 'string') {\n    // for backwrads compatibility\n    modifier._defaults = defaults\n    modifier._methods = methods\n  }\n\n  return modifier\n}\n\nexport function addEventModifiers ({\n  iEvent,\n  interaction,\n}: {\n  iEvent: InteractEvent<any>\n  interaction: Interaction<any>\n}) {\n  const result = interaction.modification!.result\n\n  if (result) {\n    iEvent.modifiers = result.eventProps\n  }\n}\n\nconst modifiersBase: Plugin = {\n  id: 'modifiers/base',\n  before: ['actions'],\n  install: (scope) => {\n    scope.defaults.perAction.modifiers = []\n  },\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.modification = new Modification(interaction)\n    },\n\n    'interactions:before-action-start': (arg) => {\n      const modification = arg.interaction.modification!\n\n      modification.start(arg, arg.interaction.coords.start.page)\n      arg.interaction.edges = modification.edges\n      modification.applyToInteraction(arg)\n    },\n\n    'interactions:before-action-move': (arg) => arg.interaction.modification.setAndApply(arg),\n\n    'interactions:before-action-end': (arg) => arg.interaction.modification.beforeEnd(arg),\n\n    'interactions:action-start': addEventModifiers,\n    'interactions:action-move': addEventModifiers,\n    'interactions:action-end': addEventModifiers,\n\n    'interactions:after-action-start': (arg) => arg.interaction.modification.restoreInteractionCoords(arg),\n    'interactions:after-action-move': (arg) => arg.interaction.modification.restoreInteractionCoords(arg),\n\n    'interactions:stop': (arg) => arg.interaction.modification.stop(arg),\n  },\n}\n\nexport default modifiersBase\n","import type { Point, Listeners, OrBoolean, Element } from '@interactjs/types/index'\n\nexport interface Defaults {\n  base: BaseDefaults\n  perAction: PerActionDefaults\n  actions: ActionDefaults\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface ActionDefaults {}\n\nexport interface BaseDefaults {\n  preventDefault?: 'auto' | 'never' | string\n  deltaSource?: 'page' | 'client'\n  context?: Node\n}\n\nexport interface PerActionDefaults {\n  enabled?: boolean\n  origin?: Point | string | Element\n  listeners?: Listeners\n  allowFrom?: string | Element\n  ignoreFrom?: string | Element\n}\n\nexport type Options = Partial<BaseDefaults> &\nPartial<PerActionDefaults> &\n{\n  [P in keyof ActionDefaults]?: Partial<ActionDefaults[P]>\n}\n\n// export interface Options extends BaseDefaults, PerActionDefaults {}\n\nexport interface OptionsArg extends BaseDefaults, OrBoolean<Partial<ActionDefaults>> {}\n\nexport const defaults: Defaults = {\n  base: {\n    preventDefault: 'auto',\n    deltaSource: 'page',\n  },\n\n  perAction: {\n    enabled: false,\n    origin: { x: 0, y: 0 },\n  },\n\n  actions: {} as ActionDefaults,\n}\n","import type { ActionName } from '@interactjs/core/scope'\nimport type { Point, FullRect, PointerEventType, Element } from '@interactjs/types/index'\nimport extend from '@interactjs/utils/extend'\nimport getOriginXY from '@interactjs/utils/getOriginXY'\nimport hypot from '@interactjs/utils/hypot'\n\nimport { BaseEvent } from './BaseEvent'\nimport type { Interaction } from './Interaction'\nimport { defaults } from './options'\n\nexport type EventPhase = keyof PhaseMap\n\nexport interface PhaseMap {\n  start: true\n  move: true\n  end: true\n}\n\n// defined outside of class definition to avoid assignment of undefined during\n// construction\nexport interface InteractEvent {\n  pageX: number\n  pageY: number\n\n  clientX: number\n  clientY: number\n\n  dx: number\n  dy: number\n\n  velocityX: number\n  velocityY: number\n}\n\nexport class InteractEvent<\n  T extends ActionName = never,\n  P extends EventPhase = EventPhase\n> extends BaseEvent<T> {\n  target: Element\n  currentTarget: Element\n  relatedTarget: Element | null = null\n  screenX?: number\n  screenY?: number\n  button: number\n  buttons: number\n  ctrlKey: boolean\n  shiftKey: boolean\n  altKey: boolean\n  metaKey: boolean\n  page: Point\n  client: Point\n  delta: Point\n  rect: FullRect\n  x0: number\n  y0: number\n  t0: number\n  dt: number\n  duration: number\n  clientX0: number\n  clientY0: number\n  velocity: Point\n  speed: number\n  swipe: ReturnType<InteractEvent<T>['getSwipe']>\n  timeStamp: any\n  // resize\n  axes?: 'x' | 'y' | 'xy'\n  preEnd?: boolean\n\n  /** */\n  constructor (\n    interaction: Interaction<T>,\n    event: PointerEventType,\n    actionName: T,\n    phase: P,\n    element: Element,\n    preEnd?: boolean,\n    type?: string,\n  ) {\n    super(interaction)\n\n    element = element || interaction.element\n\n    const target = interaction.interactable\n    const deltaSource = (((target && target.options) || defaults) as any).deltaSource as 'page' | 'client'\n    const origin = getOriginXY(target, element, actionName)\n    const starting = phase === 'start'\n    const ending = phase === 'end'\n    const prevEvent = starting ? this : interaction.prevEvent\n    const coords = starting\n      ? interaction.coords.start\n      : ending\n        ? { page: prevEvent.page, client: prevEvent.client, timeStamp: interaction.coords.cur.timeStamp }\n        : interaction.coords.cur\n\n    this.page = extend({}, coords.page)\n    this.client = extend({}, coords.client)\n    this.rect = extend({}, interaction.rect)\n    this.timeStamp = coords.timeStamp\n\n    if (!ending) {\n      this.page.x -= origin.x\n      this.page.y -= origin.y\n\n      this.client.x -= origin.x\n      this.client.y -= origin.y\n    }\n\n    this.ctrlKey = event.ctrlKey\n    this.altKey = event.altKey\n    this.shiftKey = event.shiftKey\n    this.metaKey = event.metaKey\n    this.button = (event as MouseEvent).button\n    this.buttons = (event as MouseEvent).buttons\n    this.target = element\n    this.currentTarget = element\n    this.preEnd = preEnd\n    this.type = type || actionName + (phase || '')\n    this.interactable = target\n\n    this.t0 = starting ? interaction.pointers[interaction.pointers.length - 1].downTime : prevEvent.t0\n\n    this.x0 = interaction.coords.start.page.x - origin.x\n    this.y0 = interaction.coords.start.page.y - origin.y\n    this.clientX0 = interaction.coords.start.client.x - origin.x\n    this.clientY0 = interaction.coords.start.client.y - origin.y\n\n    if (starting || ending) {\n      this.delta = { x: 0, y: 0 }\n    } else {\n      this.delta = {\n        x: this[deltaSource].x - prevEvent[deltaSource].x,\n        y: this[deltaSource].y - prevEvent[deltaSource].y,\n      }\n    }\n\n    this.dt = interaction.coords.delta.timeStamp\n    this.duration = this.timeStamp - this.t0\n\n    // velocity and speed in pixels per second\n    this.velocity = extend({}, interaction.coords.velocity[deltaSource])\n    this.speed = hypot(this.velocity.x, this.velocity.y)\n\n    this.swipe = ending || phase === 'inertiastart' ? this.getSwipe() : null\n  }\n\n  getSwipe () {\n    const interaction = this._interaction\n\n    if (interaction.prevEvent.speed < 600 || this.timeStamp - interaction.prevEvent.timeStamp > 150) {\n      return null\n    }\n\n    let angle = (180 * Math.atan2(interaction.prevEvent.velocityY, interaction.prevEvent.velocityX)) / Math.PI\n    const overlap = 22.5\n\n    if (angle < 0) {\n      angle += 360\n    }\n\n    const left = 135 - overlap <= angle && angle < 225 + overlap\n    const up = 225 - overlap <= angle && angle < 315 + overlap\n\n    const right = !left && (315 - overlap <= angle || angle < 45 + overlap)\n    const down = !up && 45 - overlap <= angle && angle < 135 + overlap\n\n    return {\n      up,\n      down,\n      left,\n      right,\n      angle,\n      speed: interaction.prevEvent.speed,\n      velocity: {\n        x: interaction.prevEvent.velocityX,\n        y: interaction.prevEvent.velocityY,\n      },\n    }\n  }\n\n  preventDefault () {}\n\n  /**\n   * Don't call listeners on the remaining targets\n   */\n  stopImmediatePropagation () {\n    this.immediatePropagationStopped = this.propagationStopped = true\n  }\n\n  /**\n   * Don't call any other listeners (even on the current target)\n   */\n  stopPropagation () {\n    this.propagationStopped = true\n  }\n}\n\n// getters and setters defined here to support typescript 3.6 and below which\n// don't support getter and setters in .d.ts files\nObject.defineProperties(InteractEvent.prototype, {\n  pageX: {\n    get () {\n      return this.page.x\n    },\n    set (value) {\n      this.page.x = value\n    },\n  },\n  pageY: {\n    get () {\n      return this.page.y\n    },\n    set (value) {\n      this.page.y = value\n    },\n  },\n\n  clientX: {\n    get () {\n      return this.client.x\n    },\n    set (value) {\n      this.client.x = value\n    },\n  },\n  clientY: {\n    get () {\n      return this.client.y\n    },\n    set (value) {\n      this.client.y = value\n    },\n  },\n\n  dx: {\n    get () {\n      return this.delta.x\n    },\n    set (value) {\n      this.delta.x = value\n    },\n  },\n  dy: {\n    get () {\n      return this.delta.y\n    },\n    set (value) {\n      this.delta.y = value\n    },\n  },\n\n  velocityX: {\n    get () {\n      return this.velocity.x\n    },\n    set (value) {\n      this.velocity.x = value\n    },\n  },\n  velocityY: {\n    get () {\n      return this.velocity.y\n    },\n    set (value) {\n      this.velocity.y = value\n    },\n  },\n})\n","import type { PointerEventType, PointerType } from '@interactjs/types/index'\n\nexport class PointerInfo {\n  id: number\n  pointer: PointerType\n  event: PointerEventType\n  downTime: number\n  downTarget: Node\n\n  constructor (id: number, pointer: PointerType, event: PointerEventType, downTime: number, downTarget: Node) {\n    this.id = id\n    this.pointer = pointer\n    this.event = event\n    this.downTime = downTime\n    this.downTarget = downTarget\n  }\n}\n","import type { ActionDefaults } from '@interactjs/core/options'\nimport type {\n  Element,\n  EdgeOptions,\n  PointerEventType,\n  PointerType,\n  FullRect,\n  CoordsSet,\n} from '@interactjs/types/index'\nimport * as arr from '@interactjs/utils/arr'\nimport extend from '@interactjs/utils/extend'\nimport hypot from '@interactjs/utils/hypot'\nimport { warnOnce, copyAction } from '@interactjs/utils/misc'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport type { EventPhase } from './InteractEvent'\nimport { InteractEvent } from './InteractEvent'\nimport type { Interactable } from './Interactable'\nimport { PointerInfo } from './PointerInfo'\nimport type { ActionName, Scope } from './scope'\n\nexport interface ActionProps<T extends ActionName | null = never> {\n  name: T\n  axis?: 'x' | 'y' | 'xy' | null\n  edges?: EdgeOptions | null\n}\n\nexport enum _ProxyValues {\n  interactable = '',\n  element = '',\n  prepared = '',\n  pointerIsDown = '',\n  pointerWasMoved = '',\n  _proxy = '',\n}\n\nexport enum _ProxyMethods {\n  start = '',\n  move = '',\n  end = '',\n  stop = '',\n  interacting = '',\n}\n\nexport type PointerArgProps<T extends {} = {}> = {\n  pointer: PointerType\n  event: PointerEventType\n  eventTarget: Node\n  pointerIndex: number\n  pointerInfo: PointerInfo\n  interaction: Interaction<never>\n} & T\n\nexport interface DoPhaseArg<T extends ActionName, P extends EventPhase> {\n  event: PointerEventType\n  phase: EventPhase\n  interaction: Interaction<T>\n  iEvent: InteractEvent<T, P>\n  preEnd?: boolean\n  type?: string\n}\n\nexport type DoAnyPhaseArg = DoPhaseArg<ActionName, EventPhase>\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactions:new': { interaction: Interaction<ActionName> }\n    'interactions:down': PointerArgProps<{\n      type: 'down'\n    }>\n    'interactions:move': PointerArgProps<{\n      type: 'move'\n      dx: number\n      dy: number\n      duplicate: boolean\n    }>\n    'interactions:up': PointerArgProps<{\n      type: 'up'\n      curEventTarget: EventTarget\n    }>\n    'interactions:cancel': SignalArgs['interactions:up'] & {\n      type: 'cancel'\n      curEventTarget: EventTarget\n    }\n    'interactions:update-pointer': PointerArgProps<{\n      down: boolean\n    }>\n    'interactions:remove-pointer': PointerArgProps\n    'interactions:blur': { interaction: Interaction<never>, event: Event, type: 'blur' }\n    'interactions:before-action-start': Omit<DoAnyPhaseArg, 'iEvent'>\n    'interactions:action-start': DoAnyPhaseArg\n    'interactions:after-action-start': DoAnyPhaseArg\n    'interactions:before-action-move': Omit<DoAnyPhaseArg, 'iEvent'>\n    'interactions:action-move': DoAnyPhaseArg\n    'interactions:after-action-move': DoAnyPhaseArg\n    'interactions:before-action-end': Omit<DoAnyPhaseArg, 'iEvent'>\n    'interactions:action-end': DoAnyPhaseArg\n    'interactions:after-action-end': DoAnyPhaseArg\n    'interactions:stop': { interaction: Interaction }\n  }\n}\n\nexport type InteractionProxy<T extends ActionName | null = never> = Pick<\nInteraction<T>,\nkeyof typeof _ProxyValues | keyof typeof _ProxyMethods\n>\n\nlet idCounter = 0\n\nexport class Interaction<T extends ActionName | null = ActionName> {\n  // current interactable being interacted with\n  interactable: Interactable = null\n\n  // the target element of the interactable\n  element: Element = null\n  rect: FullRect\n  _rects?: {\n    start: FullRect\n    corrected: FullRect\n    previous: FullRect\n    delta: FullRect\n  }\n  edges: EdgeOptions\n\n  _scopeFire: Scope['fire']\n\n  // action that's ready to be fired on next move event\n  prepared: ActionProps<T> = {\n    name: null,\n    axis: null,\n    edges: null,\n  }\n\n  pointerType: string\n\n  // keep track of added pointers\n  pointers: PointerInfo[] = []\n\n  // pointerdown/mousedown/touchstart event\n  downEvent: PointerEventType = null\n\n  downPointer: PointerType = {} as PointerType\n\n  _latestPointer: {\n    pointer: PointerType\n    event: PointerEventType\n    eventTarget: Node\n  } = {\n    pointer: null,\n    event: null,\n    eventTarget: null,\n  }\n\n  // previous action event\n  prevEvent: InteractEvent<T, EventPhase> = null\n\n  pointerIsDown = false\n  pointerWasMoved = false\n  _interacting = false\n  _ending = false\n  _stopped = true\n  _proxy: InteractionProxy<T> = null\n\n  simulation = null\n\n  /** @internal */ get pointerMoveTolerance () {\n    return 1\n  }\n\n  /**\n   * @alias Interaction.prototype.move\n   */\n  doMove = warnOnce(function (this: Interaction, signalArg: any) {\n    this.move(signalArg)\n  }, 'The interaction.doMove() method has been renamed to interaction.move()')\n\n  coords: CoordsSet = {\n    // Starting InteractEvent pointer coordinates\n    start: pointerUtils.newCoords(),\n    // Previous native pointer move event coordinates\n    prev: pointerUtils.newCoords(),\n    // current native pointer move event coordinates\n    cur: pointerUtils.newCoords(),\n    // Change in coordinates and time of the pointer\n    delta: pointerUtils.newCoords(),\n    // pointer velocity\n    velocity: pointerUtils.newCoords(),\n  }\n\n  readonly _id: number = idCounter++\n\n  /** */\n  constructor ({ pointerType, scopeFire }: { pointerType?: string, scopeFire: Scope['fire'] }) {\n    this._scopeFire = scopeFire\n    this.pointerType = pointerType\n\n    const that = this\n\n    this._proxy = {} as InteractionProxy<T>\n\n    for (const key in _ProxyValues) {\n      Object.defineProperty(this._proxy, key, {\n        get () {\n          return that[key]\n        },\n      })\n    }\n\n    for (const key in _ProxyMethods) {\n      Object.defineProperty(this._proxy, key, {\n        value: (...args: any[]) => that[key](...args),\n      })\n    }\n\n    this._scopeFire('interactions:new', { interaction: this })\n  }\n\n  pointerDown (pointer: PointerType, event: PointerEventType, eventTarget: Node) {\n    const pointerIndex = this.updatePointer(pointer, event, eventTarget, true)\n    const pointerInfo = this.pointers[pointerIndex]\n\n    this._scopeFire('interactions:down', {\n      pointer,\n      event,\n      eventTarget,\n      pointerIndex,\n      pointerInfo,\n      type: 'down',\n      interaction: (this as unknown) as Interaction<never>,\n    })\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   *   .draggable({\n   *     // disable the default drag start by down->move\n   *     manualStart: true\n   *   })\n   *   // start dragging after the user holds the pointer down\n   *   .on('hold', function (event) {\n   *     var interaction = event.interaction\n   *\n   *     if (!interaction.interacting()) {\n   *       interaction.start({ name: 'drag' },\n   *                         event.interactable,\n   *                         event.currentTarget)\n   *     }\n   * })\n   * ```\n   *\n   * Start an action with the given Interactable and Element as tartgets. The\n   * action must be enabled for the target Interactable and an appropriate\n   * number of pointers must be held down - 1 for drag/resize, 2 for gesture.\n   *\n   * Use it with `interactable.<action>able({ manualStart: false })` to always\n   * [start actions manually](https://github.com/taye/interact.js/issues/114)\n   *\n   * @param {object} action   The action to be performed - drag, resize, etc.\n   * @param {Interactable} target  The Interactable to target\n   * @param {Element} element The DOM Element to target\n   * @return {Boolean} Whether the interaction was successfully started\n   */\n  start<A extends ActionName> (action: ActionProps<A>, interactable: Interactable, element: Element): boolean {\n    if (\n      this.interacting() ||\n      !this.pointerIsDown ||\n      this.pointers.length < (action.name === 'gesture' ? 2 : 1) ||\n      !interactable.options[action.name as keyof ActionDefaults].enabled\n    ) {\n      return false\n    }\n\n    copyAction(this.prepared, action)\n\n    this.interactable = interactable\n    this.element = element\n    this.rect = interactable.getRect(element)\n    this.edges = this.prepared.edges\n      ? extend({}, this.prepared.edges)\n      : { left: true, right: true, top: true, bottom: true }\n    this._stopped = false\n    this._interacting =\n      this._doPhase({\n        interaction: this,\n        event: this.downEvent,\n        phase: 'start',\n      }) && !this._stopped\n\n    return this._interacting\n  }\n\n  pointerMove (pointer: PointerType, event: PointerEventType, eventTarget: Node) {\n    if (!this.simulation && !(this.modification && this.modification.endResult)) {\n      this.updatePointer(pointer, event, eventTarget, false)\n    }\n\n    const duplicateMove =\n      this.coords.cur.page.x === this.coords.prev.page.x &&\n      this.coords.cur.page.y === this.coords.prev.page.y &&\n      this.coords.cur.client.x === this.coords.prev.client.x &&\n      this.coords.cur.client.y === this.coords.prev.client.y\n\n    let dx: number\n    let dy: number\n\n    // register movement greater than pointerMoveTolerance\n    if (this.pointerIsDown && !this.pointerWasMoved) {\n      dx = this.coords.cur.client.x - this.coords.start.client.x\n      dy = this.coords.cur.client.y - this.coords.start.client.y\n\n      this.pointerWasMoved = hypot(dx, dy) > this.pointerMoveTolerance\n    }\n\n    const pointerIndex = this.getPointerIndex(pointer)\n    const signalArg = {\n      pointer,\n      pointerIndex,\n      pointerInfo: this.pointers[pointerIndex],\n      event,\n      type: 'move' as const,\n      eventTarget,\n      dx,\n      dy,\n      duplicate: duplicateMove,\n      interaction: (this as unknown) as Interaction<never>,\n    }\n\n    if (!duplicateMove) {\n      // set pointer coordinate, time changes and velocity\n      pointerUtils.setCoordVelocity(this.coords.velocity, this.coords.delta)\n    }\n\n    this._scopeFire('interactions:move', signalArg)\n\n    if (!duplicateMove && !this.simulation) {\n      // if interacting, fire an 'action-move' signal etc\n      if (this.interacting()) {\n        signalArg.type = null\n        this.move(signalArg)\n      }\n\n      if (this.pointerWasMoved) {\n        pointerUtils.copyCoords(this.coords.prev, this.coords.cur)\n      }\n    }\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   *   .draggable(true)\n   *   .on('dragmove', function (event) {\n   *     if (someCondition) {\n   *       // change the snap settings\n   *       event.interactable.draggable({ snap: { targets: [] }})\n   *       // fire another move event with re-calculated snap\n   *       event.interaction.move()\n   *     }\n   *   })\n   * ```\n   *\n   * Force a move of the current action at the same coordinates. Useful if\n   * snap/restrict has been changed and you want a movement with the new\n   * settings.\n   */\n  move (signalArg?: any) {\n    if (!signalArg || !signalArg.event) {\n      pointerUtils.setZeroCoords(this.coords.delta)\n    }\n\n    signalArg = extend(\n      {\n        pointer: this._latestPointer.pointer,\n        event: this._latestPointer.event,\n        eventTarget: this._latestPointer.eventTarget,\n        interaction: this,\n      },\n      signalArg || {},\n    )\n\n    signalArg.phase = 'move'\n\n    this._doPhase(signalArg)\n  }\n\n  // End interact move events and stop auto-scroll unless simulation is running\n  pointerUp (pointer: PointerType, event: PointerEventType, eventTarget: Node, curEventTarget: EventTarget) {\n    let pointerIndex = this.getPointerIndex(pointer)\n\n    if (pointerIndex === -1) {\n      pointerIndex = this.updatePointer(pointer, event, eventTarget, false)\n    }\n\n    const type = /cancel$/i.test(event.type) ? 'cancel' : 'up'\n\n    this._scopeFire(`interactions:${type}` as 'interactions:up' | 'interactions:cancel', {\n      pointer,\n      pointerIndex,\n      pointerInfo: this.pointers[pointerIndex],\n      event,\n      eventTarget,\n      type: type as any,\n      curEventTarget,\n      interaction: (this as unknown) as Interaction<never>,\n    })\n\n    if (!this.simulation) {\n      this.end(event)\n    }\n\n    this.removePointer(pointer, event)\n  }\n\n  documentBlur (event: Event) {\n    this.end(event as any)\n    this._scopeFire('interactions:blur', {\n      event,\n      type: 'blur',\n      interaction: (this as unknown) as Interaction<never>,\n    })\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   *   .draggable(true)\n   *   .on('move', function (event) {\n   *     if (event.pageX > 1000) {\n   *       // end the current action\n   *       event.interaction.end()\n   *       // stop all further listeners from being called\n   *       event.stopImmediatePropagation()\n   *     }\n   *   })\n   * ```\n   *\n   * @param {PointerEvent} [event]\n   */\n  end (event?: PointerEventType) {\n    this._ending = true\n    event = event || this._latestPointer.event\n    let endPhaseResult: boolean\n\n    if (this.interacting()) {\n      endPhaseResult = this._doPhase({\n        event,\n        interaction: this,\n        phase: 'end',\n      })\n    }\n\n    this._ending = false\n\n    if (endPhaseResult === true) {\n      this.stop()\n    }\n  }\n\n  currentAction () {\n    return this._interacting ? this.prepared.name : null\n  }\n\n  interacting () {\n    return this._interacting\n  }\n\n  /** */\n  stop () {\n    this._scopeFire('interactions:stop', { interaction: this })\n\n    this.interactable = this.element = null\n\n    this._interacting = false\n    this._stopped = true\n    this.prepared.name = this.prevEvent = null\n  }\n\n  getPointerIndex (pointer: PointerType) {\n    const pointerId = pointerUtils.getPointerId(pointer)\n\n    // mouse and pen interactions may have only one pointer\n    return this.pointerType === 'mouse' || this.pointerType === 'pen'\n      ? this.pointers.length - 1\n      : arr.findIndex(this.pointers, (curPointer) => curPointer.id === pointerId)\n  }\n\n  getPointerInfo (pointer: any) {\n    return this.pointers[this.getPointerIndex(pointer)]\n  }\n\n  updatePointer (pointer: PointerType, event: PointerEventType, eventTarget: Node, down?: boolean) {\n    const id = pointerUtils.getPointerId(pointer)\n    let pointerIndex = this.getPointerIndex(pointer)\n    let pointerInfo = this.pointers[pointerIndex]\n\n    down = down === false ? false : down || /(down|start)$/i.test(event.type)\n\n    if (!pointerInfo) {\n      pointerInfo = new PointerInfo(id, pointer, event, null, null)\n\n      pointerIndex = this.pointers.length\n      this.pointers.push(pointerInfo)\n    } else {\n      pointerInfo.pointer = pointer\n    }\n\n    pointerUtils.setCoords(\n      this.coords.cur,\n      this.pointers.map((p) => p.pointer),\n      this._now(),\n    )\n    pointerUtils.setCoordDeltas(this.coords.delta, this.coords.prev, this.coords.cur)\n\n    if (down) {\n      this.pointerIsDown = true\n\n      pointerInfo.downTime = this.coords.cur.timeStamp\n      pointerInfo.downTarget = eventTarget\n      pointerUtils.pointerExtend(this.downPointer, pointer)\n\n      if (!this.interacting()) {\n        pointerUtils.copyCoords(this.coords.start, this.coords.cur)\n        pointerUtils.copyCoords(this.coords.prev, this.coords.cur)\n\n        this.downEvent = event\n        this.pointerWasMoved = false\n      }\n    }\n\n    this._updateLatestPointer(pointer, event, eventTarget)\n\n    this._scopeFire('interactions:update-pointer', {\n      pointer,\n      event,\n      eventTarget,\n      down,\n      pointerInfo,\n      pointerIndex,\n      interaction: (this as unknown) as Interaction<never>,\n    })\n\n    return pointerIndex\n  }\n\n  removePointer (pointer: PointerType, event: PointerEventType) {\n    const pointerIndex = this.getPointerIndex(pointer)\n\n    if (pointerIndex === -1) return\n\n    const pointerInfo = this.pointers[pointerIndex]\n\n    this._scopeFire('interactions:remove-pointer', {\n      pointer,\n      event,\n      eventTarget: null,\n      pointerIndex,\n      pointerInfo,\n      interaction: (this as unknown) as Interaction<never>,\n    })\n\n    this.pointers.splice(pointerIndex, 1)\n    this.pointerIsDown = false\n  }\n\n  _updateLatestPointer (pointer: PointerType, event: PointerEventType, eventTarget: Node) {\n    this._latestPointer.pointer = pointer\n    this._latestPointer.event = event\n    this._latestPointer.eventTarget = eventTarget\n  }\n\n  destroy () {\n    this._latestPointer.pointer = null\n    this._latestPointer.event = null\n    this._latestPointer.eventTarget = null\n  }\n\n  _createPreparedEvent<P extends EventPhase> (\n    event: PointerEventType,\n    phase: P,\n    preEnd?: boolean,\n    type?: string,\n  ) {\n    return new InteractEvent<T, P>(this, event, this.prepared.name, phase, this.element, preEnd, type)\n  }\n\n  _fireEvent<P extends EventPhase> (iEvent: InteractEvent<T, P>) {\n    this.interactable.fire(iEvent)\n\n    if (!this.prevEvent || iEvent.timeStamp >= this.prevEvent.timeStamp) {\n      this.prevEvent = iEvent\n    }\n  }\n\n  _doPhase<P extends EventPhase> (\n    signalArg: Omit<DoPhaseArg<T, P>, 'iEvent'> & { iEvent?: InteractEvent<T, P> },\n  ) {\n    const { event, phase, preEnd, type } = signalArg\n    const { rect } = this\n\n    if (rect && phase === 'move') {\n      // update the rect changes due to pointer move\n      rectUtils.addEdges(this.edges, rect, this.coords.delta[this.interactable.options.deltaSource])\n\n      rect.width = rect.right - rect.left\n      rect.height = rect.bottom - rect.top\n    }\n\n    const beforeResult = this._scopeFire(`interactions:before-action-${phase}` as any, signalArg)\n\n    if (beforeResult === false) {\n      return false\n    }\n\n    const iEvent = (signalArg.iEvent = this._createPreparedEvent(event, phase, preEnd, type))\n\n    this._scopeFire(`interactions:action-${phase}` as any, signalArg)\n\n    if (phase === 'start') {\n      this.prevEvent = iEvent\n    }\n\n    this._fireEvent(iEvent)\n\n    this._scopeFire(`interactions:after-action-${phase}` as any, signalArg)\n\n    return true\n  }\n\n  _now () {\n    return Date.now()\n  }\n}\n\nexport default Interaction\nexport { PointerInfo }\n","import type Interaction from '@interactjs/core/Interaction'\nimport { _ProxyMethods } from '@interactjs/core/Interaction'\nimport type { Plugin } from '@interactjs/core/scope'\nimport type { Point } from '@interactjs/types/index'\nimport * as rectUtils from '@interactjs/utils/rect'\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    offsetBy?: typeof offsetBy\n    offset: {\n      total: Point\n      pending: Point\n    }\n  }\n\n  enum _ProxyMethods {\n    offsetBy = '',\n  }\n}\n\n;(_ProxyMethods as any).offsetBy = ''\n\nexport function addTotal (interaction: Interaction) {\n  if (!interaction.pointerIsDown) {\n    return\n  }\n\n  addToCoords(interaction.coords.cur, interaction.offset.total)\n\n  interaction.offset.pending.x = 0\n  interaction.offset.pending.y = 0\n}\n\nfunction beforeAction ({ interaction }: { interaction: Interaction }) {\n  applyPending(interaction)\n}\n\nfunction beforeEnd ({ interaction }: { interaction: Interaction }): boolean | void {\n  const hadPending = applyPending(interaction)\n\n  if (!hadPending) return\n\n  interaction.move({ offset: true })\n  interaction.end()\n\n  return false\n}\n\nfunction end ({ interaction }: { interaction: Interaction }) {\n  interaction.offset.total.x = 0\n  interaction.offset.total.y = 0\n  interaction.offset.pending.x = 0\n  interaction.offset.pending.y = 0\n}\n\nexport function applyPending (interaction: Interaction) {\n  if (!hasPending(interaction)) {\n    return false\n  }\n\n  const { pending } = interaction.offset\n\n  addToCoords(interaction.coords.cur, pending)\n  addToCoords(interaction.coords.delta, pending)\n  rectUtils.addEdges(interaction.edges, interaction.rect, pending)\n\n  pending.x = 0\n  pending.y = 0\n\n  return true\n}\n\nfunction offsetBy (this: Interaction, { x, y }: Point) {\n  this.offset.pending.x += x\n  this.offset.pending.y += y\n\n  this.offset.total.x += x\n  this.offset.total.y += y\n}\n\nfunction addToCoords ({ page, client }, { x, y }: Point) {\n  page.x += x\n  page.y += y\n  client.x += x\n  client.y += y\n}\n\nfunction hasPending (interaction: Interaction) {\n  return !!(interaction.offset.pending.x || interaction.offset.pending.y)\n}\n\nconst offset: Plugin = {\n  id: 'offset',\n  before: ['modifiers', 'pointer-events', 'actions', 'inertia'],\n  install (scope) {\n    scope.Interaction.prototype.offsetBy = offsetBy\n  },\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.offset = {\n        total: { x: 0, y: 0 },\n        pending: { x: 0, y: 0 },\n      }\n    },\n    'interactions:update-pointer': ({ interaction }) => addTotal(interaction),\n    'interactions:before-action-start': beforeAction,\n    'interactions:before-action-move': beforeAction,\n    'interactions:before-action-end': beforeEnd,\n    'interactions:stop': end,\n  },\n}\n\nexport default offset\n","import type { Interaction, DoPhaseArg } from '@interactjs/core/Interaction'\nimport type { ActionName, Scope, SignalArgs, Plugin } from '@interactjs/core/scope'\nimport Modification from '@interactjs/modifiers/Modification'\nimport * as modifiers from '@interactjs/modifiers/base'\nimport offset from '@interactjs/offset/plugin'\nimport type { Point, PointerEventType } from '@interactjs/types/index'\nimport * as dom from '@interactjs/utils/domUtils'\nimport hypot from '@interactjs/utils/hypot'\nimport is from '@interactjs/utils/is'\nimport { copyCoords } from '@interactjs/utils/pointerUtils'\nimport raf from '@interactjs/utils/raf'\n\ndeclare module '@interactjs/core/InteractEvent' {\n  interface PhaseMap {\n    resume?: true\n    inertiastart?: true\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    inertia?: InertiaState\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface PerActionDefaults {\n    inertia?: {\n      enabled?: boolean\n      resistance?: number // the lambda in exponential decay\n      minSpeed?: number // target speed must be above this for inertia to start\n      endSpeed?: number // the speed at which inertia is slow enough to stop\n      allowResume?: true // allow resuming an action in inertia phase\n      smoothEndDuration?: number // animate to snap/restrict endOnly if there's no inertia\n    }\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactions:before-action-inertiastart': Omit<DoPhaseArg<ActionName, 'inertiastart'>, 'iEvent'>\n    'interactions:action-inertiastart': DoPhaseArg<ActionName, 'inertiastart'>\n    'interactions:after-action-inertiastart': DoPhaseArg<ActionName, 'inertiastart'>\n    'interactions:before-action-resume': Omit<DoPhaseArg<ActionName, 'resume'>, 'iEvent'>\n    'interactions:action-resume': DoPhaseArg<ActionName, 'resume'>\n    'interactions:after-action-resume': DoPhaseArg<ActionName, 'resume'>\n  }\n}\n\nfunction install (scope: Scope) {\n  const { defaults } = scope\n\n  scope.usePlugin(offset)\n  scope.usePlugin(modifiers.default)\n  scope.actions.phases.inertiastart = true\n  scope.actions.phases.resume = true\n\n  defaults.perAction.inertia = {\n    enabled: false,\n    resistance: 10, // the lambda in exponential decay\n    minSpeed: 100, // target speed must be above this for inertia to start\n    endSpeed: 10, // the speed at which inertia is slow enough to stop\n    allowResume: true, // allow resuming an action in inertia phase\n    smoothEndDuration: 300, // animate to snap/restrict endOnly if there's no inertia\n  }\n}\n\nexport class InertiaState {\n  active = false\n  isModified = false\n  smoothEnd = false\n  allowResume = false\n\n  modification!: Modification\n  modifierCount = 0\n  modifierArg!: modifiers.ModifierArg\n\n  startCoords!: Point\n  t0 = 0\n  v0 = 0\n\n  te = 0\n  targetOffset!: Point\n  modifiedOffset!: Point\n  currentOffset!: Point\n\n  lambda_v0? = 0 // eslint-disable-line camelcase\n  one_ve_v0? = 0 // eslint-disable-line camelcase\n  timeout!: number\n  readonly interaction: Interaction\n\n  constructor (interaction: Interaction) {\n    this.interaction = interaction\n  }\n\n  start (event: PointerEventType) {\n    const { interaction } = this\n    const options = getOptions(interaction)\n\n    if (!options || !options.enabled) {\n      return false\n    }\n\n    const { client: velocityClient } = interaction.coords.velocity\n    const pointerSpeed = hypot(velocityClient.x, velocityClient.y)\n    const modification = this.modification || (this.modification = new Modification(interaction))\n\n    modification.copyFrom(interaction.modification)\n\n    this.t0 = interaction._now()\n    this.allowResume = options.allowResume\n    this.v0 = pointerSpeed\n    this.currentOffset = { x: 0, y: 0 }\n    this.startCoords = interaction.coords.cur.page\n\n    this.modifierArg = modification.fillArg({\n      pageCoords: this.startCoords,\n      preEnd: true,\n      phase: 'inertiastart',\n    })\n\n    const thrown =\n      this.t0 - interaction.coords.cur.timeStamp < 50 &&\n      pointerSpeed > options.minSpeed &&\n      pointerSpeed > options.endSpeed\n\n    if (thrown) {\n      this.startInertia()\n    } else {\n      modification.result = modification.setAll(this.modifierArg)\n\n      if (!modification.result.changed) {\n        return false\n      }\n\n      this.startSmoothEnd()\n    }\n\n    // force modification change\n    interaction.modification.result.rect = null\n\n    // bring inertiastart event to the target coords\n    interaction.offsetBy(this.targetOffset)\n    interaction._doPhase({\n      interaction,\n      event,\n      phase: 'inertiastart',\n    })\n    interaction.offsetBy({ x: -this.targetOffset.x, y: -this.targetOffset.y })\n    // force modification change\n    interaction.modification.result.rect = null\n\n    this.active = true\n    interaction.simulation = this\n\n    return true\n  }\n\n  startInertia () {\n    const startVelocity = this.interaction.coords.velocity.client\n    const options = getOptions(this.interaction)\n    const lambda = options.resistance\n    const inertiaDur = -Math.log(options.endSpeed / this.v0) / lambda\n\n    this.targetOffset = {\n      x: (startVelocity.x - inertiaDur) / lambda,\n      y: (startVelocity.y - inertiaDur) / lambda,\n    }\n\n    this.te = inertiaDur\n    this.lambda_v0 = lambda / this.v0\n    this.one_ve_v0 = 1 - options.endSpeed / this.v0\n\n    const { modification, modifierArg } = this\n\n    modifierArg.pageCoords = {\n      x: this.startCoords.x + this.targetOffset.x,\n      y: this.startCoords.y + this.targetOffset.y,\n    }\n\n    modification.result = modification.setAll(modifierArg)\n\n    if (modification.result.changed) {\n      this.isModified = true\n      this.modifiedOffset = {\n        x: this.targetOffset.x + modification.result.delta.x,\n        y: this.targetOffset.y + modification.result.delta.y,\n      }\n    }\n\n    this.onNextFrame(() => this.inertiaTick())\n  }\n\n  startSmoothEnd () {\n    this.smoothEnd = true\n    this.isModified = true\n    this.targetOffset = {\n      x: this.modification.result.delta.x,\n      y: this.modification.result.delta.y,\n    }\n\n    this.onNextFrame(() => this.smoothEndTick())\n  }\n\n  onNextFrame (tickFn: () => void) {\n    this.timeout = raf.request(() => {\n      if (this.active) {\n        tickFn()\n      }\n    })\n  }\n\n  inertiaTick () {\n    const { interaction } = this\n    const options = getOptions(interaction)\n    const lambda = options.resistance\n    const t = (interaction._now() - this.t0) / 1000\n\n    if (t < this.te) {\n      const progress = 1 - (Math.exp(-lambda * t) - this.lambda_v0) / this.one_ve_v0\n      let newOffset: Point\n\n      if (this.isModified) {\n        newOffset = getQuadraticCurvePoint(\n          0,\n          0,\n          this.targetOffset.x,\n          this.targetOffset.y,\n          this.modifiedOffset.x,\n          this.modifiedOffset.y,\n          progress,\n        )\n      } else {\n        newOffset = {\n          x: this.targetOffset.x * progress,\n          y: this.targetOffset.y * progress,\n        }\n      }\n\n      const delta = { x: newOffset.x - this.currentOffset.x, y: newOffset.y - this.currentOffset.y }\n\n      this.currentOffset.x += delta.x\n      this.currentOffset.y += delta.y\n\n      interaction.offsetBy(delta)\n      interaction.move()\n\n      this.onNextFrame(() => this.inertiaTick())\n    } else {\n      interaction.offsetBy({\n        x: this.modifiedOffset.x - this.currentOffset.x,\n        y: this.modifiedOffset.y - this.currentOffset.y,\n      })\n\n      this.end()\n    }\n  }\n\n  smoothEndTick () {\n    const { interaction } = this\n    const t = interaction._now() - this.t0\n    const { smoothEndDuration: duration } = getOptions(interaction)\n\n    if (t < duration) {\n      const newOffset = {\n        x: easeOutQuad(t, 0, this.targetOffset.x, duration),\n        y: easeOutQuad(t, 0, this.targetOffset.y, duration),\n      }\n      const delta = {\n        x: newOffset.x - this.currentOffset.x,\n        y: newOffset.y - this.currentOffset.y,\n      }\n\n      this.currentOffset.x += delta.x\n      this.currentOffset.y += delta.y\n\n      interaction.offsetBy(delta)\n      interaction.move({ skipModifiers: this.modifierCount })\n\n      this.onNextFrame(() => this.smoothEndTick())\n    } else {\n      interaction.offsetBy({\n        x: this.targetOffset.x - this.currentOffset.x,\n        y: this.targetOffset.y - this.currentOffset.y,\n      })\n\n      this.end()\n    }\n  }\n\n  resume ({ pointer, event, eventTarget }: SignalArgs['interactions:down']) {\n    const { interaction } = this\n\n    // undo inertia changes to interaction coords\n    interaction.offsetBy({\n      x: -this.currentOffset.x,\n      y: -this.currentOffset.y,\n    })\n\n    // update pointer at pointer down position\n    interaction.updatePointer(pointer, event, eventTarget, true)\n\n    // fire resume signals and event\n    interaction._doPhase({\n      interaction,\n      event,\n      phase: 'resume',\n    })\n    copyCoords(interaction.coords.prev, interaction.coords.cur)\n\n    this.stop()\n  }\n\n  end () {\n    this.interaction.move()\n    this.interaction.end()\n    this.stop()\n  }\n\n  stop () {\n    this.active = this.smoothEnd = false\n    this.interaction.simulation = null\n    raf.cancel(this.timeout)\n  }\n}\n\nfunction start ({ interaction, event }: DoPhaseArg<ActionName, 'end'>) {\n  if (!interaction._interacting || interaction.simulation) {\n    return null\n  }\n\n  const started = interaction.inertia.start(event)\n\n  // prevent action end if inertia or smoothEnd\n  return started ? false : null\n}\n\n// Check if the down event hits the current inertia target\n// control should be return to the user\nfunction resume (arg: SignalArgs['interactions:down']) {\n  const { interaction, eventTarget } = arg\n  const state = interaction.inertia\n\n  if (!state.active) return\n\n  let element = eventTarget as Node\n\n  // climb up the DOM tree from the event target\n  while (is.element(element)) {\n    // if interaction element is the current inertia target element\n    if (element === interaction.element) {\n      state.resume(arg)\n      break\n    }\n\n    element = dom.parentNode(element)\n  }\n}\n\nfunction stop ({ interaction }: { interaction: Interaction }) {\n  const state = interaction.inertia\n\n  if (state.active) {\n    state.stop()\n  }\n}\n\nfunction getOptions ({ interactable, prepared }: Interaction) {\n  return interactable && interactable.options && prepared.name && interactable.options[prepared.name].inertia\n}\n\nconst inertia: Plugin = {\n  id: 'inertia',\n  before: ['modifiers', 'actions'],\n  install,\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.inertia = new InertiaState(interaction)\n    },\n\n    'interactions:before-action-end': start,\n    'interactions:down': resume,\n    'interactions:stop': stop,\n\n    'interactions:before-action-resume': (arg) => {\n      const { modification } = arg.interaction\n\n      modification.stop(arg)\n      modification.start(arg, arg.interaction.coords.cur.page)\n      modification.applyToInteraction(arg)\n    },\n\n    'interactions:before-action-inertiastart': (arg) => arg.interaction.modification.setAndApply(arg),\n    'interactions:action-resume': modifiers.addEventModifiers,\n    'interactions:action-inertiastart': modifiers.addEventModifiers,\n    'interactions:after-action-inertiastart': (arg) =>\n      arg.interaction.modification.restoreInteractionCoords(arg),\n    'interactions:after-action-resume': (arg) => arg.interaction.modification.restoreInteractionCoords(arg),\n  },\n}\n\n// http://stackoverflow.com/a/5634528/2280888\nfunction _getQBezierValue (t: number, p1: number, p2: number, p3: number) {\n  const iT = 1 - t\n  return iT * iT * p1 + 2 * iT * t * p2 + t * t * p3\n}\n\nfunction getQuadraticCurvePoint (\n  startX: number,\n  startY: number,\n  cpX: number,\n  cpY: number,\n  endX: number,\n  endY: number,\n  position: number,\n) {\n  return {\n    x: _getQBezierValue(position, startX, cpX, endX),\n    y: _getQBezierValue(position, startY, cpY, endY),\n  }\n}\n\n// http://gizma.com/easing/\nfunction easeOutQuad (t: number, b: number, c: number, d: number) {\n  t /= d\n  return -c * t * (t - 2) + b\n}\n\nexport default inertia\n","import type { Listener, ListenersArg, Rect } from '@interactjs/types/index'\nimport * as arr from '@interactjs/utils/arr'\nimport extend from '@interactjs/utils/extend'\nimport type { NormalizedListeners } from '@interactjs/utils/normalizeListeners'\nimport normalize from '@interactjs/utils/normalizeListeners'\n\nfunction fireUntilImmediateStopped (event: any, listeners: Listener[]) {\n  for (const listener of listeners) {\n    if (event.immediatePropagationStopped) {\n      break\n    }\n\n    listener(event)\n  }\n}\n\nexport class Eventable {\n  options: any\n  types: NormalizedListeners = {}\n  propagationStopped = false\n  immediatePropagationStopped = false\n  global: any\n\n  constructor (options?: { [index: string]: any }) {\n    this.options = extend({}, options || {})\n  }\n\n  fire<T extends { type: string, propagationStopped?: boolean }> (event: T) {\n    let listeners: Listener[]\n    const global = this.global\n\n    // Interactable#on() listeners\n    // tslint:disable no-conditional-assignment\n    if ((listeners = this.types[event.type])) {\n      fireUntilImmediateStopped(event, listeners)\n    }\n\n    // interact.on() listeners\n    if (!event.propagationStopped && global && (listeners = global[event.type])) {\n      fireUntilImmediateStopped(event, listeners)\n    }\n  }\n\n  on (type: string, listener: ListenersArg) {\n    const listeners = normalize(type, listener)\n\n    for (type in listeners) {\n      this.types[type] = arr.merge(this.types[type] || [], listeners[type])\n    }\n  }\n\n  off (type: string, listener: ListenersArg) {\n    const listeners = normalize(type, listener)\n\n    for (type in listeners) {\n      const eventList = this.types[type]\n\n      if (!eventList || !eventList.length) {\n        continue\n      }\n\n      for (const subListener of listeners[type]) {\n        const index = eventList.indexOf(subListener)\n\n        if (index !== -1) {\n          eventList.splice(index, 1)\n        }\n      }\n    }\n  }\n\n  getRect (_element: Element): Rect {\n    return null\n  }\n}\n","import type { Actions } from '@interactjs/core/scope'\n\nexport default function isNonNativeEvent (type: string, actions: Actions) {\n  if (actions.phaselessTypes[type]) {\n    return true\n  }\n\n  for (const name in actions.map) {\n    if (type.indexOf(name) === 0 && type.substr(name.length) in actions.phases) {\n      return true\n    }\n  }\n\n  return false\n}\n","/** @module interact */\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { Context, EventTypes, Listener, ListenersArg, Target, Element } from '@interactjs/types/index'\nimport browser from '@interactjs/utils/browser'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport is from '@interactjs/utils/is'\nimport { warnOnce } from '@interactjs/utils/misc'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\nimport type { Interactable } from './Interactable'\nimport isNonNativeEvent from './isNonNativeEvent'\nimport type { Options } from './options'\n\ndeclare module '@interactjs/core/InteractStatic' {\n  export interface InteractStatic {\n    (target: Target, options?: Options): Interactable\n    getPointerAverage: typeof pointerUtils.pointerAverage\n    getTouchBBox: typeof pointerUtils.touchBBox\n    getTouchDistance: typeof pointerUtils.touchDistance\n    getTouchAngle: typeof pointerUtils.touchAngle\n    getElementRect: typeof domUtils.getElementRect\n    getElementClientRect: typeof domUtils.getElementClientRect\n    matchesSelector: typeof domUtils.matchesSelector\n    closest: typeof domUtils.closest\n    /** @internal */ globalEvents: any\n    version: string\n    /** @internal */ scope: Scope\n    use(\n      plugin: Plugin,\n      options?: {\n        [key: string]: any\n      },\n    ): any\n    isSet(target: Element, options?: any): boolean\n    on(type: string | EventTypes, listener: ListenersArg, options?: object): any\n    off(type: EventTypes, listener: any, options?: object): any\n    debug(): any\n    supportsTouch(): boolean\n    supportsPointerEvent(): boolean\n    stop(): any\n    pointerMoveTolerance(newValue?: number): any\n    addDocument(doc: Document, options?: object): void\n    removeDocument(doc: Document): void\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/consistent-type-imports\ntype _InteractStatic = import('@interactjs/core/InteractStatic').InteractStatic\n\nexport function createInteractStatic (scope: Scope): _InteractStatic {\n  /**\n   * ```js\n   * interact('#draggable').draggable(true)\n   *\n   * var rectables = interact('rect')\n   * rectables\n   *   .gesturable(true)\n   *   .on('gesturemove', function (event) {\n   *       // ...\n   *   })\n   * ```\n   *\n   * The methods of this variable can be used to set elements as interactables\n   * and also to change various default settings.\n   *\n   * Calling it as a function and passing an element or a valid CSS selector\n   * string returns an Interactable object which has various methods to configure\n   * it.\n   *\n   * @global\n   *\n   * @param {Element | string} target The HTML or SVG Element to interact with\n   * or CSS selector\n   * @return {Interactable}\n   */\n  const interact = ((target: Target, options: Options) => {\n    let interactable = scope.interactables.get(target, options)\n\n    if (!interactable) {\n      interactable = scope.interactables.new(target, options)\n      interactable.events.global = interact.globalEvents\n    }\n\n    return interactable\n  }) as _InteractStatic\n\n  // expose the functions used to calculate multi-touch properties\n  interact.getPointerAverage = pointerUtils.pointerAverage\n  interact.getTouchBBox = pointerUtils.touchBBox\n  interact.getTouchDistance = pointerUtils.touchDistance\n  interact.getTouchAngle = pointerUtils.touchAngle\n\n  interact.getElementRect = domUtils.getElementRect\n  interact.getElementClientRect = domUtils.getElementClientRect\n  interact.matchesSelector = domUtils.matchesSelector\n  interact.closest = domUtils.closest\n\n  interact.globalEvents = {} as any\n\n  // eslint-disable-next-line no-undef\n  interact.version = process.env.npm_package_version\n  interact.scope = scope\n  /**\n   * Use a plugin\n   *\n   * @alias module:interact.use\n   *\n   */\n  interact.use = function (plugin, options) {\n    this.scope.usePlugin(plugin, options)\n\n    return this\n  }\n\n  /**\n   * Check if an element or selector has been set with the {@link interact}\n   * function\n   *\n   * @alias module:interact.isSet\n   *\n   * @param {Target} target The Element or string being searched for\n   * @param {object} options\n   * @return {boolean} Indicates if the element or CSS selector was previously\n   * passed to interact\n   */\n  interact.isSet = function (target: Target, options?: { context?: Context }): boolean {\n    return !!this.scope.interactables.get(target, options && options.context)\n  }\n\n  /**\n   * @deprecated\n   * Add a global listener for an InteractEvent or adds a DOM event to `document`\n   *\n   * @alias module:interact.on\n   *\n   * @param {string | array | object} type The types of events to listen for\n   * @param {function} listener The function event (s)\n   * @param {object | boolean} [options] object or useCapture flag for\n   * addEventListener\n   * @return {object} interact\n   */\n  interact.on = warnOnce(function on (type: string | EventTypes, listener: ListenersArg, options?: object) {\n    if (is.string(type) && type.search(' ') !== -1) {\n      type = type.trim().split(/ +/)\n    }\n\n    if (is.array(type)) {\n      for (const eventType of type as any[]) {\n        this.on(eventType, listener, options)\n      }\n\n      return this\n    }\n\n    if (is.object(type)) {\n      for (const prop in type) {\n        this.on(prop, (type as any)[prop], listener)\n      }\n\n      return this\n    }\n\n    // if it is an InteractEvent type, add listener to globalEvents\n    if (isNonNativeEvent(type, this.scope.actions)) {\n      // if this type of event was never bound\n      if (!this.globalEvents[type]) {\n        this.globalEvents[type] = [listener]\n      } else {\n        this.globalEvents[type].push(listener)\n      }\n    }\n    // If non InteractEvent type, addEventListener to document\n    else {\n      this.scope.events.add(this.scope.document, type, listener as Listener, { options })\n    }\n\n    return this\n  }, 'The interact.on() method is being deprecated')\n\n  /**\n   * @deprecated\n   * Removes a global InteractEvent listener or DOM event from `document`\n   *\n   * @alias module:interact.off\n   *\n   * @param {string | array | object} type The types of events that were listened\n   * for\n   * @param {function} listener The listener function to be removed\n   * @param {object | boolean} options [options] object or useCapture flag for\n   * removeEventListener\n   * @return {object} interact\n   */\n  interact.off = warnOnce(function off (type: EventTypes, listener: any, options?: object) {\n    if (is.string(type) && type.search(' ') !== -1) {\n      type = type.trim().split(/ +/)\n    }\n\n    if (is.array(type)) {\n      for (const eventType of type) {\n        this.off(eventType, listener, options)\n      }\n\n      return this\n    }\n\n    if (is.object(type)) {\n      for (const prop in type) {\n        this.off(prop, type[prop], listener)\n      }\n\n      return this\n    }\n\n    if (isNonNativeEvent(type, this.scope.actions)) {\n      let index: number\n\n      if (type in this.globalEvents && (index = this.globalEvents[type].indexOf(listener)) !== -1) {\n        this.globalEvents[type].splice(index, 1)\n      }\n    } else {\n      this.scope.events.remove(this.scope.document, type, listener, options)\n    }\n\n    return this\n  }, 'The interact.off() method is being deprecated')\n\n  interact.debug = function () {\n    return this.scope\n  }\n\n  /**\n   * @alias module:interact.supportsTouch\n   *\n   * @return {boolean} Whether or not the browser supports touch input\n   */\n  interact.supportsTouch = function () {\n    return browser.supportsTouch\n  }\n\n  /**\n   * @alias module:interact.supportsPointerEvent\n   *\n   * @return {boolean} Whether or not the browser supports PointerEvents\n   */\n  interact.supportsPointerEvent = function () {\n    return browser.supportsPointerEvent\n  }\n\n  /**\n   * Cancels all interactions (end events are not fired)\n   *\n   * @alias module:interact.stop\n   *\n   * @return {object} interact\n   */\n  interact.stop = function () {\n    for (const interaction of this.scope.interactions.list) {\n      interaction.stop()\n    }\n\n    return this\n  }\n\n  /**\n   * Returns or sets the distance the pointer must be moved before an action\n   * sequence occurs. This also affects tolerance for tap events.\n   *\n   * @alias module:interact.pointerMoveTolerance\n   *\n   * @param {number} [newValue] The movement from the start position must be greater than this value\n   * @return {interact | number}\n   */\n  interact.pointerMoveTolerance = function (newValue?: number) {\n    if (is.number(newValue)) {\n      this.scope.interactions.pointerMoveTolerance = newValue\n\n      return this\n    }\n\n    return this.scope.interactions.pointerMoveTolerance\n  }\n\n  interact.addDocument = function (doc: Document, options?: object) {\n    this.scope.addDocument(doc, options)\n  }\n\n  interact.removeDocument = function (doc: Document) {\n    this.scope.removeDocument(doc)\n  }\n\n  return interact\n}\n","/* eslint-disable no-dupe-class-members */\nimport type { ActionMap, ActionName, Actions, Scope } from '@interactjs/core/scope'\nimport type {\n  Context,\n  Element,\n  Target,\n  Listeners,\n  OrBoolean,\n  EventTypes,\n  ListenersArg,\n  ActionMethod,\n} from '@interactjs/types/index'\nimport * as arr from '@interactjs/utils/arr'\nimport browser from '@interactjs/utils/browser'\nimport clone from '@interactjs/utils/clone'\nimport { getElementRect, matchesUpTo, nodeContains, trySelector } from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport normalizeListeners from '@interactjs/utils/normalizeListeners'\nimport { getWindow } from '@interactjs/utils/window'\n\nimport { Eventable } from './Eventable'\nimport isNonNativeEvent from './isNonNativeEvent'\nimport type { ActionDefaults, Defaults, OptionsArg, PerActionDefaults } from './options'\nimport { Options } from './options'\n\ntype IgnoreValue = string | Element | boolean\ntype DeltaSource = 'page' | 'client'\n\n/** */\nexport class Interactable implements Partial<Eventable> {\n  /** @internal */ get _defaults (): Defaults {\n    return {\n      base: {},\n      perAction: {},\n      actions: {} as ActionDefaults,\n    }\n  }\n\n  readonly options!: Required<Options>\n  readonly _actions: Actions\n  readonly target: Target\n  readonly events = new Eventable()\n  readonly _context: Context\n  readonly _win: Window\n  readonly _doc: Document\n  readonly _scopeEvents: Scope['events']\n\n  /** @internal */ _rectChecker?: typeof Interactable.prototype.getRect\n\n  /** */\n  constructor (\n    target: Target,\n    options: any,\n    defaultContext: Document | Element,\n    scopeEvents: Scope['events'],\n  ) {\n    this._actions = options.actions\n    this.target = target\n    this._context = options.context || defaultContext\n    this._win = getWindow(trySelector(target) ? this._context : target)\n    this._doc = this._win.document\n    this._scopeEvents = scopeEvents\n\n    this.set(options)\n  }\n\n  setOnEvents (actionName: ActionName, phases: NonNullable<any>) {\n    if (is.func(phases.onstart)) {\n      this.on(`${actionName}start`, phases.onstart)\n    }\n    if (is.func(phases.onmove)) {\n      this.on(`${actionName}move`, phases.onmove)\n    }\n    if (is.func(phases.onend)) {\n      this.on(`${actionName}end`, phases.onend)\n    }\n    if (is.func(phases.oninertiastart)) {\n      this.on(`${actionName}inertiastart`, phases.oninertiastart)\n    }\n\n    return this\n  }\n\n  updatePerActionListeners (actionName: ActionName, prev: Listeners, cur: Listeners) {\n    if (is.array(prev) || is.object(prev)) {\n      this.off(actionName, prev)\n    }\n\n    if (is.array(cur) || is.object(cur)) {\n      this.on(actionName, cur)\n    }\n  }\n\n  setPerAction (actionName: ActionName, options: OrBoolean<Options>) {\n    const defaults = this._defaults\n\n    // for all the default per-action options\n    for (const optionName_ in options) {\n      const optionName = optionName_ as keyof PerActionDefaults\n      const actionOptions = this.options[actionName]\n      const optionValue: any = options[optionName]\n\n      // remove old event listeners and add new ones\n      if (optionName === 'listeners') {\n        this.updatePerActionListeners(actionName, actionOptions.listeners, optionValue as Listeners)\n      }\n\n      // if the option value is an array\n      if (is.array(optionValue)) {\n        ;(actionOptions[optionName] as any) = arr.from(optionValue)\n      }\n      // if the option value is an object\n      else if (is.plainObject(optionValue)) {\n        // copy the object\n        ;(actionOptions[optionName] as any) = extend(\n          actionOptions[optionName] || ({} as any),\n          clone(optionValue),\n        )\n\n        // set anabled field to true if it exists in the defaults\n        if (\n          is.object(defaults.perAction[optionName]) &&\n          'enabled' in (defaults.perAction[optionName] as any)\n        ) {\n          ;(actionOptions[optionName] as any).enabled = optionValue.enabled !== false\n        }\n      }\n      // if the option value is a boolean and the default is an object\n      else if (is.bool(optionValue) && is.object(defaults.perAction[optionName])) {\n        ;(actionOptions[optionName] as any).enabled = optionValue\n      }\n      // if it's anything else, do a plain assignment\n      else {\n        ;(actionOptions[optionName] as any) = optionValue\n      }\n    }\n  }\n\n  /**\n   * The default function to get an Interactables bounding rect. Can be\n   * overridden using {@link Interactable.rectChecker}.\n   *\n   * @param {Element} [element] The element to measure.\n   * @return {Rect} The object's bounding rectangle.\n   */\n  getRect (element: Element) {\n    element = element || (is.element(this.target) ? this.target : null)\n\n    if (is.string(this.target)) {\n      element = element || this._context.querySelector(this.target)\n    }\n\n    return getElementRect(element)\n  }\n\n  /**\n   * Returns or sets the function used to calculate the interactable's\n   * element's rectangle\n   *\n   * @param {function} [checker] A function which returns this Interactable's\n   * bounding rectangle. See {@link Interactable.getRect}\n   * @return {function | object} The checker function or this Interactable\n   */\n  rectChecker(): (element: Element) => any | null\n  rectChecker(checker: (element: Element) => any): this\n  rectChecker (checker?: (element: Element) => any) {\n    if (is.func(checker)) {\n      this._rectChecker = checker\n\n      this.getRect = (element) => {\n        const rect = extend({}, this._rectChecker(element))\n\n        if (!(('width' in rect) as unknown)) {\n          rect.width = rect.right - rect.left\n          rect.height = rect.bottom - rect.top\n        }\n\n        return rect\n      }\n\n      return this\n    }\n\n    if (checker === null) {\n      delete this.getRect\n      delete this._rectChecker\n\n      return this\n    }\n\n    return this.getRect\n  }\n\n  _backCompatOption (optionName: keyof Options, newValue: any) {\n    if (trySelector(newValue) || is.object(newValue)) {\n      ;(this.options[optionName] as any) = newValue\n\n      for (const action in this._actions.map) {\n        ;(this.options[action as keyof ActionMap] as any)[optionName] = newValue\n      }\n\n      return this\n    }\n\n    return this.options[optionName]\n  }\n\n  /**\n   * Gets or sets the origin of the Interactable's element.  The x and y\n   * of the origin will be subtracted from action event coordinates.\n   *\n   * @param {Element | object | string} [origin] An HTML or SVG Element whose\n   * rect will be used, an object eg. { x: 0, y: 0 } or string 'parent', 'self'\n   * or any CSS selector\n   *\n   * @return {object} The current origin or this Interactable\n   */\n  origin (newValue: any) {\n    return this._backCompatOption('origin', newValue)\n  }\n\n  /**\n   * Returns or sets the mouse coordinate types used to calculate the\n   * movement of the pointer.\n   *\n   * @param {string} [newValue] Use 'client' if you will be scrolling while\n   * interacting; Use 'page' if you want autoScroll to work\n   * @return {string | object} The current deltaSource or this Interactable\n   */\n  deltaSource(): DeltaSource\n  deltaSource(newValue: DeltaSource): this\n  deltaSource (newValue?: DeltaSource) {\n    if (newValue === 'page' || newValue === 'client') {\n      this.options.deltaSource = newValue\n\n      return this\n    }\n\n    return this.options.deltaSource\n  }\n\n  /**\n   * Gets the selector context Node of the Interactable. The default is\n   * `window.document`.\n   *\n   * @return {Node} The context Node of this Interactable\n   */\n  context () {\n    return this._context\n  }\n\n  inContext (element: Document | Node) {\n    return this._context === element.ownerDocument || nodeContains(this._context, element)\n  }\n\n  testIgnoreAllow (\n    this: Interactable,\n    options: { ignoreFrom?: IgnoreValue, allowFrom?: IgnoreValue },\n    targetNode: Node,\n    eventTarget: Node,\n  ) {\n    return (\n      !this.testIgnore(options.ignoreFrom, targetNode, eventTarget) &&\n      this.testAllow(options.allowFrom, targetNode, eventTarget)\n    )\n  }\n\n  testAllow (this: Interactable, allowFrom: IgnoreValue, targetNode: Node, element: Node) {\n    if (!allowFrom) {\n      return true\n    }\n\n    if (!is.element(element)) {\n      return false\n    }\n\n    if (is.string(allowFrom)) {\n      return matchesUpTo(element, allowFrom, targetNode)\n    } else if (is.element(allowFrom)) {\n      return nodeContains(allowFrom, element)\n    }\n\n    return false\n  }\n\n  testIgnore (this: Interactable, ignoreFrom: IgnoreValue, targetNode: Node, element: Node) {\n    if (!ignoreFrom || !is.element(element)) {\n      return false\n    }\n\n    if (is.string(ignoreFrom)) {\n      return matchesUpTo(element, ignoreFrom, targetNode)\n    } else if (is.element(ignoreFrom)) {\n      return nodeContains(ignoreFrom, element)\n    }\n\n    return false\n  }\n\n  /**\n   * Calls listeners for the given InteractEvent type bound globally\n   * and directly to this Interactable\n   *\n   * @param {InteractEvent} iEvent The InteractEvent object to be fired on this\n   * Interactable\n   * @return {Interactable} this Interactable\n   */\n  fire<E extends { type: string }> (iEvent: E) {\n    this.events.fire(iEvent)\n\n    return this\n  }\n\n  _onOff (method: 'on' | 'off', typeArg: EventTypes, listenerArg?: ListenersArg | null, options?: any) {\n    if (is.object(typeArg) && !is.array(typeArg)) {\n      options = listenerArg\n      listenerArg = null\n    }\n\n    const addRemove = method === 'on' ? 'add' : 'remove'\n    const listeners = normalizeListeners(typeArg, listenerArg)\n\n    for (let type in listeners) {\n      if (type === 'wheel') {\n        type = browser.wheelEvent\n      }\n\n      for (const listener of listeners[type]) {\n        // if it is an action event type\n        if (isNonNativeEvent(type, this._actions)) {\n          this.events[method](type, listener)\n        }\n        // delegated event\n        else if (is.string(this.target)) {\n          this._scopeEvents[`${addRemove}Delegate` as 'addDelegate' | 'removeDelegate'](\n            this.target,\n            this._context,\n            type,\n            listener,\n            options,\n          )\n        }\n        // remove listener from this Interactable's element\n        else {\n          this._scopeEvents[addRemove](this.target, type, listener, options)\n        }\n      }\n    }\n\n    return this\n  }\n\n  /**\n   * Binds a listener for an InteractEvent, pointerEvent or DOM event.\n   *\n   * @param {string | array | object} types The types of events to listen\n   * for\n   * @param {function | array | object} [listener] The event listener function(s)\n   * @param {object | boolean} [options] options object or useCapture flag for\n   * addEventListener\n   * @return {Interactable} This Interactable\n   */\n  on (types: EventTypes, listener?: ListenersArg, options?: any) {\n    return this._onOff('on', types, listener, options)\n  }\n\n  /**\n   * Removes an InteractEvent, pointerEvent or DOM event listener.\n   *\n   * @param {string | array | object} types The types of events that were\n   * listened for\n   * @param {function | array | object} [listener] The event listener function(s)\n   * @param {object | boolean} [options] options object or useCapture flag for\n   * removeEventListener\n   * @return {Interactable} This Interactable\n   */\n  off (types: string | string[] | EventTypes, listener?: ListenersArg, options?: any) {\n    return this._onOff('off', types, listener, options)\n  }\n\n  /**\n   * Reset the options of this Interactable\n   *\n   * @param {object} options The new settings to apply\n   * @return {object} This Interactable\n   */\n  set (options: OptionsArg) {\n    const defaults = this._defaults\n\n    if (!is.object(options)) {\n      options = {}\n    }\n\n    ;(this.options as Required<Options>) = clone(defaults.base) as Required<Options>\n\n    for (const actionName_ in this._actions.methodDict) {\n      const actionName = actionName_ as ActionName\n      const methodName = this._actions.methodDict[actionName]\n\n      this.options[actionName] = {}\n      this.setPerAction(actionName, extend(extend({}, defaults.perAction), defaults.actions[actionName]))\n      ;(this[methodName] as ActionMethod<unknown>)(options[actionName])\n    }\n\n    for (const setting in options) {\n      if (is.func((this as any)[setting])) {\n        ;(this as any)[setting](options[setting as keyof typeof options])\n      }\n    }\n\n    return this\n  }\n\n  /**\n   * Remove this interactable from the list of interactables and remove it's\n   * action capabilities and event listeners\n   */\n  unset () {\n    if (is.string(this.target)) {\n      // remove delegated events\n      for (const type in this._scopeEvents.delegatedEvents) {\n        const delegated = this._scopeEvents.delegatedEvents[type]\n\n        for (let i = delegated.length - 1; i >= 0; i--) {\n          const { selector, context, listeners } = delegated[i]\n\n          if (selector === this.target && context === this._context) {\n            delegated.splice(i, 1)\n          }\n\n          for (let l = listeners.length - 1; l >= 0; l--) {\n            this._scopeEvents.removeDelegate(\n              this.target,\n              this._context,\n              type,\n              listeners[l][0],\n              listeners[l][1],\n            )\n          }\n        }\n      }\n    } else {\n      this._scopeEvents.remove(this.target as Node, 'all')\n    }\n  }\n}\n","import type { Interactable } from '@interactjs/core/Interactable'\nimport type { OptionsArg, Options } from '@interactjs/core/options'\nimport type { Scope } from '@interactjs/core/scope'\nimport type { Target, Context } from '@interactjs/types/index'\nimport * as arr from '@interactjs/utils/arr'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactable:new': {\n      interactable: Interactable\n      target: Target\n      options: OptionsArg\n      win: Window\n    }\n  }\n}\n\ninterface InteractableScopeProp {\n  context: Context\n  interactable: Interactable\n}\n\nexport class InteractableSet {\n  // all set interactables\n  list: Interactable[] = []\n\n  selectorMap: {\n    [selector: string]: InteractableScopeProp[]\n  } = {}\n\n  scope: Scope\n\n  constructor (scope: Scope) {\n    this.scope = scope\n    scope.addListeners({\n      'interactable:unset': ({ interactable }) => {\n        const { target, _context: context } = interactable\n        const targetMappings: InteractableScopeProp[] = is.string(target)\n          ? this.selectorMap[target]\n          : (target as any)[this.scope.id]\n\n        const targetIndex = arr.findIndex(targetMappings, (m) => m.context === context)\n        if (targetMappings[targetIndex]) {\n          // Destroying mappingInfo's context and interactable\n          targetMappings[targetIndex].context = null\n          targetMappings[targetIndex].interactable = null\n        }\n        targetMappings.splice(targetIndex, 1)\n      },\n    })\n  }\n\n  new (target: Target, options?: any): Interactable {\n    options = extend(options || {}, {\n      actions: this.scope.actions,\n    })\n    const interactable = new this.scope.Interactable(target, options, this.scope.document, this.scope.events)\n    const mappingInfo = { context: interactable._context, interactable }\n\n    this.scope.addDocument(interactable._doc)\n    this.list.push(interactable)\n\n    if (is.string(target)) {\n      if (!this.selectorMap[target]) {\n        this.selectorMap[target] = []\n      }\n      this.selectorMap[target].push(mappingInfo)\n    } else {\n      if (!(interactable.target as any)[this.scope.id]) {\n        Object.defineProperty(target, this.scope.id, {\n          value: [],\n          configurable: true,\n        })\n      }\n\n      ;(target as any)[this.scope.id].push(mappingInfo)\n    }\n\n    this.scope.fire('interactable:new', {\n      target,\n      options,\n      interactable,\n      win: this.scope._win,\n    })\n\n    return interactable\n  }\n\n  get (target: Target, options?: Options) {\n    const context = (options && options.context) || this.scope.document\n    const isSelector = is.string(target)\n    const targetMappings: InteractableScopeProp[] = isSelector\n      ? this.selectorMap[target as string]\n      : (target as any)[this.scope.id]\n\n    if (!targetMappings) {\n      return null\n    }\n\n    const found = arr.find(\n      targetMappings,\n      (m) => m.context === context && (isSelector || m.interactable.inContext(target as any)),\n    )\n\n    return found && found.interactable\n  }\n\n  forEachMatch<T> (node: Node, callback: (interactable: Interactable) => T) {\n    for (const interactable of this.list) {\n      let ret: void | T\n\n      if (\n        (is.string(interactable.target)\n          ? // target is a selector and the element matches\n          is.element(node) && domUtils.matchesSelector(node, interactable.target)\n          : // target is the element\n          node === interactable.target) &&\n        // the element is in context\n        interactable.inContext(node)\n      ) {\n        ret = callback(interactable)\n      }\n\n      if (ret !== undefined) {\n        return ret\n      }\n    }\n  }\n}\n","import type { Scope } from '@interactjs/core/scope'\nimport type { Element } from '@interactjs/types/index'\nimport * as arr from '@interactjs/utils/arr'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport pExtend from '@interactjs/utils/pointerExtend'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    events: ReturnType<typeof install>\n  }\n}\n\ntype Listener = (event: Event | FakeEvent) => any\n\nfunction install (scope: Scope) {\n  const targets: Array<{\n    eventTarget: EventTarget\n    events: { [type: string]: Listener[] }\n  }> = []\n\n  const delegatedEvents: {\n    [type: string]: Array<{\n      selector: string\n      context: Node\n      listeners: Array<[Listener, { capture: boolean, passive: boolean }]>\n    }>\n  } = {}\n  const documents: Document[] = []\n\n  const eventsMethods = {\n    add,\n    remove,\n\n    addDelegate,\n    removeDelegate,\n\n    delegateListener,\n    delegateUseCapture,\n    delegatedEvents,\n    documents,\n\n    targets,\n\n    supportsOptions: false,\n    supportsPassive: false,\n  }\n\n  // check if browser supports passive events and options arg\n  scope.document?.createElement('div').addEventListener('test', null, {\n    get capture () {\n      return (eventsMethods.supportsOptions = true)\n    },\n    get passive () {\n      return (eventsMethods.supportsPassive = true)\n    },\n  })\n\n  scope.events = eventsMethods\n\n  function add (eventTarget: EventTarget, type: string, listener: Listener, optionalArg?: boolean | any) {\n    const options = getOptions(optionalArg)\n    let target = arr.find(targets, (t) => t.eventTarget === eventTarget)\n\n    if (!target) {\n      target = {\n        eventTarget,\n        events: {},\n      }\n\n      targets.push(target)\n    }\n\n    if (!target.events[type]) {\n      target.events[type] = []\n    }\n\n    if (eventTarget.addEventListener && !arr.contains(target.events[type], listener)) {\n      eventTarget.addEventListener(\n        type,\n        listener as any,\n        eventsMethods.supportsOptions ? options : options.capture,\n      )\n      target.events[type].push(listener)\n    }\n  }\n\n  function remove (\n    eventTarget: EventTarget,\n    type: string,\n    listener?: 'all' | Listener,\n    optionalArg?: boolean | any,\n  ) {\n    const options = getOptions(optionalArg)\n    const targetIndex = arr.findIndex(targets, (t) => t.eventTarget === eventTarget)\n    const target = targets[targetIndex]\n\n    if (!target || !target.events) {\n      return\n    }\n\n    if (type === 'all') {\n      for (type in target.events) {\n        if (target.events.hasOwnProperty(type)) {\n          remove(eventTarget, type, 'all')\n        }\n      }\n      return\n    }\n\n    let typeIsEmpty = false\n    const typeListeners = target.events[type]\n\n    if (typeListeners) {\n      if (listener === 'all') {\n        for (let i = typeListeners.length - 1; i >= 0; i--) {\n          remove(eventTarget, type, typeListeners[i], options)\n        }\n        return\n      } else {\n        for (let i = 0; i < typeListeners.length; i++) {\n          if (typeListeners[i] === listener) {\n            eventTarget.removeEventListener(\n              type,\n              listener as any,\n              eventsMethods.supportsOptions ? options : options.capture,\n            )\n            typeListeners.splice(i, 1)\n\n            if (typeListeners.length === 0) {\n              delete target.events[type]\n              typeIsEmpty = true\n            }\n\n            break\n          }\n        }\n      }\n    }\n\n    if (typeIsEmpty && !Object.keys(target.events).length) {\n      targets.splice(targetIndex, 1)\n    }\n  }\n\n  function addDelegate (selector: string, context: Node, type: string, listener: Listener, optionalArg?: any) {\n    const options = getOptions(optionalArg)\n    if (!delegatedEvents[type]) {\n      delegatedEvents[type] = []\n\n      // add delegate listener functions\n      for (const doc of documents) {\n        add(doc, type, delegateListener)\n        add(doc, type, delegateUseCapture, true)\n      }\n    }\n\n    const delegates = delegatedEvents[type]\n    let delegate = arr.find(delegates, (d) => d.selector === selector && d.context === context)\n\n    if (!delegate) {\n      delegate = { selector, context, listeners: [] }\n      delegates.push(delegate)\n    }\n\n    delegate.listeners.push([listener, options])\n  }\n\n  function removeDelegate (\n    selector: string,\n    context: Document | Element,\n    type: string,\n    listener?: Listener,\n    optionalArg?: any,\n  ) {\n    const options = getOptions(optionalArg)\n    const delegates = delegatedEvents[type]\n    let matchFound = false\n    let index: number\n\n    if (!delegates) return\n\n    // count from last index of delegated to 0\n    for (index = delegates.length - 1; index >= 0; index--) {\n      const cur = delegates[index]\n      // look for matching selector and context Node\n      if (cur.selector === selector && cur.context === context) {\n        const { listeners } = cur\n\n        // each item of the listeners array is an array: [function, capture, passive]\n        for (let i = listeners.length - 1; i >= 0; i--) {\n          const [fn, { capture, passive }] = listeners[i]\n\n          // check if the listener functions and capture and passive flags match\n          if (fn === listener && capture === options.capture && passive === options.passive) {\n            // remove the listener from the array of listeners\n            listeners.splice(i, 1)\n\n            // if all listeners for this target have been removed\n            // remove the target from the delegates array\n            if (!listeners.length) {\n              delegates.splice(index, 1)\n\n              // remove delegate function from context\n              remove(context, type, delegateListener)\n              remove(context, type, delegateUseCapture, true)\n            }\n\n            // only remove one listener\n            matchFound = true\n            break\n          }\n        }\n\n        if (matchFound) {\n          break\n        }\n      }\n    }\n  }\n\n  // bound to the interactable context when a DOM event\n  // listener is added to a selector interactable\n  function delegateListener (event: Event | FakeEvent, optionalArg?: any) {\n    const options = getOptions(optionalArg)\n    const fakeEvent = new FakeEvent(event as Event)\n    const delegates = delegatedEvents[event.type]\n    const [eventTarget] = pointerUtils.getEventTargets(event as Event)\n    let element: Node = eventTarget\n\n    // climb up document tree looking for selector matches\n    while (is.element(element)) {\n      for (let i = 0; i < delegates.length; i++) {\n        const cur = delegates[i]\n        const { selector, context } = cur\n\n        if (\n          domUtils.matchesSelector(element, selector) &&\n          domUtils.nodeContains(context, eventTarget) &&\n          domUtils.nodeContains(context, element)\n        ) {\n          const { listeners } = cur\n\n          fakeEvent.currentTarget = element\n\n          for (const [fn, { capture, passive }] of listeners) {\n            if (capture === options.capture && passive === options.passive) {\n              fn(fakeEvent)\n            }\n          }\n        }\n      }\n\n      element = domUtils.parentNode(element)\n    }\n  }\n\n  function delegateUseCapture (this: Element, event: Event | FakeEvent) {\n    return delegateListener.call(this, event, true)\n  }\n\n  // for type inferrence\n  return eventsMethods\n}\n\nclass FakeEvent implements Partial<Event> {\n  currentTarget: Node\n  originalEvent: Event\n  type: string\n\n  constructor (originalEvent: Event) {\n    this.originalEvent = originalEvent\n    // duplicate the event so that currentTarget can be changed\n    pExtend(this, originalEvent)\n  }\n\n  preventOriginalDefault () {\n    this.originalEvent.preventDefault()\n  }\n\n  stopPropagation () {\n    this.originalEvent.stopPropagation()\n  }\n\n  stopImmediatePropagation () {\n    this.originalEvent.stopImmediatePropagation()\n  }\n}\n\nfunction getOptions (param: { [index: string]: any } | boolean): { capture: boolean, passive: boolean } {\n  if (!is.object(param)) {\n    return { capture: !!param, passive: false }\n  }\n\n  const options = extend({}, param) as any\n\n  options.capture = !!param.capture\n  options.passive = !!param.passive\n\n  return options\n}\n\nexport default {\n  id: 'events',\n  install,\n}\n","import type Interaction from '@interactjs/core/Interaction'\nimport type { Scope } from '@interactjs/core/scope'\nimport type { PointerType } from '@interactjs/types/index'\nimport * as dom from '@interactjs/utils/domUtils'\n\nexport interface SearchDetails {\n  pointer: PointerType\n  pointerId: number\n  pointerType: string\n  eventType: string\n  eventTarget: EventTarget\n  curEventTarget: EventTarget\n  scope: Scope\n}\n\nconst finder = {\n  methodOrder: ['simulationResume', 'mouseOrPen', 'hasPointer', 'idle'] as const,\n\n  search (details: SearchDetails) {\n    for (const method of finder.methodOrder) {\n      const interaction = finder[method](details)\n\n      if (interaction) {\n        return interaction\n      }\n    }\n\n    return null\n  },\n\n  // try to resume simulation with a new pointer\n  simulationResume ({ pointerType, eventType, eventTarget, scope }: SearchDetails) {\n    if (!/down|start/i.test(eventType)) {\n      return null\n    }\n\n    for (const interaction of scope.interactions.list) {\n      let element = eventTarget as Node\n\n      if (\n        interaction.simulation &&\n        interaction.simulation.allowResume &&\n        interaction.pointerType === pointerType\n      ) {\n        while (element) {\n          // if the element is the interaction element\n          if (element === interaction.element) {\n            return interaction\n          }\n          element = dom.parentNode(element)\n        }\n      }\n    }\n\n    return null\n  },\n\n  // if it's a mouse or pen interaction\n  mouseOrPen ({ pointerId, pointerType, eventType, scope }: SearchDetails) {\n    if (pointerType !== 'mouse' && pointerType !== 'pen') {\n      return null\n    }\n\n    let firstNonActive\n\n    for (const interaction of scope.interactions.list) {\n      if (interaction.pointerType === pointerType) {\n        // if it's a down event, skip interactions with running simulations\n        if (interaction.simulation && !hasPointerId(interaction, pointerId)) {\n          continue\n        }\n\n        // if the interaction is active, return it immediately\n        if (interaction.interacting()) {\n          return interaction\n        }\n        // otherwise save it and look for another active interaction\n        else if (!firstNonActive) {\n          firstNonActive = interaction\n        }\n      }\n    }\n\n    // if no active mouse interaction was found use the first inactive mouse\n    // interaction\n    if (firstNonActive) {\n      return firstNonActive\n    }\n\n    // find any mouse or pen interaction.\n    // ignore the interaction if the eventType is a *down, and a simulation\n    // is active\n    for (const interaction of scope.interactions.list) {\n      if (interaction.pointerType === pointerType && !(/down/i.test(eventType) && interaction.simulation)) {\n        return interaction\n      }\n    }\n\n    return null\n  },\n\n  // get interaction that has this pointer\n  hasPointer ({ pointerId, scope }: SearchDetails) {\n    for (const interaction of scope.interactions.list) {\n      if (hasPointerId(interaction, pointerId)) {\n        return interaction\n      }\n    }\n\n    return null\n  },\n\n  // get first idle interaction with a matching pointerType\n  idle ({ pointerType, scope }: SearchDetails) {\n    for (const interaction of scope.interactions.list) {\n      // if there's already a pointer held down\n      if (interaction.pointers.length === 1) {\n        const target = interaction.interactable\n        // don't add this pointer if there is a target interactable and it\n        // isn't gesturable\n        if (target && !(target.options.gesture && target.options.gesture.enabled)) {\n          continue\n        }\n      }\n      // maximum of 2 pointers per interaction\n      else if (interaction.pointers.length >= 2) {\n        continue\n      }\n\n      if (!interaction.interacting() && pointerType === interaction.pointerType) {\n        return interaction\n      }\n    }\n\n    return null\n  },\n}\n\nfunction hasPointerId (interaction: Interaction, pointerId: number) {\n  return interaction.pointers.some(({ id }) => id === pointerId)\n}\n\nexport default finder\n","import type { Scope, ActionName, SignalArgs, Plugin } from '@interactjs/core/scope'\nimport type { Listener } from '@interactjs/types/index'\nimport browser from '@interactjs/utils/browser'\nimport domObjects from '@interactjs/utils/domObjects'\nimport { nodeContains } from '@interactjs/utils/domUtils'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\nimport InteractionBase from './Interaction'\nimport interactablePreventDefault from './interactablePreventDefault'\nimport type { SearchDetails } from './interactionFinder'\nimport finder from './interactionFinder'\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    Interaction: typeof InteractionBase\n    interactions: {\n      new: <T extends ActionName>(options: any) => InteractionBase<T>\n      list: Array<InteractionBase<ActionName>>\n      listeners: { [type: string]: Listener }\n      docEvents: Array<{ type: string, listener: Listener }>\n      pointerMoveTolerance: number\n    }\n    prevTouchTime: number\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactions:find': {\n      interaction: InteractionBase\n      searchDetails: SearchDetails\n    }\n  }\n}\n\nconst methodNames = [\n  'pointerDown',\n  'pointerMove',\n  'pointerUp',\n  'updatePointer',\n  'removePointer',\n  'windowBlur',\n]\n\nfunction install (scope: Scope) {\n  const listeners = {} as any\n\n  for (const method of methodNames) {\n    listeners[method] = doOnInteractions(method, scope)\n  }\n\n  const pEventTypes = browser.pEventTypes\n  let docEvents: typeof scope.interactions.docEvents\n\n  if (domObjects.PointerEvent) {\n    docEvents = [\n      { type: pEventTypes.down, listener: releasePointersOnRemovedEls },\n      { type: pEventTypes.down, listener: listeners.pointerDown },\n      { type: pEventTypes.move, listener: listeners.pointerMove },\n      { type: pEventTypes.up, listener: listeners.pointerUp },\n      { type: pEventTypes.cancel, listener: listeners.pointerUp },\n    ]\n  } else {\n    docEvents = [\n      { type: 'mousedown', listener: listeners.pointerDown },\n      { type: 'mousemove', listener: listeners.pointerMove },\n      { type: 'mouseup', listener: listeners.pointerUp },\n\n      { type: 'touchstart', listener: releasePointersOnRemovedEls },\n      { type: 'touchstart', listener: listeners.pointerDown },\n      { type: 'touchmove', listener: listeners.pointerMove },\n      { type: 'touchend', listener: listeners.pointerUp },\n      { type: 'touchcancel', listener: listeners.pointerUp },\n    ]\n  }\n\n  docEvents.push({\n    type: 'blur',\n    listener (event) {\n      for (const interaction of scope.interactions.list) {\n        interaction.documentBlur(event)\n      }\n    },\n  })\n\n  // for ignoring browser's simulated mouse events\n  scope.prevTouchTime = 0\n\n  scope.Interaction = class <T extends ActionName> extends InteractionBase<T> {\n    get pointerMoveTolerance () {\n      return scope.interactions.pointerMoveTolerance\n    }\n\n    set pointerMoveTolerance (value) {\n      scope.interactions.pointerMoveTolerance = value\n    }\n\n    _now () {\n      return scope.now()\n    }\n  }\n\n  scope.interactions = {\n    // all active and idle interactions\n    list: [],\n    new<T extends ActionName> (options: { pointerType?: string, scopeFire?: Scope['fire'] }) {\n      options.scopeFire = (name, arg) => scope.fire(name, arg)\n\n      const interaction = new scope.Interaction<T>(options as Required<typeof options>)\n\n      scope.interactions.list.push(interaction)\n      return interaction\n    },\n    listeners,\n    docEvents,\n    pointerMoveTolerance: 1,\n  }\n\n  function releasePointersOnRemovedEls () {\n    // for all inactive touch interactions with pointers down\n    for (const interaction of scope.interactions.list) {\n      if (!interaction.pointerIsDown || interaction.pointerType !== 'touch' || interaction._interacting) {\n        continue\n      }\n\n      // if a pointer is down on an element that is no longer in the DOM tree\n      for (const pointer of interaction.pointers) {\n        if (!scope.documents.some(({ doc }) => nodeContains(doc, pointer.downTarget))) {\n          // remove the pointer from the interaction\n          interaction.removePointer(pointer.pointer, pointer.event)\n        }\n      }\n    }\n  }\n\n  scope.usePlugin(interactablePreventDefault)\n}\n\nfunction doOnInteractions (method: string, scope: Scope) {\n  return function (event: Event) {\n    const interactions = scope.interactions.list\n\n    const pointerType = pointerUtils.getPointerType(event)\n    const [eventTarget, curEventTarget] = pointerUtils.getEventTargets(event)\n    const matches: any[] = [] // [ [pointer, interaction], ...]\n\n    if (/^touch/.test(event.type)) {\n      scope.prevTouchTime = scope.now()\n\n      // @ts-expect-error\n      for (const changedTouch of event.changedTouches) {\n        const pointer = changedTouch\n        const pointerId = pointerUtils.getPointerId(pointer)\n        const searchDetails: SearchDetails = {\n          pointer,\n          pointerId,\n          pointerType,\n          eventType: event.type,\n          eventTarget,\n          curEventTarget,\n          scope,\n        }\n        const interaction = getInteraction(searchDetails)\n\n        matches.push([\n          searchDetails.pointer,\n          searchDetails.eventTarget,\n          searchDetails.curEventTarget,\n          interaction,\n        ])\n      }\n    } else {\n      let invalidPointer = false\n\n      if (!browser.supportsPointerEvent && /mouse/.test(event.type)) {\n        // ignore mouse events while touch interactions are active\n        for (let i = 0; i < interactions.length && !invalidPointer; i++) {\n          invalidPointer = interactions[i].pointerType !== 'mouse' && interactions[i].pointerIsDown\n        }\n\n        // try to ignore mouse events that are simulated by the browser\n        // after a touch event\n        invalidPointer =\n          invalidPointer ||\n          scope.now() - scope.prevTouchTime < 500 ||\n          // on iOS and Firefox Mobile, MouseEvent.timeStamp is zero if simulated\n          event.timeStamp === 0\n      }\n\n      if (!invalidPointer) {\n        const searchDetails = {\n          pointer: event as PointerEvent,\n          pointerId: pointerUtils.getPointerId(event as PointerEvent),\n          pointerType,\n          eventType: event.type,\n          curEventTarget,\n          eventTarget,\n          scope,\n        }\n\n        const interaction = getInteraction(searchDetails)\n\n        matches.push([\n          searchDetails.pointer,\n          searchDetails.eventTarget,\n          searchDetails.curEventTarget,\n          interaction,\n        ])\n      }\n    }\n\n    // eslint-disable-next-line no-shadow\n    for (const [pointer, eventTarget, curEventTarget, interaction] of matches) {\n      interaction[method](pointer, event, eventTarget, curEventTarget)\n    }\n  }\n}\n\nfunction getInteraction (searchDetails: SearchDetails) {\n  const { pointerType, scope } = searchDetails\n\n  const foundInteraction = finder.search(searchDetails)\n  const signalArg = { interaction: foundInteraction, searchDetails }\n\n  scope.fire('interactions:find', signalArg)\n\n  return signalArg.interaction || scope.interactions.new({ pointerType })\n}\n\nfunction onDocSignal<T extends 'scope:add-document' | 'scope:remove-document'> (\n  { doc, scope, options }: SignalArgs[T],\n  eventMethodName: 'add' | 'remove',\n) {\n  const {\n    interactions: { docEvents },\n    events,\n  } = scope\n  const eventMethod = events[eventMethodName]\n\n  if (scope.browser.isIOS && !options.events) {\n    options.events = { passive: false }\n  }\n\n  // delegate event listener\n  for (const eventType in events.delegatedEvents) {\n    eventMethod(doc, eventType, events.delegateListener)\n    eventMethod(doc, eventType, events.delegateUseCapture, true)\n  }\n\n  const eventOptions = options && options.events\n\n  for (const { type, listener } of docEvents) {\n    eventMethod(doc, type, listener, eventOptions)\n  }\n}\n\nconst interactions: Plugin = {\n  id: 'core/interactions',\n  install,\n  listeners: {\n    'scope:add-document': (arg) => onDocSignal(arg, 'add'),\n    'scope:remove-document': (arg) => onDocSignal(arg, 'remove'),\n    'interactable:unset': ({ interactable }, scope) => {\n      // Stop and destroy related interactions when an Interactable is unset\n      for (let i = scope.interactions.list.length - 1; i >= 0; i--) {\n        const interaction = scope.interactions.list[i]\n\n        if (interaction.interactable !== interactable) {\n          continue\n        }\n\n        interaction.stop()\n        scope.fire('interactions:destroy', { interaction })\n        interaction.destroy()\n\n        if (scope.interactions.list.length > 2) {\n          scope.interactions.list.splice(i, 1)\n        }\n      }\n    },\n  },\n  onDocSignal,\n  doOnInteractions,\n  methodNames,\n}\n\nexport default interactions\n","import type Interaction from '@interactjs/core/Interaction'\nimport browser from '@interactjs/utils/browser'\nimport clone from '@interactjs/utils/clone'\nimport domObjects from '@interactjs/utils/domObjects'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport raf from '@interactjs/utils/raf'\nimport * as win from '@interactjs/utils/window'\n\nimport { Eventable } from './Eventable'\nimport type { PhaseMap } from './InteractEvent'\nimport { InteractEvent } from './InteractEvent'\nimport { createInteractStatic } from './InteractStatic'\nimport type { Interactable } from './Interactable'\nimport { Interactable as InteractableBase } from './Interactable'\nimport { InteractableSet } from './InteractableSet'\nimport events from './events'\nimport interactions from './interactions'\nimport type { OptionsArg } from './options'\nimport { defaults } from './options'\n\nexport interface SignalArgs {\n  'scope:add-document': DocSignalArg\n  'scope:remove-document': DocSignalArg\n  'interactable:unset': { interactable: InteractableBase }\n  'interactable:set': { interactable: InteractableBase, options: OptionsArg }\n  'interactions:destroy': { interaction: Interaction }\n}\n\nexport type ListenerName = keyof SignalArgs\n\nexport type ListenerMap = {\n  [P in ListenerName]?: (arg: SignalArgs[P], scope: Scope, signalName: P) => void | boolean\n}\n\ninterface DocSignalArg {\n  doc: Document\n  window: Window\n  scope: Scope\n  options: Record<string, any>\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface ActionMap {}\nexport type ActionName = keyof ActionMap\n\nexport interface Actions {\n  map: ActionMap\n  phases: PhaseMap\n  methodDict: { [P in ActionName]?: keyof Interactable }\n  phaselessTypes: { [type: string]: true }\n}\n\nexport interface Plugin {\n  [key: string]: any\n  id?: string\n  listeners?: ListenerMap\n  before?: string[]\n  install?(scope: Scope, options?: any): void\n}\n\nexport class Scope {\n  id = `__interact_scope_${Math.floor(Math.random() * 100)}`\n  isInitialized = false\n  listenerMaps: Array<{\n    map: ListenerMap\n    id: string\n  }> = []\n\n  browser = browser\n  defaults = clone(defaults) as typeof defaults\n  Eventable = Eventable\n  actions: Actions = {\n    map: {},\n    phases: {\n      start: true,\n      move: true,\n      end: true,\n    },\n    methodDict: {},\n    phaselessTypes: {},\n  }\n\n  interactStatic = createInteractStatic(this)\n  InteractEvent = InteractEvent\n  Interactable: typeof InteractableBase\n  interactables = new InteractableSet(this)\n\n  // main window\n  _win!: Window\n\n  // main document\n  document!: Document\n\n  // main window\n  window!: Window\n\n  // all documents being listened to\n  documents: Array<{ doc: Document, options: any }> = []\n\n  _plugins: {\n    list: Plugin[]\n    map: { [id: string]: Plugin }\n  } = {\n    list: [],\n    map: {},\n  }\n\n  constructor () {\n    const scope = this\n\n    this.Interactable = class extends InteractableBase {\n      get _defaults () {\n        return scope.defaults\n      }\n\n      set<T extends InteractableBase> (this: T, options: OptionsArg) {\n        super.set(options)\n\n        scope.fire('interactable:set', {\n          options,\n          interactable: this,\n        })\n\n        return this\n      }\n\n      unset (this: InteractableBase) {\n        super.unset()\n        scope.interactables.list.splice(scope.interactables.list.indexOf(this), 1)\n\n        scope.fire('interactable:unset', { interactable: this })\n      }\n    }\n  }\n\n  addListeners (map: ListenerMap, id?: string) {\n    this.listenerMaps.push({ id, map })\n  }\n\n  fire<T extends ListenerName> (name: T, arg: SignalArgs[T]): void | false {\n    for (const {\n      map: { [name]: listener },\n    } of this.listenerMaps) {\n      if (!!listener && listener(arg as any, this, name as never) === false) {\n        return false\n      }\n    }\n  }\n\n  onWindowUnload = (event: BeforeUnloadEvent) => this.removeDocument(event.target as Document)\n\n  init (window: Window | typeof globalThis) {\n    return this.isInitialized ? this : initScope(this, window)\n  }\n\n  pluginIsInstalled (plugin: Plugin) {\n    return this._plugins.map[plugin.id] || this._plugins.list.indexOf(plugin) !== -1\n  }\n\n  usePlugin (plugin: Plugin, options?: { [key: string]: any }) {\n    if (!this.isInitialized) {\n      return this\n    }\n\n    if (this.pluginIsInstalled(plugin)) {\n      return this\n    }\n\n    if (plugin.id) {\n      this._plugins.map[plugin.id] = plugin\n    }\n    this._plugins.list.push(plugin)\n\n    if (plugin.install) {\n      plugin.install(this, options)\n    }\n\n    if (plugin.listeners && plugin.before) {\n      let index = 0\n      const len = this.listenerMaps.length\n      const before = plugin.before.reduce((acc, id) => {\n        acc[id] = true\n        acc[pluginIdRoot(id)] = true\n        return acc\n      }, {})\n\n      for (; index < len; index++) {\n        const otherId = this.listenerMaps[index].id\n\n        if (before[otherId] || before[pluginIdRoot(otherId)]) {\n          break\n        }\n      }\n\n      this.listenerMaps.splice(index, 0, { id: plugin.id, map: plugin.listeners })\n    } else if (plugin.listeners) {\n      this.listenerMaps.push({ id: plugin.id, map: plugin.listeners })\n    }\n\n    return this\n  }\n\n  addDocument (doc: Document, options?: any): void | false {\n    // do nothing if document is already known\n    if (this.getDocIndex(doc) !== -1) {\n      return false\n    }\n\n    const window = win.getWindow(doc)\n\n    options = options ? extend({}, options) : {}\n\n    this.documents.push({ doc, options })\n    this.events.documents.push(doc)\n\n    // don't add an unload event for the main document\n    // so that the page may be cached in browser history\n    if (doc !== this.document) {\n      this.events.add(window, 'unload', this.onWindowUnload)\n    }\n\n    this.fire('scope:add-document', { doc, window, scope: this, options })\n  }\n\n  removeDocument (doc: Document) {\n    const index = this.getDocIndex(doc)\n\n    const window = win.getWindow(doc)\n    const options = this.documents[index].options\n\n    this.events.remove(window, 'unload', this.onWindowUnload)\n\n    this.documents.splice(index, 1)\n    this.events.documents.splice(index, 1)\n\n    this.fire('scope:remove-document', { doc, window, scope: this, options })\n  }\n\n  getDocIndex (doc: Document) {\n    for (let i = 0; i < this.documents.length; i++) {\n      if (this.documents[i].doc === doc) {\n        return i\n      }\n    }\n\n    return -1\n  }\n\n  getDocOptions (doc: Document) {\n    const docIndex = this.getDocIndex(doc)\n\n    return docIndex === -1 ? null : this.documents[docIndex].options\n  }\n\n  now () {\n    return (((this.window as any).Date as typeof Date) || Date).now()\n  }\n}\n\nexport function initScope (scope: Scope, window: Window | typeof globalThis) {\n  scope.isInitialized = true\n\n  if (is.window(window)) {\n    win.init(window)\n  }\n\n  domObjects.init(window)\n  browser.init(window)\n  raf.init(window)\n\n  // @ts-expect-error\n  scope.window = window\n  scope.document = window.document\n\n  scope.usePlugin(interactions)\n  scope.usePlugin(events)\n\n  return scope\n}\n\nfunction pluginIdRoot (id: string) {\n  return id && id.replace(/\\/.*$/, '')\n}\n","import { Scope } from '@interactjs/core/scope'\n\nconst scope = new Scope()\n\nconst interact = scope.interactStatic\n\nexport default interact\n\nconst _global = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : this\nscope.init(_global)\n","export default () => {}\n","export default () => {}\n","import type { SnapFunction, SnapTarget } from '@interactjs/modifiers/snap/pointer'\nimport type { Rect, Point } from '@interactjs/types/index'\n\nexport type GridOptions = (Partial<Rect> | Point) & {\n  range?: number\n  limits?: Rect\n  offset?: Point\n}\n\nexport default (grid: GridOptions) => {\n  const coordFields = ([\n    ['x', 'y'],\n    ['left', 'top'],\n    ['right', 'bottom'],\n    ['width', 'height'],\n  ] as const).filter(([xField, yField]) => xField in grid || yField in grid)\n\n  const gridFunc: SnapFunction & {\n    grid: typeof grid\n    coordFields: typeof coordFields\n  } = (x, y) => {\n    const {\n      range,\n      limits = {\n        left: -Infinity,\n        right: Infinity,\n        top: -Infinity,\n        bottom: Infinity,\n      },\n      offset = { x: 0, y: 0 },\n    } = grid\n\n    const result: SnapTarget & {\n      grid: typeof grid\n    } = { range, grid, x: null as number, y: null as number }\n\n    for (const [xField, yField] of coordFields) {\n      const gridx = Math.round((x - offset.x) / (grid as any)[xField])\n      const gridy = Math.round((y - offset.y) / (grid as any)[yField])\n\n      result[xField] = Math.max(limits.left, Math.min(limits.right, gridx * (grid as any)[xField] + offset.x))\n      result[yField] = Math.max(limits.top, Math.min(limits.bottom, gridy * (grid as any)[yField] + offset.y))\n    }\n\n    return result\n  }\n\n  gridFunc.grid = grid\n  gridFunc.coordFields = coordFields\n\n  return gridFunc\n}\n","import type { Plugin } from '@interactjs/core/scope'\nimport extend from '@interactjs/utils/extend'\n\nimport * as allSnappers from './all'\n\ndeclare module '@interactjs/core/InteractStatic' {\n  export interface InteractStatic {\n    snappers: typeof allSnappers\n    createSnapGrid: typeof allSnappers.grid\n  }\n}\n\nconst snappersPlugin: Plugin = {\n  id: 'snappers',\n  install (scope) {\n    const { interactStatic: interact } = scope\n\n    interact.snappers = extend(interact.snappers || {}, allSnappers)\n    interact.createSnapGrid = interact.snappers.grid\n  },\n}\n\nexport default snappersPlugin\n","/**\n * @module modifiers/aspectRatio\n *\n * @description\n * This module forces elements to be resized with a specified dx/dy ratio.\n *\n * ```js\n * interact(target).resizable({\n *   modifiers: [\n *     interact.modifiers.snapSize({\n *       targets: [ interact.snappers.grid({ x: 20, y: 20 }) ],\n *     }),\n *     interact.aspectRatio({ ratio: 'preserve' }),\n *   ],\n * });\n * ```\n */\n\nimport type { Point, Rect, EdgeOptions } from '@interactjs/types/index'\nimport extend from '@interactjs/utils/extend'\nimport { addEdges } from '@interactjs/utils/rect'\n\nimport Modification from './Modification'\nimport type { Modifier, ModifierModule, ModifierState } from './base'\nimport { makeModifier } from './base'\n\nexport interface AspectRatioOptions {\n  ratio?: number | 'preserve'\n  equalDelta?: boolean\n  modifiers?: Modifier[]\n  enabled?: boolean\n}\n\nexport type AspectRatioState = ModifierState<\nAspectRatioOptions,\n{\n  startCoords: Point\n  startRect: Rect\n  linkedEdges: EdgeOptions\n  ratio: number\n  equalDelta: boolean\n  xIsPrimaryAxis: boolean\n  edgeSign: 1 | -1\n  subModification: Modification\n}\n>\n\nconst aspectRatio: ModifierModule<AspectRatioOptions, AspectRatioState> = {\n  start (arg) {\n    const { state, rect, edges: originalEdges, pageCoords: coords } = arg\n    let { ratio } = state.options\n    const { equalDelta, modifiers } = state.options\n\n    if (ratio === 'preserve') {\n      ratio = rect.width / rect.height\n    }\n\n    state.startCoords = extend({}, coords)\n    state.startRect = extend({}, rect)\n    state.ratio = ratio\n    state.equalDelta = equalDelta\n\n    const linkedEdges = (state.linkedEdges = {\n      top: originalEdges.top || (originalEdges.left && !originalEdges.bottom),\n      left: originalEdges.left || (originalEdges.top && !originalEdges.right),\n      bottom: originalEdges.bottom || (originalEdges.right && !originalEdges.top),\n      right: originalEdges.right || (originalEdges.bottom && !originalEdges.left),\n    })\n\n    state.xIsPrimaryAxis = !!(originalEdges.left || originalEdges.right)\n\n    if (state.equalDelta) {\n      state.edgeSign = ((linkedEdges.left ? 1 : -1) * (linkedEdges.top ? 1 : -1)) as 1 | -1\n    } else {\n      const negativeSecondaryEdge = state.xIsPrimaryAxis ? linkedEdges.top : linkedEdges.left\n      state.edgeSign = negativeSecondaryEdge ? -1 : 1\n    }\n\n    extend(arg.edges, linkedEdges)\n\n    if (!modifiers || !modifiers.length) return\n\n    const subModification = new Modification(arg.interaction)\n\n    subModification.copyFrom(arg.interaction.modification)\n    subModification.prepareStates(modifiers)\n\n    state.subModification = subModification\n    subModification.startAll({ ...arg })\n  },\n\n  set (arg) {\n    const { state, rect, coords } = arg\n    const initialCoords = extend({}, coords)\n    const aspectMethod = state.equalDelta ? setEqualDelta : setRatio\n\n    aspectMethod(state, state.xIsPrimaryAxis, coords, rect)\n\n    if (!state.subModification) {\n      return null\n    }\n\n    const correctedRect = extend({}, rect)\n\n    addEdges(state.linkedEdges, correctedRect, {\n      x: coords.x - initialCoords.x,\n      y: coords.y - initialCoords.y,\n    })\n\n    const result = state.subModification.setAll({\n      ...arg,\n      rect: correctedRect,\n      edges: state.linkedEdges,\n      pageCoords: coords,\n      prevCoords: coords,\n      prevRect: correctedRect,\n    })\n\n    const { delta } = result\n\n    if (result.changed) {\n      const xIsCriticalAxis = Math.abs(delta.x) > Math.abs(delta.y)\n\n      // do aspect modification again with critical edge axis as primary\n      aspectMethod(state, xIsCriticalAxis, result.coords, result.rect)\n      extend(coords, result.coords)\n    }\n\n    return result.eventProps\n  },\n\n  defaults: {\n    ratio: 'preserve',\n    equalDelta: false,\n    modifiers: [],\n    enabled: false,\n  },\n}\n\nfunction setEqualDelta ({ startCoords, edgeSign }: AspectRatioState, xIsPrimaryAxis: boolean, coords: Point) {\n  if (xIsPrimaryAxis) {\n    coords.y = startCoords.y + (coords.x - startCoords.x) * edgeSign\n  } else {\n    coords.x = startCoords.x + (coords.y - startCoords.y) * edgeSign\n  }\n}\n\nfunction setRatio (\n  { startRect, startCoords, ratio, edgeSign }: AspectRatioState,\n  xIsPrimaryAxis: boolean,\n  coords: Point,\n  rect: Rect,\n) {\n  if (xIsPrimaryAxis) {\n    const newHeight = rect.width / ratio\n\n    coords.y = startCoords.y + (newHeight - startRect.height) * edgeSign\n  } else {\n    const newWidth = rect.height * ratio\n\n    coords.x = startCoords.x + (newWidth - startRect.width) * edgeSign\n  }\n}\n\nexport default makeModifier(aspectRatio, 'aspectRatio')\nexport { aspectRatio }\n","import type { ModifierFunction } from '@interactjs/modifiers/base'\n\nconst noop = ((() => {}) as unknown) as ModifierFunction<any, any, 'noop'>\n\nnoop._defaults = {}\n\nexport default noop\n","import type Interaction from '@interactjs/core/Interaction'\nimport type { RectResolvable, Rect, Point } from '@interactjs/types/index'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport type { ModifierArg, ModifierModule, ModifierState } from '../base'\nimport { makeModifier } from '../base'\n\nexport interface RestrictOptions {\n  // where to drag over\n  restriction: RectResolvable<[number, number, Interaction]>\n  // what part of self is allowed to drag over\n  elementRect: Rect\n  offset: Rect\n  // restrict just before the end drag\n  endOnly: boolean\n  enabled?: boolean\n}\n\nexport type RestrictState = ModifierState<\nRestrictOptions,\n{\n  offset: Rect\n}\n>\n\nfunction start ({ rect, startOffset, state, interaction, pageCoords }: ModifierArg<RestrictState>) {\n  const { options } = state\n  const { elementRect } = options\n  const offset: Rect = extend(\n    {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0,\n    },\n    options.offset || {},\n  )\n\n  if (rect && elementRect) {\n    const restriction = getRestrictionRect(options.restriction, interaction, pageCoords)\n\n    if (restriction) {\n      const widthDiff = restriction.right - restriction.left - rect.width\n      const heightDiff = restriction.bottom - restriction.top - rect.height\n\n      if (widthDiff < 0) {\n        offset.left += widthDiff\n        offset.right += widthDiff\n      }\n      if (heightDiff < 0) {\n        offset.top += heightDiff\n        offset.bottom += heightDiff\n      }\n    }\n\n    offset.left += startOffset.left - rect.width * elementRect.left\n    offset.top += startOffset.top - rect.height * elementRect.top\n\n    offset.right += startOffset.right - rect.width * (1 - elementRect.right)\n    offset.bottom += startOffset.bottom - rect.height * (1 - elementRect.bottom)\n  }\n\n  state.offset = offset\n}\n\nfunction set ({ coords, interaction, state }: ModifierArg<RestrictState>) {\n  const { options, offset } = state\n\n  const restriction = getRestrictionRect(options.restriction, interaction, coords)\n\n  if (!restriction) return\n\n  const rect = rectUtils.xywhToTlbr(restriction)\n\n  coords.x = Math.max(Math.min(rect.right - offset.right, coords.x), rect.left + offset.left)\n  coords.y = Math.max(Math.min(rect.bottom - offset.bottom, coords.y), rect.top + offset.top)\n}\n\nexport function getRestrictionRect (\n  value: RectResolvable<[number, number, Interaction]>,\n  interaction: Interaction,\n  coords?: Point,\n) {\n  if (is.func(value)) {\n    return rectUtils.resolveRectLike(value, interaction.interactable, interaction.element, [\n      coords.x,\n      coords.y,\n      interaction,\n    ])\n  } else {\n    return rectUtils.resolveRectLike(value, interaction.interactable, interaction.element)\n  }\n}\n\nconst defaults: RestrictOptions = {\n  restriction: null,\n  elementRect: null,\n  offset: null,\n  endOnly: false,\n  enabled: false,\n}\n\nconst restrict: ModifierModule<RestrictOptions, RestrictState> = {\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(restrict, 'restrict')\nexport { restrict }\n","// This module adds the options.resize.restrictEdges setting which sets min and\n// max for the top, left, bottom and right edges of the target being resized.\n//\n// interact(target).resize({\n//   edges: { top: true, left: true },\n//   restrictEdges: {\n//     inner: { top: 200, left: 200, right: 400, bottom: 400 },\n//     outer: { top:   0, left:   0, right: 600, bottom: 600 },\n//   },\n// })\n\nimport type { Point, Rect } from '@interactjs/types/index'\nimport extend from '@interactjs/utils/extend'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport type { ModifierArg, ModifierState } from '../base'\nimport { makeModifier } from '../base'\n\nimport type { RestrictOptions } from './pointer'\nimport { getRestrictionRect } from './pointer'\n\nexport interface RestrictEdgesOptions {\n  inner: RestrictOptions['restriction']\n  outer: RestrictOptions['restriction']\n  offset?: RestrictOptions['offset']\n  endOnly: boolean\n  enabled?: boolean\n}\n\nexport type RestrictEdgesState = ModifierState<\nRestrictEdgesOptions,\n{\n  inner: Rect\n  outer: Rect\n  offset: RestrictEdgesOptions['offset']\n}\n>\n\nconst noInner = { top: +Infinity, left: +Infinity, bottom: -Infinity, right: -Infinity }\nconst noOuter = { top: -Infinity, left: -Infinity, bottom: +Infinity, right: +Infinity }\n\nfunction start ({ interaction, startOffset, state }: ModifierArg<RestrictEdgesState>) {\n  const { options } = state\n  let offset: Point\n\n  if (options) {\n    const offsetRect = getRestrictionRect(options.offset, interaction, interaction.coords.start.page)\n\n    offset = rectUtils.rectToXY(offsetRect)\n  }\n\n  offset = offset || { x: 0, y: 0 }\n\n  state.offset = {\n    top: offset.y + startOffset.top,\n    left: offset.x + startOffset.left,\n    bottom: offset.y - startOffset.bottom,\n    right: offset.x - startOffset.right,\n  }\n}\n\nfunction set ({ coords, edges, interaction, state }: ModifierArg<RestrictEdgesState>) {\n  const { offset, options } = state\n\n  if (!edges) {\n    return\n  }\n\n  const page = extend({}, coords)\n  const inner = getRestrictionRect(options.inner, interaction, page) || ({} as Rect)\n  const outer = getRestrictionRect(options.outer, interaction, page) || ({} as Rect)\n\n  fixRect(inner, noInner)\n  fixRect(outer, noOuter)\n\n  if (edges.top) {\n    coords.y = Math.min(Math.max(outer.top + offset.top, page.y), inner.top + offset.top)\n  } else if (edges.bottom) {\n    coords.y = Math.max(Math.min(outer.bottom + offset.bottom, page.y), inner.bottom + offset.bottom)\n  }\n  if (edges.left) {\n    coords.x = Math.min(Math.max(outer.left + offset.left, page.x), inner.left + offset.left)\n  } else if (edges.right) {\n    coords.x = Math.max(Math.min(outer.right + offset.right, page.x), inner.right + offset.right)\n  }\n}\n\nfunction fixRect (rect: Rect, defaults: Rect) {\n  for (const edge of ['top', 'left', 'bottom', 'right']) {\n    if (!(edge in rect)) {\n      rect[edge] = defaults[edge]\n    }\n  }\n\n  return rect\n}\n\nconst defaults: RestrictEdgesOptions = {\n  inner: null,\n  outer: null,\n  offset: null,\n  endOnly: false,\n  enabled: false,\n}\n\nconst restrictEdges = {\n  noInner,\n  noOuter,\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(restrictEdges, 'restrictEdges')\nexport { restrictEdges }\n","import extend from '@interactjs/utils/extend'\n\nimport { makeModifier } from '../base'\n\nimport { restrict } from './pointer'\n\nconst defaults = extend(\n  {\n    get elementRect () {\n      return { top: 0, left: 0, bottom: 1, right: 1 }\n    },\n    set elementRect (_) {},\n  },\n  restrict.defaults,\n)\n\nconst restrictRect = {\n  start: restrict.start,\n  set: restrict.set,\n  defaults,\n}\n\nexport default makeModifier(restrictRect, 'restrictRect')\nexport { restrictRect }\n","import type { Point, Rect, Size } from '@interactjs/types/index'\nimport extend from '@interactjs/utils/extend'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport type { ModifierArg, ModifierState } from '../base'\nimport { makeModifier } from '../base'\n\nimport type { RestrictEdgesState } from './edges'\nimport { restrictEdges } from './edges'\nimport type { RestrictOptions } from './pointer'\nimport { getRestrictionRect } from './pointer'\n\nconst noMin = { width: -Infinity, height: -Infinity }\nconst noMax = { width: +Infinity, height: +Infinity }\n\nexport interface RestrictSizeOptions {\n  min?: Size | Point | RestrictOptions['restriction']\n  max?: Size | Point | RestrictOptions['restriction']\n  endOnly: boolean\n  enabled?: boolean\n}\n\nfunction start (arg: ModifierArg<RestrictEdgesState>) {\n  return restrictEdges.start(arg)\n}\n\nexport type RestrictSizeState = RestrictEdgesState &\nModifierState<\nRestrictSizeOptions & { inner: Rect, outer: Rect },\n{\n  min: Rect\n  max: Rect\n}\n>\n\nfunction set (arg: ModifierArg<RestrictSizeState>) {\n  const { interaction, state, rect, edges } = arg\n  const { options } = state\n\n  if (!edges) {\n    return\n  }\n\n  const minSize =\n    rectUtils.tlbrToXywh(getRestrictionRect(options.min as any, interaction, arg.coords)) || noMin\n  const maxSize =\n    rectUtils.tlbrToXywh(getRestrictionRect(options.max as any, interaction, arg.coords)) || noMax\n\n  state.options = {\n    endOnly: options.endOnly,\n    inner: extend({}, restrictEdges.noInner),\n    outer: extend({}, restrictEdges.noOuter),\n  }\n\n  if (edges.top) {\n    state.options.inner.top = rect.bottom - minSize.height\n    state.options.outer.top = rect.bottom - maxSize.height\n  } else if (edges.bottom) {\n    state.options.inner.bottom = rect.top + minSize.height\n    state.options.outer.bottom = rect.top + maxSize.height\n  }\n  if (edges.left) {\n    state.options.inner.left = rect.right - minSize.width\n    state.options.outer.left = rect.right - maxSize.width\n  } else if (edges.right) {\n    state.options.inner.right = rect.left + minSize.width\n    state.options.outer.right = rect.left + maxSize.width\n  }\n\n  restrictEdges.set(arg)\n\n  state.options = options\n}\n\nconst defaults: RestrictSizeOptions = {\n  min: null,\n  max: null,\n  endOnly: false,\n  enabled: false,\n}\n\nconst restrictSize = {\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(restrictSize, 'restrictSize')\nexport { restrictSize }\n","import type { Interaction, InteractionProxy } from '@interactjs/core/Interaction'\nimport type { ActionName } from '@interactjs/core/scope'\nimport type { Point, RectResolvable, Element } from '@interactjs/types/index'\nimport extend from '@interactjs/utils/extend'\nimport getOriginXY from '@interactjs/utils/getOriginXY'\nimport hypot from '@interactjs/utils/hypot'\nimport is from '@interactjs/utils/is'\nimport { resolveRectLike, rectToXY } from '@interactjs/utils/rect'\n\nimport type { ModifierArg, ModifierState } from '../base'\nimport { makeModifier } from '../base'\n\nexport interface Offset {\n  x: number\n  y: number\n  index: number\n  relativePoint?: Point | null\n}\n\nexport interface SnapPosition {\n  x?: number\n  y?: number\n  range?: number\n  offset?: Offset\n  [index: string]: any\n}\n\nexport type SnapFunction = (\n  x: number,\n  y: number,\n  interaction: InteractionProxy<ActionName>,\n  offset: Offset,\n  index: number,\n) => SnapPosition\nexport type SnapTarget = SnapPosition | SnapFunction\nexport interface SnapOptions {\n  targets: SnapTarget[] | null\n  // target range\n  range: number\n  // self points for snapping. [0,0] = top left, [1,1] = bottom right\n  relativePoints: Point[] | null\n  // startCoords = offset snapping from drag start page position\n  offset: Point | RectResolvable<[Interaction]> | 'startCoords' | null\n  offsetWithOrigin?: boolean\n  origin: RectResolvable<[Element]> | Point | null\n  endOnly?: boolean\n  enabled?: boolean\n}\n\nexport type SnapState = ModifierState<\nSnapOptions,\n{\n  offsets?: Offset[]\n  closest?: any\n  targetFields?: string[][]\n}\n>\n\nfunction start (arg: ModifierArg<SnapState>) {\n  const { interaction, interactable, element, rect, state, startOffset } = arg\n  const { options } = state\n  const origin = options.offsetWithOrigin ? getOrigin(arg) : { x: 0, y: 0 }\n\n  let snapOffset: Point\n\n  if (options.offset === 'startCoords') {\n    snapOffset = {\n      x: interaction.coords.start.page.x,\n      y: interaction.coords.start.page.y,\n    }\n  } else {\n    const offsetRect = resolveRectLike(options.offset as any, interactable, element, [interaction])\n\n    snapOffset = rectToXY(offsetRect) || { x: 0, y: 0 }\n    snapOffset.x += origin.x\n    snapOffset.y += origin.y\n  }\n\n  const { relativePoints } = options\n\n  state.offsets =\n    rect && relativePoints && relativePoints.length\n      ? relativePoints.map((relativePoint, index) => ({\n        index,\n        relativePoint,\n        x: startOffset.left - rect.width * relativePoint.x + snapOffset.x,\n        y: startOffset.top - rect.height * relativePoint.y + snapOffset.y,\n      }))\n      : [\n        {\n          index: 0,\n          relativePoint: null,\n          x: snapOffset.x,\n          y: snapOffset.y,\n        },\n      ]\n}\n\nfunction set (arg: ModifierArg<SnapState>) {\n  const { interaction, coords, state } = arg\n  const { options, offsets } = state\n\n  const origin = getOriginXY(interaction.interactable, interaction.element, interaction.prepared.name)\n  const page = extend({}, coords)\n  const targets = []\n\n  if (!options.offsetWithOrigin) {\n    page.x -= origin.x\n    page.y -= origin.y\n  }\n\n  for (const offset of offsets) {\n    const relativeX = page.x - offset.x\n    const relativeY = page.y - offset.y\n\n    for (let index = 0, len = options.targets.length; index < len; index++) {\n      const snapTarget = options.targets[index]\n      let target: SnapPosition\n\n      if (is.func(snapTarget)) {\n        target = snapTarget(relativeX, relativeY, interaction._proxy, offset, index)\n      } else {\n        target = snapTarget\n      }\n\n      if (!target) {\n        continue\n      }\n\n      targets.push({\n        x: (is.number(target.x) ? target.x : relativeX) + offset.x,\n        y: (is.number(target.y) ? target.y : relativeY) + offset.y,\n\n        range: is.number(target.range) ? target.range : options.range,\n        source: snapTarget,\n        index,\n        offset,\n      })\n    }\n  }\n\n  const closest = {\n    target: null,\n    inRange: false,\n    distance: 0,\n    range: 0,\n    delta: { x: 0, y: 0 },\n  }\n\n  for (const target of targets) {\n    const range = target.range\n    const dx = target.x - page.x\n    const dy = target.y - page.y\n    const distance = hypot(dx, dy)\n    let inRange = distance <= range\n\n    // Infinite targets count as being out of range\n    // compared to non infinite ones that are in range\n    if (range === Infinity && closest.inRange && closest.range !== Infinity) {\n      inRange = false\n    }\n\n    if (\n      !closest.target ||\n      (inRange\n        ? // is the closest target in range?\n        closest.inRange && range !== Infinity\n          ? // the pointer is relatively deeper in this target\n          distance / range < closest.distance / closest.range\n          : // this target has Infinite range and the closest doesn't\n          (range === Infinity && closest.range !== Infinity) ||\n            // OR this target is closer that the previous closest\n            distance < closest.distance\n        : // The other is not in range and the pointer is closer to this target\n        !closest.inRange && distance < closest.distance)\n    ) {\n      closest.target = target\n      closest.distance = distance\n      closest.range = range\n      closest.inRange = inRange\n      closest.delta.x = dx\n      closest.delta.y = dy\n    }\n  }\n\n  if (closest.inRange) {\n    coords.x = closest.target.x\n    coords.y = closest.target.y\n  }\n\n  state.closest = closest\n  return closest\n}\n\nfunction getOrigin (arg: Partial<ModifierArg<SnapState>>) {\n  const { element } = arg.interaction\n  const optionsOrigin = rectToXY(resolveRectLike(arg.state.options.origin as any, null, null, [element]))\n  const origin = optionsOrigin || getOriginXY(arg.interactable, element, arg.interaction.prepared.name)\n\n  return origin\n}\n\nconst defaults: SnapOptions = {\n  range: Infinity,\n  targets: null,\n  offset: null,\n  offsetWithOrigin: true,\n  origin: null,\n  relativePoints: null,\n  endOnly: false,\n  enabled: false,\n}\nconst snap = {\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(snap, 'snap')\nexport { snap }\n","// This module allows snapping of the size of targets during resize\n// interactions.\n\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\n\nimport type { ModifierArg } from '../base'\nimport { makeModifier } from '../base'\n\nimport type { SnapOptions, SnapState } from './pointer'\nimport { snap } from './pointer'\n\nexport type SnapSizeOptions = Pick<SnapOptions, 'targets' | 'offset' | 'endOnly' | 'range' | 'enabled'>\n\nfunction start (arg: ModifierArg<SnapState>) {\n  const { state, edges } = arg\n  const { options } = state\n\n  if (!edges) {\n    return null\n  }\n\n  arg.state = {\n    options: {\n      targets: null,\n      relativePoints: [\n        {\n          x: edges.left ? 0 : 1,\n          y: edges.top ? 0 : 1,\n        },\n      ],\n      offset: options.offset || 'self',\n      origin: { x: 0, y: 0 },\n      range: options.range,\n    },\n  }\n\n  state.targetFields = state.targetFields || [\n    ['width', 'height'],\n    ['x', 'y'],\n  ]\n\n  snap.start(arg)\n  state.offsets = arg.state.offsets\n\n  arg.state = state\n}\n\nfunction set (arg) {\n  const { interaction, state, coords } = arg\n  const { options, offsets } = state\n  const relative = {\n    x: coords.x - offsets[0].x,\n    y: coords.y - offsets[0].y,\n  }\n\n  state.options = extend({}, options)\n  state.options.targets = []\n\n  for (const snapTarget of options.targets || []) {\n    let target\n\n    if (is.func(snapTarget)) {\n      target = snapTarget(relative.x, relative.y, interaction)\n    } else {\n      target = snapTarget\n    }\n\n    if (!target) {\n      continue\n    }\n\n    for (const [xField, yField] of state.targetFields) {\n      if (xField in target || yField in target) {\n        target.x = target[xField]\n        target.y = target[yField]\n\n        break\n      }\n    }\n\n    state.options.targets.push(target)\n  }\n\n  const returnValue = snap.set(arg)\n\n  state.options = options\n\n  return returnValue\n}\n\nconst defaults: SnapSizeOptions = {\n  range: Infinity,\n  targets: null,\n  offset: null,\n  endOnly: false,\n  enabled: false,\n}\n\nconst snapSize = {\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(snapSize, 'snapSize')\nexport { snapSize }\n","/**\n * @module modifiers/snapEdges\n *\n * @description\n * WOW> This module allows snapping of the edges of targets during resize\n * interactions.\n *\n * ```js\n * interact(target).resizable({\n *   snapEdges: {\n *     targets: [interact.snappers.grid({ x: 100, y: 50 })],\n *   },\n * })\n *\n * interact(target).resizable({\n *   snapEdges: {\n *     targets: [\n *       interact.snappers.grid({\n *        top: 50,\n *        left: 50,\n *        bottom: 100,\n *        right: 100,\n *       }),\n *     ],\n *   },\n * })\n * ```\n */\n\nimport clone from '@interactjs/utils/clone'\nimport extend from '@interactjs/utils/extend'\n\nimport type { ModifierArg, ModifierModule } from '../base'\nimport { makeModifier } from '../base'\n\nimport type { SnapOptions, SnapState } from './pointer'\nimport { snapSize } from './size'\n\nexport type SnapEdgesOptions = Pick<SnapOptions, 'targets' | 'range' | 'offset' | 'endOnly' | 'enabled'>\n\nfunction start (arg: ModifierArg<SnapState>) {\n  const { edges } = arg\n\n  if (!edges) {\n    return null\n  }\n\n  arg.state.targetFields = arg.state.targetFields || [\n    [edges.left ? 'left' : 'right', edges.top ? 'top' : 'bottom'],\n  ]\n\n  return snapSize.start(arg)\n}\n\nconst snapEdges: ModifierModule<SnapEdgesOptions, SnapState, ReturnType<typeof snapSize.set>> = {\n  start,\n  set: snapSize.set,\n  defaults: extend(clone(snapSize.defaults), {\n    targets: null,\n    range: null,\n    offset: { x: 0, y: 0 },\n  } as const),\n}\n\nexport default makeModifier(snapEdges, 'snapEdges')\nexport { snapEdges }\n","/* eslint-disable node/no-extraneous-import, import/no-unresolved */\nimport aspectRatio from './aspectRatio'\nimport avoid from './avoid/avoid'\nimport restrictEdges from './restrict/edges'\nimport restrict from './restrict/pointer'\nimport restrictRect from './restrict/rect'\nimport restrictSize from './restrict/size'\nimport rubberband from './rubberband/rubberband'\nimport snapEdges from './snap/edges'\nimport snap from './snap/pointer'\nimport snapSize from './snap/size'\nimport spring from './spring/spring'\nimport transform from './transform/transform'\n\nexport default {\n  aspectRatio,\n  restrictEdges,\n  restrict,\n  restrictRect,\n  restrictSize,\n  snapEdges,\n  snap,\n  snapSize,\n\n  spring,\n  avoid,\n  transform,\n  rubberband,\n}\n","import type { Plugin } from '@interactjs/core/scope'\nimport snappers from '@interactjs/snappers/plugin'\n\nimport all from './all'\nimport base from './base'\n\ndeclare module '@interactjs/core/InteractStatic' {\n  export interface InteractStatic {\n    modifiers: typeof all\n  }\n}\n\nconst modifiers: Plugin = {\n  id: 'modifiers',\n  install (scope) {\n    const { interactStatic: interact } = scope\n\n    scope.usePlugin(base)\n    scope.usePlugin(snappers)\n\n    interact.modifiers = all\n\n    // for backwrads compatibility\n    for (const type in all) {\n      const { _defaults, _methods } = all[type as keyof typeof all]\n\n      ;(_defaults as any)._methods = _methods\n      ;(scope.defaults.perAction as any)[type] = _defaults\n    }\n  },\n}\n\nexport default modifiers\n","import { BaseEvent } from '@interactjs/core/BaseEvent'\nimport type Interaction from '@interactjs/core/Interaction'\nimport type { PointerEventType, PointerType, Point } from '@interactjs/types/index'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\nexport default class PointerEvent<T extends string = any> extends BaseEvent<never> {\n  type: T\n  originalEvent: PointerEventType\n  pointerId: number\n  pointerType: string\n  double: boolean\n  pageX: number\n  pageY: number\n  clientX: number\n  clientY: number\n  dt: number\n  eventable: any;\n  [key: string]: any\n\n  /** */\n  constructor (\n    type: T,\n    pointer: PointerType | PointerEvent<any>,\n    event: PointerEventType,\n    eventTarget: Node,\n    interaction: Interaction<never>,\n    timeStamp: number,\n  ) {\n    super(interaction)\n    pointerUtils.pointerExtend(this, event)\n\n    if (event !== pointer) {\n      pointerUtils.pointerExtend(this, pointer)\n    }\n\n    this.timeStamp = timeStamp\n    this.originalEvent = event\n    this.type = type\n    this.pointerId = pointerUtils.getPointerId(pointer)\n    this.pointerType = pointerUtils.getPointerType(pointer)\n    this.target = eventTarget\n    this.currentTarget = null\n\n    if (type === 'tap') {\n      const pointerIndex = interaction.getPointerIndex(pointer)\n      this.dt = this.timeStamp - interaction.pointers[pointerIndex].downTime\n\n      const interval = this.timeStamp - interaction.tapTime\n\n      this.double = !!(\n        interaction.prevTap &&\n        interaction.prevTap.type !== 'doubletap' &&\n        interaction.prevTap.target === this.target &&\n        interval < 500\n      )\n    } else if (type === 'doubletap') {\n      this.dt = (pointer as PointerEvent<'tap'>).timeStamp - interaction.tapTime\n    }\n  }\n\n  _subtractOrigin ({ x: originX, y: originY }: Point) {\n    this.pageX -= originX\n    this.pageY -= originY\n    this.clientX -= originX\n    this.clientY -= originY\n\n    return this\n  }\n\n  _addOrigin ({ x: originX, y: originY }: Point) {\n    this.pageX += originX\n    this.pageY += originY\n    this.clientX += originX\n    this.clientY += originY\n\n    return this\n  }\n\n  /**\n   * Prevent the default behaviour of the original Event\n   */\n  preventDefault () {\n    this.originalEvent.preventDefault()\n  }\n}\n\nexport { PointerEvent }\n","import type { Eventable } from '@interactjs/core/Eventable'\nimport type { Interaction } from '@interactjs/core/Interaction'\nimport type { PerActionDefaults } from '@interactjs/core/options'\nimport type { Scope, SignalArgs, Plugin } from '@interactjs/core/scope'\nimport type { Point, PointerType, PointerEventType, Element } from '@interactjs/types'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport getOriginXY from '@interactjs/utils/getOriginXY'\n\nimport { PointerEvent } from './PointerEvent'\n\nexport type EventTargetList = Array<{\n  node: Node\n  eventable: Eventable\n  props: { [key: string]: any }\n}>\n\nexport interface PointerEventOptions extends PerActionDefaults {\n  enabled?: undefined // not used\n  holdDuration?: number\n  ignoreFrom?: any\n  allowFrom?: any\n  origin?: Point | string | Element\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    pointerEvents: typeof pointerEvents\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    prevTap?: PointerEvent<string>\n    tapTime?: number\n  }\n}\n\ndeclare module '@interactjs/core/PointerInfo' {\n  interface PointerInfo {\n    hold?: {\n      duration: number\n      timeout: any\n    }\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface ActionDefaults {\n    pointerEvents: Options\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'pointerEvents:new': { pointerEvent: PointerEvent<any> }\n    'pointerEvents:fired': {\n      interaction: Interaction<null>\n      pointer: PointerType | PointerEvent<any>\n      event: PointerEventType | PointerEvent<any>\n      eventTarget: Node\n      pointerEvent: PointerEvent<any>\n      targets?: EventTargetList\n      type: string\n    }\n    'pointerEvents:collect-targets': {\n      interaction: Interaction<any>\n      pointer: PointerType | PointerEvent<any>\n      event: PointerEventType | PointerEvent<any>\n      eventTarget: Node\n      targets?: EventTargetList\n      type: string\n      path: Node[]\n      node: null\n    }\n  }\n}\n\nconst defaults: PointerEventOptions = {\n  holdDuration: 600,\n  ignoreFrom: null,\n  allowFrom: null,\n  origin: { x: 0, y: 0 },\n}\n\nconst pointerEvents: Plugin = {\n  id: 'pointer-events/base',\n  before: ['inertia', 'modifiers', 'auto-start', 'actions'],\n  install,\n  listeners: {\n    'interactions:new': addInteractionProps,\n    'interactions:update-pointer': addHoldInfo,\n    'interactions:move': moveAndClearHold,\n    'interactions:down': (arg, scope) => {\n      downAndStartHold(arg, scope)\n      fire(arg, scope)\n    },\n    'interactions:up': (arg, scope) => {\n      clearHold(arg)\n      fire(arg, scope)\n      tapAfterUp(arg, scope)\n    },\n    'interactions:cancel': (arg, scope) => {\n      clearHold(arg)\n      fire(arg, scope)\n    },\n  },\n  PointerEvent,\n  fire,\n  collectEventTargets,\n  defaults,\n  types: {\n    down: true,\n    move: true,\n    up: true,\n    cancel: true,\n    tap: true,\n    doubletap: true,\n    hold: true,\n  } as { [type: string]: true },\n}\n\nfunction fire<T extends string> (\n  arg: {\n    pointer: PointerType | PointerEvent<any>\n    event: PointerEventType | PointerEvent<any>\n    eventTarget: Node\n    interaction: Interaction<never>\n    type: T\n    targets?: EventTargetList\n  },\n  scope: Scope,\n) {\n  const { interaction, pointer, event, eventTarget, type, targets = collectEventTargets(arg, scope) } = arg\n\n  const pointerEvent = new PointerEvent(type, pointer, event, eventTarget, interaction, scope.now())\n\n  scope.fire('pointerEvents:new', { pointerEvent })\n\n  const signalArg = {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    targets,\n    type,\n    pointerEvent,\n  }\n\n  for (let i = 0; i < targets.length; i++) {\n    const target = targets[i]\n\n    for (const prop in target.props || {}) {\n      ;(pointerEvent as any)[prop] = target.props[prop]\n    }\n\n    const origin = getOriginXY(target.eventable, target.node)\n\n    pointerEvent._subtractOrigin(origin)\n    pointerEvent.eventable = target.eventable\n    pointerEvent.currentTarget = target.node\n\n    target.eventable.fire(pointerEvent)\n\n    pointerEvent._addOrigin(origin)\n\n    if (\n      pointerEvent.immediatePropagationStopped ||\n      (pointerEvent.propagationStopped &&\n        i + 1 < targets.length &&\n        targets[i + 1].node !== pointerEvent.currentTarget)\n    ) {\n      break\n    }\n  }\n\n  scope.fire('pointerEvents:fired', signalArg)\n\n  if (type === 'tap') {\n    // if pointerEvent should make a double tap, create and fire a doubletap\n    // PointerEvent and use that as the prevTap\n    const prevTap = pointerEvent.double\n      ? fire(\n        {\n          interaction,\n          pointer,\n          event,\n          eventTarget,\n          type: 'doubletap',\n        },\n        scope,\n      )\n      : pointerEvent\n\n    interaction.prevTap = prevTap\n    interaction.tapTime = prevTap.timeStamp\n  }\n\n  return pointerEvent\n}\n\nfunction collectEventTargets<T extends string> (\n  {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    type,\n  }: {\n    interaction: Interaction<any>\n    pointer: PointerType | PointerEvent<any>\n    event: PointerEventType | PointerEvent<any>\n    eventTarget: Node\n    type: T\n  },\n  scope: Scope,\n) {\n  const pointerIndex = interaction.getPointerIndex(pointer)\n  const pointerInfo = interaction.pointers[pointerIndex]\n\n  // do not fire a tap event if the pointer was moved before being lifted\n  if (\n    type === 'tap' &&\n    (interaction.pointerWasMoved ||\n      // or if the pointerup target is different to the pointerdown target\n      !(pointerInfo && pointerInfo.downTarget === eventTarget))\n  ) {\n    return []\n  }\n\n  const path = domUtils.getPath(eventTarget as Element | Document)\n  const signalArg = {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    type,\n    path,\n    targets: [] as EventTargetList,\n    node: null,\n  }\n\n  for (const node of path) {\n    signalArg.node = node\n\n    scope.fire('pointerEvents:collect-targets', signalArg)\n  }\n\n  if (type === 'hold') {\n    signalArg.targets = signalArg.targets.filter(\n      (target) => target.eventable.options.holdDuration === interaction.pointers[pointerIndex]?.hold.duration,\n    )\n  }\n\n  return signalArg.targets\n}\n\nfunction addInteractionProps ({ interaction }) {\n  interaction.prevTap = null // the most recent tap event on this interaction\n  interaction.tapTime = 0 // time of the most recent tap event\n}\n\nfunction addHoldInfo ({ down, pointerInfo }: SignalArgs['interactions:update-pointer']) {\n  if (!down && pointerInfo.hold) {\n    return\n  }\n\n  pointerInfo.hold = { duration: Infinity, timeout: null }\n}\n\nfunction clearHold ({ interaction, pointerIndex }) {\n  const hold = interaction.pointers[pointerIndex].hold\n\n  if (hold && hold.timeout) {\n    clearTimeout(hold.timeout)\n    hold.timeout = null\n  }\n}\n\nfunction moveAndClearHold (arg: SignalArgs['interactions:move'], scope: Scope) {\n  const { interaction, pointer, event, eventTarget, duplicate } = arg\n\n  if (!duplicate && (!interaction.pointerIsDown || interaction.pointerWasMoved)) {\n    if (interaction.pointerIsDown) {\n      clearHold(arg)\n    }\n\n    fire(\n      {\n        interaction,\n        pointer,\n        event,\n        eventTarget: eventTarget as Element,\n        type: 'move',\n      },\n      scope,\n    )\n  }\n}\n\nfunction downAndStartHold (\n  { interaction, pointer, event, eventTarget, pointerIndex }: SignalArgs['interactions:down'],\n  scope: Scope,\n) {\n  const timer = interaction.pointers[pointerIndex].hold\n  const path = domUtils.getPath(eventTarget as Element | Document)\n  const signalArg = {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    type: 'hold',\n    targets: [] as EventTargetList,\n    path,\n    node: null,\n  }\n\n  for (const node of path) {\n    signalArg.node = node\n\n    scope.fire('pointerEvents:collect-targets', signalArg)\n  }\n\n  if (!signalArg.targets.length) return\n\n  let minDuration = Infinity\n\n  for (const target of signalArg.targets) {\n    const holdDuration = target.eventable.options.holdDuration\n\n    if (holdDuration < minDuration) {\n      minDuration = holdDuration\n    }\n  }\n\n  timer.duration = minDuration\n  timer.timeout = setTimeout(() => {\n    fire(\n      {\n        interaction,\n        eventTarget,\n        pointer,\n        event,\n        type: 'hold',\n      },\n      scope,\n    )\n  }, minDuration)\n}\n\nfunction tapAfterUp (\n  { interaction, pointer, event, eventTarget }: SignalArgs['interactions:up'],\n  scope: Scope,\n) {\n  if (!interaction.pointerWasMoved) {\n    fire({ interaction, eventTarget, pointer, event, type: 'tap' }, scope)\n  }\n}\n\nfunction install (scope: Scope) {\n  scope.pointerEvents = pointerEvents\n  scope.defaults.actions.pointerEvents = pointerEvents.defaults\n  extend(scope.actions.phaselessTypes, pointerEvents.types)\n}\n\nexport default pointerEvents\n","import type Interaction from '@interactjs/core/Interaction'\nimport type { ListenerMap, Scope, SignalArgs, Plugin } from '@interactjs/core/scope'\n\nimport type PointerEvent from './PointerEvent'\nimport basePlugin from './base'\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    holdIntervalHandle?: any\n  }\n}\n\ndeclare module '@interactjs/pointer-events/PointerEvent' {\n  interface PointerEvent<T extends string = any> {\n    count?: number\n  }\n}\n\ndeclare module '@interactjs/pointer-events/base' {\n  interface PointerEventOptions {\n    holdRepeatInterval?: number\n  }\n}\n\nfunction install (scope: Scope) {\n  scope.usePlugin(basePlugin)\n\n  const { pointerEvents } = scope\n\n  // don't repeat by default\n  pointerEvents.defaults.holdRepeatInterval = 0\n  pointerEvents.types.holdrepeat = scope.actions.phaselessTypes.holdrepeat = true\n}\n\nfunction onNew ({ pointerEvent }: { pointerEvent: PointerEvent<any> }) {\n  if (pointerEvent.type !== 'hold') return\n\n  pointerEvent.count = (pointerEvent.count || 0) + 1\n}\n\nfunction onFired (\n  { interaction, pointerEvent, eventTarget, targets }: SignalArgs['pointerEvents:fired'],\n  scope: Scope,\n) {\n  if (pointerEvent.type !== 'hold' || !targets.length) return\n\n  // get the repeat interval from the first eventable\n  const interval = targets[0].eventable.options.holdRepeatInterval\n\n  // don't repeat if the interval is 0 or less\n  if (interval <= 0) return\n\n  // set a timeout to fire the holdrepeat event\n  interaction.holdIntervalHandle = setTimeout(() => {\n    scope.pointerEvents.fire(\n      {\n        interaction,\n        eventTarget,\n        type: 'hold',\n        pointer: pointerEvent,\n        event: pointerEvent,\n      },\n      scope,\n    )\n  }, interval)\n}\n\nfunction endHoldRepeat ({ interaction }: { interaction: Interaction }) {\n  // set the interaction's holdStopTime property\n  // to stop further holdRepeat events\n  if (interaction.holdIntervalHandle) {\n    clearInterval(interaction.holdIntervalHandle)\n    interaction.holdIntervalHandle = null\n  }\n}\n\nconst holdRepeat: Plugin = {\n  id: 'pointer-events/holdRepeat',\n  install,\n  listeners: ['move', 'up', 'cancel', 'endall'].reduce(\n    (acc, enderTypes) => {\n      ;(acc as any)[`pointerEvents:${enderTypes}`] = endHoldRepeat\n      return acc\n    },\n    {\n      'pointerEvents:new': onNew,\n      'pointerEvents:fired': onFired,\n    } as ListenerMap,\n  ),\n}\n\nexport default holdRepeat\n","import type { Interactable } from '@interactjs/core/Interactable'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { Element } from '@interactjs/types/index'\nimport extend from '@interactjs/utils/extend'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    pointerEvents: typeof pointerEventsMethod\n    __backCompatOption: (optionName: string, newValue: any) => any\n  }\n}\n\nfunction install (scope: Scope) {\n  const { Interactable } = scope\n\n  Interactable.prototype.pointerEvents = pointerEventsMethod\n\n  const __backCompatOption = Interactable.prototype._backCompatOption\n\n  Interactable.prototype._backCompatOption = function (optionName, newValue) {\n    const ret = __backCompatOption.call(this, optionName, newValue)\n\n    if (ret === this) {\n      this.events.options[optionName] = newValue\n    }\n\n    return ret\n  }\n}\n\nfunction pointerEventsMethod (this: Interactable, options: any) {\n  extend(this.events.options, options)\n\n  return this\n}\n\nconst plugin: Plugin = {\n  id: 'pointer-events/interactableTargets',\n  install,\n  listeners: {\n    'pointerEvents:collect-targets': ({ targets, node, type, eventTarget }, scope) => {\n      scope.interactables.forEachMatch(node, (interactable: Interactable) => {\n        const eventable = interactable.events\n        const options = eventable.options\n\n        if (\n          eventable.types[type] &&\n          eventable.types[type].length &&\n          interactable.testIgnoreAllow(options, node, eventTarget)\n        ) {\n          targets.push({\n            node,\n            eventable,\n            props: { interactable },\n          })\n        }\n      })\n    },\n\n    'interactable:new': ({ interactable }) => {\n      interactable.events.getRect = function (element: Element) {\n        return interactable.getRect(element)\n      }\n    },\n\n    'interactable:set': ({ interactable, options }, scope) => {\n      extend(interactable.events.options, scope.pointerEvents.defaults)\n      extend(interactable.events.options, options.pointerEvents || {})\n    },\n  },\n}\n\nexport default plugin\n","import type { Plugin } from '@interactjs/core/scope'\n\nimport * as pointerEvents from './base'\nimport holdRepeat from './holdRepeat'\nimport interactableTargets from './interactableTargets'\n\nconst plugin: Plugin = {\n  id: 'pointer-events',\n  install (scope) {\n    scope.usePlugin(pointerEvents)\n    scope.usePlugin(holdRepeat)\n    scope.usePlugin(interactableTargets)\n  },\n}\n\nexport default plugin\n","import type { Interactable } from '@interactjs/core/Interactable'\nimport type { ActionProps, DoAnyPhaseArg, Interaction } from '@interactjs/core/Interaction'\nimport type { ActionName, Scope, Plugin } from '@interactjs/core/scope'\nimport type { Element } from '@interactjs/types/index'\nimport * as arr from '@interactjs/utils/arr'\nimport is from '@interactjs/utils/is'\nimport { copyAction } from '@interactjs/utils/misc'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\nimport { tlbrToXywh } from '@interactjs/utils/rect'\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactions:before-action-reflow': Omit<DoAnyPhaseArg, 'iEvent'>\n    'interactions:action-reflow': DoAnyPhaseArg\n    'interactions:after-action-reflow': DoAnyPhaseArg\n  }\n}\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    reflow: <T extends ActionName>(action: ActionProps<T>) => ReturnType<typeof doReflow>\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    _reflowPromise: Promise<void>\n    _reflowResolve: (...args: unknown[]) => void\n  }\n}\n\ndeclare module '@interactjs/core/InteractEvent' {\n  interface PhaseMap {\n    reflow?: true\n  }\n}\n\nexport function install (scope: Scope) {\n  const {\n    /** @lends Interactable */\n    Interactable,\n  } = scope\n\n  scope.actions.phases.reflow = true\n\n  /**\n   * ```js\n   * const interactable = interact(target)\n   * const drag = { name: drag, axis: 'x' }\n   * const resize = { name: resize, edges: { left: true, bottom: true }\n   *\n   * interactable.reflow(drag)\n   * interactable.reflow(resize)\n   * ```\n   *\n   * Start an action sequence to re-apply modifiers, check drops, etc.\n   *\n   * @param { Object } action The action to begin\n   * @param { string } action.name The name of the action\n   * @returns { Promise } A promise that resolves to the `Interactable` when actions on all targets have ended\n   */\n  Interactable.prototype.reflow = function (action: ActionProps) {\n    return doReflow(this, action, scope)\n  }\n}\n\nfunction doReflow<T extends ActionName> (\n  interactable: Interactable,\n  action: ActionProps<T>,\n  scope: Scope,\n): Promise<Interactable> {\n  const elements = (is.string(interactable.target)\n    ? arr.from(interactable._context.querySelectorAll(interactable.target))\n    : [interactable.target]) as Element[]\n\n  // tslint:disable-next-line variable-name\n  const Promise = (scope.window as any).Promise\n  const promises: Array<Promise<null>> | null = Promise ? [] : null\n\n  for (const element of elements) {\n    const rect = interactable.getRect(element as HTMLElement | SVGElement)\n\n    if (!rect) {\n      break\n    }\n\n    const runningInteraction = arr.find(scope.interactions.list, (interaction: Interaction) => {\n      return (\n        interaction.interacting() &&\n        interaction.interactable === interactable &&\n        interaction.element === element &&\n        interaction.prepared.name === action.name\n      )\n    })\n    let reflowPromise: Promise<null>\n\n    if (runningInteraction) {\n      runningInteraction.move()\n\n      if (promises) {\n        reflowPromise =\n          runningInteraction._reflowPromise ||\n          new Promise((resolve: any) => {\n            runningInteraction._reflowResolve = resolve\n          })\n      }\n    } else {\n      const xywh = tlbrToXywh(rect)\n      const coords = {\n        page: { x: xywh.x, y: xywh.y },\n        client: { x: xywh.x, y: xywh.y },\n        timeStamp: scope.now(),\n      }\n\n      const event = pointerUtils.coordsToEvent(coords)\n      reflowPromise = startReflow<T>(scope, interactable, element, action, event)\n    }\n\n    if (promises) {\n      promises.push(reflowPromise)\n    }\n  }\n\n  return promises && Promise.all(promises).then(() => interactable)\n}\n\nfunction startReflow<T extends ActionName> (\n  scope: Scope,\n  interactable: Interactable,\n  element: Element,\n  action: ActionProps<T>,\n  event: any,\n) {\n  const interaction = scope.interactions.new({ pointerType: 'reflow' })\n  const signalArg = {\n    interaction,\n    event,\n    pointer: event,\n    eventTarget: element,\n    phase: 'reflow',\n  } as const\n\n  interaction.interactable = interactable\n  interaction.element = element\n  interaction.prevEvent = event\n  interaction.updatePointer(event, event, element, true)\n  pointerUtils.setZeroCoords(interaction.coords.delta)\n\n  copyAction(interaction.prepared, action)\n  interaction._doPhase(signalArg)\n\n  const { Promise } = (scope.window as unknown) as { Promise: PromiseConstructor }\n  const reflowPromise = Promise\n    ? new Promise<undefined>((resolve) => {\n      interaction._reflowResolve = resolve\n    })\n    : undefined\n\n  interaction._reflowPromise = reflowPromise\n  interaction.start(action, interactable, element)\n\n  if (interaction._interacting) {\n    interaction.move(signalArg)\n    interaction.end(event)\n  } else {\n    interaction.stop()\n    interaction._reflowResolve()\n  }\n\n  interaction.removePointer(event, event)\n\n  return reflowPromise\n}\n\nconst reflow: Plugin = {\n  id: 'reflow',\n  install,\n  listeners: {\n    // remove completed reflow interactions\n    'interactions:stop': ({ interaction }, scope) => {\n      if (interaction.pointerType === 'reflow') {\n        if (interaction._reflowResolve) {\n          interaction._reflowResolve()\n        }\n\n        arr.remove(scope.interactions.list, interaction)\n      }\n    },\n  },\n}\n\nexport default reflow\n","import actions from '@interactjs/actions/plugin'\nimport autoScroll from '@interactjs/auto-scroll/plugin'\nimport autoStart from '@interactjs/auto-start/plugin'\nimport interactablePreventDefault from '@interactjs/core/interactablePreventDefault'\nimport devTools from '@interactjs/dev-tools/plugin'\nimport inertia from '@interactjs/inertia/plugin'\nimport interact from '@interactjs/interact'\nimport modifiers from '@interactjs/modifiers/plugin'\nimport offset from '@interactjs/offset/plugin'\nimport pointerEvents from '@interactjs/pointer-events/plugin'\nimport reflow from '@interactjs/reflow/plugin'\n\ninteract.use(interactablePreventDefault)\n\ninteract.use(offset)\n\n// pointerEvents\ninteract.use(pointerEvents)\n\n// inertia\ninteract.use(inertia)\n\n// snap, resize, etc.\ninteract.use(modifiers)\n\n// autoStart, hold\ninteract.use(autoStart)\n\n// drag and drop, resize, gesture\ninteract.use(actions)\n\n// autoScroll\ninteract.use(autoScroll)\n\n// reflow\ninteract.use(reflow)\n\n// eslint-disable-next-line no-undef\nif (process.env.NODE_ENV !== 'production') {\n  interact.use(devTools)\n}\n\nexport default interact\n\nif (typeof module === 'object' && !!module) {\n  try {\n    module.exports = interact\n  } catch {}\n}\n\n;(interact as any).default = interact\n","// eslint-disable-next-line import/no-extraneous-dependencies\nimport interact from '@interactjs/interactjs/index'\n\nexport default interact\n\nif (typeof module === 'object' && !!module) {\n  try {\n    module.exports = interact\n  } catch {}\n}\n\n;(interact as any).default = interact\n","\nreturn _$index_79;\n\n});\n"],"names":[],"version":3,"file":"index.a85ea012.js.map","sourceRoot":"/__parcel_source_root/"}